cbuffer cb0_t : register(b160)
{
    float4 cb0_m[14] : packoffset(c0);
};

cbuffer cb6_t : register(b166)
{
    float4 cb6_m[4] : packoffset(c0);
};

uniform float4 gl_HalfPixel;

static float4 gl_Position;
static float gl_PointSize;
static float3 v0;
static int2 v1;
static float3 v2;
static float3 v3;
static float3 v4;
static float3 v5;

struct SPIRV_Cross_Input
{
    float3 v0 : TEXCOORD0;
    float2 v1 : TEXCOORD1;
    float3 v2 : TEXCOORD2;
    float3 v3 : TEXCOORD3;
    float3 v4 : TEXCOORD4;
    float3 v5 : TEXCOORD5;
};

struct SPIRV_Cross_Output
{
    float4 gl_Position : POSITION;
    float gl_PointSize : PSIZE;
};

static float4 shader_in[6];
static float4 o0;
static float4 o1;
static float4 o2;
static float4 o3;
static float4 o4;
static float3 o5;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;
static float4 r5;

void vs_main()
{
    float4 _52 = r0;
    _52.x = shader_in[4].x * asfloat(1082130432u);
    r0 = _52;
    float3 _65 = (r0.xxx * shader_in[3].xyz) + shader_in[0].xyz;
    r0 = float4(_65.x, _65.y, _65.z, r0.w);
    float4 _70 = r0;
    _70.w = asfloat(1065353216u);
    r0 = _70;
    float4 _87 = float4(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z, cb6_m[0].w);
    float4 _102 = r1;
    _102.x = mad(_87.w, r0.w, mad(_87.z, r0.z, mad(_87.y, r0.y, _87.x * r0.x)));
    r1 = _102;
    float4 _114 = float4(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z, cb6_m[2].w);
    float4 _128 = r1;
    _128.z = mad(_114.w, r0.w, mad(_114.z, r0.z, mad(_114.y, r0.y, _114.x * r0.x)));
    r1 = _128;
    float4 _140 = float4(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z, cb6_m[1].w);
    float4 _154 = r1;
    _154.y = mad(_140.w, r0.w, mad(_140.z, r0.z, mad(_140.y, r0.y, _140.x * r0.x)));
    r1 = _154;
    float4 _157 = r1;
    _157.w = asfloat(1065353216u);
    r1 = _157;
    float4 _168 = float4(cb0_m[0].x, cb0_m[0].y, cb0_m[0].z, cb0_m[0].w);
    float4 _182 = o0;
    _182.x = mad(_168.w, r1.w, mad(_168.z, r1.z, mad(_168.y, r1.y, _168.x * r1.x)));
    o0 = _182;
    float4 _193 = float4(cb0_m[1].x, cb0_m[1].y, cb0_m[1].z, cb0_m[1].w);
    float4 _207 = o0;
    _207.y = mad(_193.w, r1.w, mad(_193.z, r1.z, mad(_193.y, r1.y, _193.x * r1.x)));
    o0 = _207;
    float4 _218 = float4(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z, cb0_m[2].w);
    float4 _232 = o0;
    _232.z = mad(_218.w, r1.w, mad(_218.z, r1.z, mad(_218.y, r1.y, _218.x * r1.x)));
    o0 = _232;
    float4 _243 = float4(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z, cb0_m[3].w);
    float4 _257 = o0;
    _257.w = mad(_243.w, r1.w, mad(_243.z, r1.z, mad(_243.y, r1.y, _243.x * r1.x)));
    o0 = _257;
    float3 _271 = (-r1.xyz) + float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z);
    r0 = float4(_271.x, _271.y, _271.z, r0.w);
    float3 _285 = r1.xyz + (-float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z));
    r1 = float4(_285.x, r1.y, _285.y, _285.z);
    float4 _298 = r0;
    _298.w = asfloat((cb6_m[3].w < r1.y) ? 4294967295u : 0u);
    r0 = _298;
    float3 _305 = o5;
    _305.x = asfloat(asuint(r0.w) & 1065353216u);
    o5 = _305;
    float4 _320 = r0;
    _320.w = mad(r0.xyz.z, r0.xyz.z, mad(r0.xyz.y, r0.xyz.y, r0.xyz.x * r0.xyz.x));
    r0 = _320;
    float4 _325 = r1;
    _325.y = rsqrt(r0.w);
    r1 = _325;
    float4 _330 = r0;
    _330.w = sqrt(r0.w);
    r0 = _330;
    float4 _337 = r0;
    _337.w = r0.w + asfloat(3221225472u);
    r0 = _337;
    float4 _347 = o3;
    _347.w = clamp(r0.w * asfloat(1015889355u), 0.0f, 1.0f);
    o3 = _347;
    float4 _357 = r0;
    _357.w = ((-r0.y) * r1.y) + asfloat(1065353216u);
    r0 = _357;
    float3 _363 = r0.xyz * r1.yyy;
    r0 = float4(_363.x, _363.y, _363.z, r0.w);
    float4 _374 = r0;
    _374.w = asfloat((abs(r0.w) < asfloat(981668463u)) ? 4294967295u : 0u);
    r0 = _374;
    float4 _383 = r1;
    _383.y = asfloat((abs(r0.x) < asfloat(981668463u)) ? 4294967295u : 0u);
    r1 = _383;
    float4 _393 = r2;
    _393.x = asfloat((asfloat(0u) == abs(r0.z)) ? 0u : 4294967295u);
    r2 = _393;
    float4 _403 = r1;
    _403.y = asfloat(asuint(r1.y) & asuint(r2.x));
    r1 = _403;
    float4 _413 = r0;
    _413.w = asfloat(asuint(r0.w) & asuint(r1.y));
    r0 = _413;
    uint3 _418 = asuint(r0.www);
    float3 _420 = asfloat(uint3(0u, 0u, 1065353216u));
    float3 _422 = asfloat(uint3(1065353216u, 0u, 0u));
    bool3 _425 = bool3(_418.x != uint3(0u, 0u, 0u).x, _418.y != uint3(0u, 0u, 0u).y, _418.z != uint3(0u, 0u, 0u).z);
    float3 _426 = float3(_425.x ? _420.x : _422.x, _425.y ? _420.y : _422.y, _425.z ? _420.z : _422.z);
    r2 = float4(_426.x, _426.y, _426.z, r2.w);
    float3 _433 = r0.zxy * r2.xyz;
    r3 = float4(_433.x, _433.y, _433.z, r3.w);
    float3 _445 = (r0.yzx * r2.yzx) + (-r3.xyz);
    r2 = float4(_445.x, _445.y, _445.z, r2.w);
    float4 _461 = r0;
    _461.w = mad(r2.xyz.z, r2.xyz.z, mad(r2.xyz.y, r2.xyz.y, r2.xyz.x * r2.xyz.x));
    r0 = _461;
    float4 _466 = r0;
    _466.w = rsqrt(r0.w);
    r0 = _466;
    float3 _472 = r0.www * r2.xyz;
    r2 = float4(_472.x, _472.y, _472.z, r2.w);
    float3 _479 = r0.yzx * r2.zxy;
    r3 = float4(_479.x, _479.y, _479.z, r3.w);
    float3 _490 = (r2.yzx * r0.zxy) + (-r3.xyz);
    r3 = float4(_490.x, _490.y, _490.z, r3.w);
    float4 _506 = r0;
    _506.w = mad(r3.xyz.z, r3.xyz.z, mad(r3.xyz.y, r3.xyz.y, r3.xyz.x * r3.xyz.x));
    r0 = _506;
    float4 _511 = r0;
    _511.w = rsqrt(r0.w);
    r0 = _511;
    float3 _517 = r0.www * r3.xyz;
    r3 = float4(_517.x, _517.y, _517.z, r3.w);
    float3 _530 = (shader_in[2].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r4 = float4(_530.x, _530.y, _530.z, r4.w);
    float3 _541 = (shader_in[5].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r5 = float4(_541.x, _541.y, _541.z, r5.w);
    float3 _553 = (shader_in[4].xxx * r5.xyz) + r4.xyz;
    r4 = float4(_553.x, _553.y, _553.z, r4.w);
    float3 _563 = float3(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z);
    float4 _575 = r5;
    _575.x = mad(_563.z, r4.xyz.z, mad(_563.y, r4.xyz.y, _563.x * r4.xyz.x));
    r5 = _575;
    float3 _584 = float3(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z);
    float4 _596 = r5;
    _596.y = mad(_584.z, r4.xyz.z, mad(_584.y, r4.xyz.y, _584.x * r4.xyz.x));
    r5 = _596;
    float3 _605 = float3(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z);
    float4 _617 = r5;
    _617.z = mad(_605.z, r4.xyz.z, mad(_605.y, r4.xyz.y, _605.x * r4.xyz.x));
    r5 = _617;
    float4 _632 = r0;
    _632.w = mad(r5.xyz.z, r5.xyz.z, mad(r5.xyz.y, r5.xyz.y, r5.xyz.x * r5.xyz.x));
    r0 = _632;
    float4 _637 = r0;
    _637.w = rsqrt(r0.w);
    r0 = _637;
    float3 _643 = r0.www * r5.xyz;
    r4 = float4(_643.x, _643.y, _643.z, r4.w);
    float4 _659 = r0;
    _659.w = mad(r3.xyz.z, r4.xyz.z, mad(r3.xyz.y, r4.xyz.y, r3.xyz.x * r4.xyz.x));
    r0 = _659;
    float4 _668 = r0;
    _668.w = (r0.w * asfloat(1056964608u)) + asfloat(1056964608u);
    r0 = _668;
    float4 _675 = o1;
    _675.y = (-r0.w) + asfloat(1065353216u);
    o1 = _675;
    float4 _690 = r0;
    _690.w = mad(r2.xyz.z, r4.xyz.z, mad(r2.xyz.y, r4.xyz.y, r2.xyz.x * r4.xyz.x));
    r0 = _690;
    float4 _698 = r0;
    _698.w = (r0.w * asfloat(1056964608u)) + asfloat(1056964608u);
    r0 = _698;
    float4 _705 = o1;
    _705.x = (-r0.w) + asfloat(1065353216u);
    o1 = _705;
    float2 _710 = asfloat(uint2(0u, 1065353216u));
    o1 = float4(o1.x, o1.y, _710.x, _710.y);
    float4 _727 = o2;
    _727.w = clamp(mad(r0.xyz.z, r4.xyz.z, mad(r0.xyz.y, r4.xyz.y, r0.xyz.x * r4.xyz.x)), 0.0f, 1.0f);
    o2 = _727;
    o2 = float4(r0.xyz.x, r0.xyz.y, r0.xyz.z, o2.w);
    o3 = float4(r4.xyz.x, r4.xyz.y, r4.xyz.z, o3.w);
    float3 _742 = float3(asint(shader_in[1].xxy));
    r0 = float4(_742.x, _742.y, _742.z, r0.w);
    float3 _751 = r0.xyz * asfloat(uint3(989855744u, 989855744u, 981467136u));
    r0 = float4(_751.x, _751.y, _751.z, r0.w);
    float3 _767 = (cb0_m[12].x.xxx * asfloat(uint3(1041865114u, 3189348762u, 1028443341u))) + r0.xyz;
    o4 = float4(_767.x, o4.y, _767.y, _767.z);
    float4 _772 = o4;
    _772.y = r0.z;
    o4 = _772;
    float4 _781 = r0;
    _781.x = r1.z * cb0_m[13].x;
    r0 = _781;
    float4 _788 = r0;
    _788.y = r0.x * asfloat(3216550459u);
    r0 = _788;
    float4 _793 = r0;
    _793.y = exp2(r0.y);
    r0 = _793;
    float4 _800 = r0;
    _800.y = (-r0.y) + asfloat(1065353216u);
    r0 = _800;
    float4 _807 = r0;
    _807.x = r0.y / r0.x;
    r0 = _807;
    float4 _817 = r0;
    _817.y = asfloat((asfloat(1008981770u) < abs(r1.z)) ? 4294967295u : 0u);
    r0 = _817;
    float4 _832 = r0;
    _832.z = mad(r1.xzw.z, r1.xzw.z, mad(r1.xzw.y, r1.xzw.y, r1.xzw.x * r1.xzw.x));
    r0 = _832;
    float4 _837 = r0;
    _837.z = sqrt(r0.z);
    r0 = _837;
    float4 _845 = r0;
    _845.z = r0.z * cb0_m[13].y;
    r0 = _845;
    float4 _855 = r0;
    _855.x = (asuint(r0.y) != 0u) ? r0.x : asfloat(1065353216u);
    r0 = _855;
    float4 _867 = r0;
    _867.x = (r0.x * r0.z) + (-cb0_m[13].w);
    r0 = _867;
    float4 _873 = r0;
    _873.x = exp2(-r0.x);
    r0 = _873;
    float4 _879 = r0;
    _879.x = min(r0.x, asfloat(1065353216u));
    r0 = _879;
    float3 _886 = o5;
    _886.z = (-r0.x) + asfloat(1065353216u);
    o5 = _886;
    float4 _896 = r0;
    _896.x = asfloat((cb6_m[3].w < asfloat(3323739136u)) ? 4294967295u : 0u);
    r0 = _896;
    float4 _906 = r0;
    _906.y = asfloat((asfloat(3323741184u) < cb6_m[3].w) ? 4294967295u : 0u);
    r0 = _906;
    float4 _916 = r0;
    _916.x = asfloat(asuint(r0.y) & asuint(r0.x));
    r0 = _916;
    float3 _925 = o5;
    _925.y = (asuint(r0.x) != 0u) ? asfloat(0u) : asfloat(1065353216u);
    o5 = _925;
}

void vert_main()
{
    shader_in[0] = float4(v0.x, v0.y, v0.z, shader_in[0].w);
    float2 _933 = asfloat(v1);
    shader_in[1] = float4(_933.x, _933.y, shader_in[1].z, shader_in[1].w);
    shader_in[2] = float4(v2.x, v2.y, v2.z, shader_in[2].w);
    shader_in[3] = float4(v3.x, v3.y, v3.z, shader_in[3].w);
    shader_in[4] = float4(v4.x, v4.y, v4.z, shader_in[4].w);
    shader_in[5] = float4(v5.x, v5.y, v5.z, shader_in[5].w);
    vs_main();
    gl_Position = o0;
    gl_PointSize = 1.0f;
    gl_Position.x = gl_Position.x - gl_HalfPixel.x * gl_Position.w;
    gl_Position.y = gl_Position.y + gl_HalfPixel.y * gl_Position.w;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    v0 = stage_input.v0;
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    v5 = stage_input.v5;
    vert_main();
    SPIRV_Cross_Output stage_output;
    stage_output.gl_Position = gl_Position;
    stage_output.gl_PointSize = gl_PointSize;
    return stage_output;
}
