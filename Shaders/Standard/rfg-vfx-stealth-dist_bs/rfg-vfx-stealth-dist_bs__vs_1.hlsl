cbuffer cb0_t : register(b160)
{
    float4 cb0_m[13] : packoffset(c0);
};

uniform float4 gl_HalfPixel;

static float4 gl_Position;
static float gl_PointSize;
static float3 v0;
static int2 v1;
static float3 v2;
static float4 v3;
static float4 v4;
static float4 v5;
static float4 v6;

struct SPIRV_Cross_Input
{
    float3 v0 : TEXCOORD0;
    float2 v1 : TEXCOORD1;
    float3 v2 : TEXCOORD2;
    float4 v3 : TEXCOORD3;
    float4 v4 : TEXCOORD4;
    float4 v5 : TEXCOORD5;
    float4 v6 : TEXCOORD6;
};

struct SPIRV_Cross_Output
{
    float4 gl_Position : POSITION;
    float gl_PointSize : PSIZE;
};

static float4 shader_in[7];
static float4 o0;
static float4 o1;
static float4 o2;
static float4 o3;
static float4 o4;
static float2 o5;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;

void vs_main()
{
    float4 _45 = r0;
    _45.w = asfloat(1065353216u);
    r0 = _45;
    r1 = float4(shader_in[0].xyz.x, shader_in[0].xyz.y, shader_in[0].xyz.z, r1.w);
    float4 _55 = r1;
    _55.w = asfloat(1065353216u);
    r1 = _55;
    float4 _73 = r0;
    _73.x = mad(shader_in[3].w, r1.w, mad(shader_in[3].z, r1.z, mad(shader_in[3].y, r1.y, shader_in[3].x * r1.x)));
    r0 = _73;
    float4 _91 = r0;
    _91.z = mad(shader_in[5].w, r1.w, mad(shader_in[5].z, r1.z, mad(shader_in[5].y, r1.y, shader_in[5].x * r1.x)));
    r0 = _91;
    float4 _109 = r0;
    _109.y = mad(shader_in[4].w, r1.w, mad(shader_in[4].z, r1.z, mad(shader_in[4].y, r1.y, shader_in[4].x * r1.x)));
    r0 = _109;
    float4 _126 = float4(cb0_m[0].x, cb0_m[0].y, cb0_m[0].z, cb0_m[0].w);
    float4 _140 = o0;
    _140.x = mad(_126.w, r0.w, mad(_126.z, r0.z, mad(_126.y, r0.y, _126.x * r0.x)));
    o0 = _140;
    float4 _152 = float4(cb0_m[1].x, cb0_m[1].y, cb0_m[1].z, cb0_m[1].w);
    float4 _166 = o0;
    _166.y = mad(_152.w, r0.w, mad(_152.z, r0.z, mad(_152.y, r0.y, _152.x * r0.x)));
    o0 = _166;
    float4 _178 = float4(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z, cb0_m[2].w);
    float4 _192 = o0;
    _192.z = mad(_178.w, r0.w, mad(_178.z, r0.z, mad(_178.y, r0.y, _178.x * r0.x)));
    o0 = _192;
    float4 _203 = float4(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z, cb0_m[3].w);
    float4 _217 = o0;
    _217.w = mad(_203.w, r0.w, mad(_203.z, r0.z, mad(_203.y, r0.y, _203.x * r0.x)));
    o0 = _217;
    float3 _231 = (-r0.xyz) + float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z);
    r0 = float4(_231.x, r0.y, _231.y, _231.z);
    float4 _245 = r0;
    _245.y = asfloat((shader_in[6].w < r0.y) ? 4294967295u : 0u);
    r0 = _245;
    float2 _252 = o5;
    _252.x = asfloat(asuint(r0.y) & 1065353216u);
    o5 = _252;
    float4 _267 = r0;
    _267.y = mad(r0.xzw.z, r0.xzw.z, mad(r0.xzw.y, r0.xzw.y, r0.xzw.x * r0.xzw.x));
    r0 = _267;
    float4 _272 = r1;
    _272.x = rsqrt(r0.y);
    r1 = _272;
    float4 _277 = r0;
    _277.y = sqrt(r0.y);
    r0 = _277;
    float4 _284 = r0;
    _284.y = r0.y + asfloat(3221225472u);
    r0 = _284;
    float4 _294 = o3;
    _294.w = clamp(r0.y * asfloat(1015889355u), 0.0f, 1.0f);
    o3 = _294;
    float4 _304 = r0;
    _304.y = ((-r0.z) * r1.x) + asfloat(1065353216u);
    r0 = _304;
    float3 _310 = r0.xzw * r1.xxx;
    r0 = float4(_310.x, r0.y, _310.y, _310.z);
    float4 _321 = r0;
    _321.y = asfloat((abs(r0.y) < asfloat(981668463u)) ? 4294967295u : 0u);
    r0 = _321;
    float4 _330 = r1;
    _330.x = asfloat((abs(r0.x) < asfloat(981668463u)) ? 4294967295u : 0u);
    r1 = _330;
    float4 _339 = r1;
    _339.y = asfloat((asfloat(0u) == abs(r0.w)) ? 0u : 4294967295u);
    r1 = _339;
    float4 _349 = r1;
    _349.x = asfloat(asuint(r1.y) & asuint(r1.x));
    r1 = _349;
    float4 _359 = r0;
    _359.y = asfloat(asuint(r0.y) & asuint(r1.x));
    r0 = _359;
    uint3 _364 = asuint(r0.yyy);
    float3 _366 = asfloat(uint3(0u, 0u, 1065353216u));
    float3 _368 = asfloat(uint3(1065353216u, 0u, 0u));
    bool3 _371 = bool3(_364.x != uint3(0u, 0u, 0u).x, _364.y != uint3(0u, 0u, 0u).y, _364.z != uint3(0u, 0u, 0u).z);
    float3 _372 = float3(_371.x ? _366.x : _368.x, _371.y ? _366.y : _368.y, _371.z ? _366.z : _368.z);
    r1 = float4(_372.x, _372.y, _372.z, r1.w);
    float3 _379 = r0.wxz * r1.xyz;
    r2 = float4(_379.x, _379.y, _379.z, r2.w);
    float3 _391 = (r0.zwx * r1.yzx) + (-r2.xyz);
    r1 = float4(_391.x, _391.y, _391.z, r1.w);
    float4 _407 = r0;
    _407.y = mad(r1.xyz.z, r1.xyz.z, mad(r1.xyz.y, r1.xyz.y, r1.xyz.x * r1.xyz.x));
    r0 = _407;
    float4 _412 = r0;
    _412.y = rsqrt(r0.y);
    r0 = _412;
    float3 _418 = r0.yyy * r1.xyz;
    r1 = float4(_418.x, _418.y, _418.z, r1.w);
    float3 _425 = r0.zwx * r1.zxy;
    r2 = float4(_425.x, _425.y, _425.z, r2.w);
    float3 _436 = (r1.yzx * r0.wxz) + (-r2.xyz);
    r2 = float4(_436.x, _436.y, _436.z, r2.w);
    float4 _452 = r0;
    _452.y = mad(r2.xyz.z, r2.xyz.z, mad(r2.xyz.y, r2.xyz.y, r2.xyz.x * r2.xyz.x));
    r0 = _452;
    float4 _457 = r0;
    _457.y = rsqrt(r0.y);
    r0 = _457;
    float3 _463 = r0.yyy * r2.xyz;
    r2 = float4(_463.x, _463.y, _463.z, r2.w);
    float3 _476 = (shader_in[2].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r3 = float4(_476.x, _476.y, _476.z, r3.w);
    float4 _495 = r4;
    _495.x = mad(shader_in[3].xyz.z, r3.xyz.z, mad(shader_in[3].xyz.y, r3.xyz.y, shader_in[3].xyz.x * r3.xyz.x));
    r4 = _495;
    float4 _511 = r4;
    _511.y = mad(shader_in[4].xyz.z, r3.xyz.z, mad(shader_in[4].xyz.y, r3.xyz.y, shader_in[4].xyz.x * r3.xyz.x));
    r4 = _511;
    float4 _527 = r4;
    _527.z = mad(shader_in[5].xyz.z, r3.xyz.z, mad(shader_in[5].xyz.y, r3.xyz.y, shader_in[5].xyz.x * r3.xyz.x));
    r4 = _527;
    float4 _542 = r0;
    _542.y = mad(r4.xyz.z, r4.xyz.z, mad(r4.xyz.y, r4.xyz.y, r4.xyz.x * r4.xyz.x));
    r0 = _542;
    float4 _547 = r0;
    _547.y = rsqrt(r0.y);
    r0 = _547;
    float3 _553 = r0.yyy * r4.xyz;
    r3 = float4(_553.x, _553.y, _553.z, r3.w);
    float4 _569 = r0;
    _569.y = mad(r2.xyz.z, r3.xyz.z, mad(r2.xyz.y, r3.xyz.y, r2.xyz.x * r3.xyz.x));
    r0 = _569;
    float4 _578 = r0;
    _578.y = (r0.y * asfloat(1056964608u)) + asfloat(1056964608u);
    r0 = _578;
    float4 _585 = o1;
    _585.y = (-r0.y) + asfloat(1065353216u);
    o1 = _585;
    float4 _600 = r0;
    _600.y = mad(r1.xyz.z, r3.xyz.z, mad(r1.xyz.y, r3.xyz.y, r1.xyz.x * r3.xyz.x));
    r0 = _600;
    float4 _608 = r0;
    _608.y = (r0.y * asfloat(1056964608u)) + asfloat(1056964608u);
    r0 = _608;
    float4 _615 = o1;
    _615.x = (-r0.y) + asfloat(1065353216u);
    o1 = _615;
    float2 _619 = asfloat(uint2(0u, 1065353216u));
    o1 = float4(o1.x, o1.y, _619.x, _619.y);
    float4 _636 = o2;
    _636.w = clamp(mad(r0.xzw.z, r3.xyz.z, mad(r0.xzw.y, r3.xyz.y, r0.xzw.x * r3.xyz.x)), 0.0f, 1.0f);
    o2 = _636;
    o2 = float4(r0.xzw.x, r0.xzw.y, r0.xzw.z, o2.w);
    o3 = float4(r3.xyz.x, r3.xyz.y, r3.xyz.z, o3.w);
    float3 _651 = float3(asint(shader_in[1].xxy));
    r0 = float4(_651.x, _651.y, _651.z, r0.w);
    float3 _660 = r0.xyz * asfloat(uint3(989855744u, 989855744u, 981467136u));
    r0 = float4(_660.x, _660.y, _660.z, r0.w);
    float3 _676 = (cb0_m[12].x.xxx * asfloat(uint3(1041865114u, 3189348762u, 1028443341u))) + r0.xyz;
    o4 = float4(_676.x, o4.y, _676.y, _676.z);
    float4 _681 = o4;
    _681.y = r0.z;
    o4 = _681;
    float4 _691 = r0;
    _691.x = asfloat((shader_in[6].w < asfloat(3323739136u)) ? 4294967295u : 0u);
    r0 = _691;
    float4 _701 = r0;
    _701.y = asfloat((asfloat(3323741184u) < shader_in[6].w) ? 4294967295u : 0u);
    r0 = _701;
    float4 _711 = r0;
    _711.x = asfloat(asuint(r0.y) & asuint(r0.x));
    r0 = _711;
    float2 _720 = o5;
    _720.y = (asuint(r0.x) != 0u) ? asfloat(0u) : asfloat(1065353216u);
    o5 = _720;
}

void vert_main()
{
    shader_in[0] = float4(v0.x, v0.y, v0.z, shader_in[0].w);
    float2 _728 = asfloat(v1);
    shader_in[1] = float4(_728.x, _728.y, shader_in[1].z, shader_in[1].w);
    shader_in[2] = float4(v2.x, v2.y, v2.z, shader_in[2].w);
    shader_in[3] = v3;
    shader_in[4] = v4;
    shader_in[5] = v5;
    shader_in[6] = v6;
    vs_main();
    gl_Position = o0;
    gl_PointSize = 1.0f;
    gl_Position.x = gl_Position.x - gl_HalfPixel.x * gl_Position.w;
    gl_Position.y = gl_Position.y + gl_HalfPixel.y * gl_Position.w;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    v0 = stage_input.v0;
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    v5 = stage_input.v5;
    v6 = stage_input.v6;
    vert_main();
    SPIRV_Cross_Output stage_output;
    stage_output.gl_Position = gl_Position;
    stage_output.gl_PointSize = gl_PointSize;
    return stage_output;
}
