cbuffer cb0_t : register(b160)
{
    float4 cb0_m[14] : packoffset(c0);
};

uniform float4 gl_HalfPixel;

static float4 gl_Position;
static float gl_PointSize;
static float3 v0;
static int2 v1;
static float3 v2;
static float4 v3;
static float4 v4;
static float4 v5;
static float4 v6;

struct SPIRV_Cross_Input
{
    float3 v0 : TEXCOORD0;
    float2 v1 : TEXCOORD1;
    float3 v2 : TEXCOORD2;
    float4 v3 : TEXCOORD3;
    float4 v4 : TEXCOORD4;
    float4 v5 : TEXCOORD5;
    float4 v6 : TEXCOORD6;
};

struct SPIRV_Cross_Output
{
    float4 gl_Position : POSITION;
    float gl_PointSize : PSIZE;
};

static float4 shader_in[7];
static float4 o0;
static float4 o1;
static float4 o2;
static float4 o3;
static float4 o4;
static float3 o5;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;
static float4 r5;

void vs_main()
{
    float4 _44 = r0;
    _44.w = asfloat(1065353216u);
    r0 = _44;
    r1 = float4(shader_in[0].xyz.x, shader_in[0].xyz.y, shader_in[0].xyz.z, r1.w);
    float4 _54 = r1;
    _54.w = asfloat(1065353216u);
    r1 = _54;
    float4 _72 = r0;
    _72.x = mad(shader_in[3].w, r1.w, mad(shader_in[3].z, r1.z, mad(shader_in[3].y, r1.y, shader_in[3].x * r1.x)));
    r0 = _72;
    float4 _90 = r0;
    _90.z = mad(shader_in[5].w, r1.w, mad(shader_in[5].z, r1.z, mad(shader_in[5].y, r1.y, shader_in[5].x * r1.x)));
    r0 = _90;
    float4 _108 = r0;
    _108.y = mad(shader_in[4].w, r1.w, mad(shader_in[4].z, r1.z, mad(shader_in[4].y, r1.y, shader_in[4].x * r1.x)));
    r0 = _108;
    float4 _125 = float4(cb0_m[0].x, cb0_m[0].y, cb0_m[0].z, cb0_m[0].w);
    float4 _139 = o0;
    _139.x = mad(_125.w, r0.w, mad(_125.z, r0.z, mad(_125.y, r0.y, _125.x * r0.x)));
    o0 = _139;
    float4 _151 = float4(cb0_m[1].x, cb0_m[1].y, cb0_m[1].z, cb0_m[1].w);
    float4 _165 = o0;
    _165.y = mad(_151.w, r0.w, mad(_151.z, r0.z, mad(_151.y, r0.y, _151.x * r0.x)));
    o0 = _165;
    float4 _177 = float4(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z, cb0_m[2].w);
    float4 _191 = o0;
    _191.z = mad(_177.w, r0.w, mad(_177.z, r0.z, mad(_177.y, r0.y, _177.x * r0.x)));
    o0 = _191;
    float4 _202 = float4(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z, cb0_m[3].w);
    float4 _216 = o0;
    _216.w = mad(_202.w, r0.w, mad(_202.z, r0.z, mad(_202.y, r0.y, _202.x * r0.x)));
    o0 = _216;
    float3 _230 = (-r0.xyz) + float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z);
    r1 = float4(_230.x, _230.y, _230.z, r1.w);
    float3 _244 = r0.xyz + (-float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z));
    r0 = float4(_244.x, r0.y, _244.y, _244.z);
    float4 _258 = r0;
    _258.y = asfloat((shader_in[6].w < r0.y) ? 4294967295u : 0u);
    r0 = _258;
    float3 _265 = o5;
    _265.x = asfloat(asuint(r0.y) & 1065353216u);
    o5 = _265;
    float4 _280 = r0;
    _280.y = mad(r1.xyz.z, r1.xyz.z, mad(r1.xyz.y, r1.xyz.y, r1.xyz.x * r1.xyz.x));
    r0 = _280;
    float4 _285 = r1;
    _285.w = rsqrt(r0.y);
    r1 = _285;
    float4 _290 = r0;
    _290.y = sqrt(r0.y);
    r0 = _290;
    float4 _297 = r0;
    _297.y = r0.y + asfloat(3221225472u);
    r0 = _297;
    float4 _307 = o3;
    _307.w = clamp(r0.y * asfloat(1015889355u), 0.0f, 1.0f);
    o3 = _307;
    float4 _317 = r0;
    _317.y = ((-r1.y) * r1.w) + asfloat(1065353216u);
    r0 = _317;
    float3 _323 = r1.www * r1.xyz;
    r1 = float4(_323.x, _323.y, _323.z, r1.w);
    float4 _334 = r0;
    _334.y = asfloat((abs(r0.y) < asfloat(981668463u)) ? 4294967295u : 0u);
    r0 = _334;
    float4 _343 = r1;
    _343.w = asfloat((abs(r1.x) < asfloat(981668463u)) ? 4294967295u : 0u);
    r1 = _343;
    float4 _353 = r2;
    _353.x = asfloat((asfloat(0u) == abs(r1.z)) ? 0u : 4294967295u);
    r2 = _353;
    float4 _363 = r1;
    _363.w = asfloat(asuint(r1.w) & asuint(r2.x));
    r1 = _363;
    float4 _373 = r0;
    _373.y = asfloat(asuint(r0.y) & asuint(r1.w));
    r0 = _373;
    uint3 _378 = asuint(r0.yyy);
    float3 _380 = asfloat(uint3(0u, 0u, 1065353216u));
    float3 _382 = asfloat(uint3(1065353216u, 0u, 0u));
    bool3 _385 = bool3(_378.x != uint3(0u, 0u, 0u).x, _378.y != uint3(0u, 0u, 0u).y, _378.z != uint3(0u, 0u, 0u).z);
    float3 _386 = float3(_385.x ? _380.x : _382.x, _385.y ? _380.y : _382.y, _385.z ? _380.z : _382.z);
    r2 = float4(_386.x, _386.y, _386.z, r2.w);
    float3 _393 = r1.zxy * r2.xyz;
    r3 = float4(_393.x, _393.y, _393.z, r3.w);
    float3 _405 = (r1.yzx * r2.yzx) + (-r3.xyz);
    r2 = float4(_405.x, _405.y, _405.z, r2.w);
    float4 _421 = r0;
    _421.y = mad(r2.xyz.z, r2.xyz.z, mad(r2.xyz.y, r2.xyz.y, r2.xyz.x * r2.xyz.x));
    r0 = _421;
    float4 _426 = r0;
    _426.y = rsqrt(r0.y);
    r0 = _426;
    float3 _432 = r0.yyy * r2.xyz;
    r2 = float4(_432.x, _432.y, _432.z, r2.w);
    float3 _439 = r1.yzx * r2.zxy;
    r3 = float4(_439.x, _439.y, _439.z, r3.w);
    float3 _450 = (r2.yzx * r1.zxy) + (-r3.xyz);
    r3 = float4(_450.x, _450.y, _450.z, r3.w);
    float4 _466 = r0;
    _466.y = mad(r3.xyz.z, r3.xyz.z, mad(r3.xyz.y, r3.xyz.y, r3.xyz.x * r3.xyz.x));
    r0 = _466;
    float4 _471 = r0;
    _471.y = rsqrt(r0.y);
    r0 = _471;
    float3 _477 = r0.yyy * r3.xyz;
    r3 = float4(_477.x, _477.y, _477.z, r3.w);
    float3 _490 = (shader_in[2].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r4 = float4(_490.x, _490.y, _490.z, r4.w);
    float4 _509 = r5;
    _509.x = mad(shader_in[3].xyz.z, r4.xyz.z, mad(shader_in[3].xyz.y, r4.xyz.y, shader_in[3].xyz.x * r4.xyz.x));
    r5 = _509;
    float4 _525 = r5;
    _525.y = mad(shader_in[4].xyz.z, r4.xyz.z, mad(shader_in[4].xyz.y, r4.xyz.y, shader_in[4].xyz.x * r4.xyz.x));
    r5 = _525;
    float4 _541 = r5;
    _541.z = mad(shader_in[5].xyz.z, r4.xyz.z, mad(shader_in[5].xyz.y, r4.xyz.y, shader_in[5].xyz.x * r4.xyz.x));
    r5 = _541;
    float4 _556 = r0;
    _556.y = mad(r5.xyz.z, r5.xyz.z, mad(r5.xyz.y, r5.xyz.y, r5.xyz.x * r5.xyz.x));
    r0 = _556;
    float4 _561 = r0;
    _561.y = rsqrt(r0.y);
    r0 = _561;
    float3 _567 = r0.yyy * r5.xyz;
    r4 = float4(_567.x, _567.y, _567.z, r4.w);
    float4 _583 = r0;
    _583.y = mad(r3.xyz.z, r4.xyz.z, mad(r3.xyz.y, r4.xyz.y, r3.xyz.x * r4.xyz.x));
    r0 = _583;
    float4 _592 = r0;
    _592.y = (r0.y * asfloat(1056964608u)) + asfloat(1056964608u);
    r0 = _592;
    float4 _599 = o1;
    _599.y = (-r0.y) + asfloat(1065353216u);
    o1 = _599;
    float4 _614 = r0;
    _614.y = mad(r2.xyz.z, r4.xyz.z, mad(r2.xyz.y, r4.xyz.y, r2.xyz.x * r4.xyz.x));
    r0 = _614;
    float4 _622 = r0;
    _622.y = (r0.y * asfloat(1056964608u)) + asfloat(1056964608u);
    r0 = _622;
    float4 _629 = o1;
    _629.x = (-r0.y) + asfloat(1065353216u);
    o1 = _629;
    float2 _634 = asfloat(uint2(0u, 1065353216u));
    o1 = float4(o1.x, o1.y, _634.x, _634.y);
    float4 _651 = o2;
    _651.w = clamp(mad(r1.xyz.z, r4.xyz.z, mad(r1.xyz.y, r4.xyz.y, r1.xyz.x * r4.xyz.x)), 0.0f, 1.0f);
    o2 = _651;
    o2 = float4(r1.xyz.x, r1.xyz.y, r1.xyz.z, o2.w);
    o3 = float4(r4.xyz.x, r4.xyz.y, r4.xyz.z, o3.w);
    float3 _666 = float3(asint(shader_in[1].xxy));
    r1 = float4(_666.x, _666.y, _666.z, r1.w);
    float3 _675 = r1.xyz * asfloat(uint3(989855744u, 989855744u, 981467136u));
    r1 = float4(_675.x, _675.y, _675.z, r1.w);
    float3 _691 = (cb0_m[12].x.xxx * asfloat(uint3(1041865114u, 3189348762u, 1028443341u))) + r1.xyz;
    o4 = float4(_691.x, o4.y, _691.y, _691.z);
    float4 _696 = o4;
    _696.y = r1.z;
    o4 = _696;
    float4 _705 = r0;
    _705.y = r0.z * cb0_m[13].x;
    r0 = _705;
    float4 _712 = r1;
    _712.x = r0.y * asfloat(3216550459u);
    r1 = _712;
    float4 _717 = r1;
    _717.x = exp2(r1.x);
    r1 = _717;
    float4 _724 = r1;
    _724.x = (-r1.x) + asfloat(1065353216u);
    r1 = _724;
    float4 _731 = r0;
    _731.y = r1.x / r0.y;
    r0 = _731;
    float4 _741 = r1;
    _741.x = asfloat((asfloat(1008981770u) < abs(r0.z)) ? 4294967295u : 0u);
    r1 = _741;
    float4 _756 = r0;
    _756.x = mad(r0.xzw.z, r0.xzw.z, mad(r0.xzw.y, r0.xzw.y, r0.xzw.x * r0.xzw.x));
    r0 = _756;
    float4 _761 = r0;
    _761.x = sqrt(r0.x);
    r0 = _761;
    float4 _769 = r0;
    _769.x = r0.x * cb0_m[13].y;
    r0 = _769;
    float4 _779 = r0;
    _779.y = (asuint(r1.x) != 0u) ? r0.y : asfloat(1065353216u);
    r0 = _779;
    float4 _791 = r0;
    _791.x = (r0.y * r0.x) + (-cb0_m[13].w);
    r0 = _791;
    float4 _797 = r0;
    _797.x = exp2(-r0.x);
    r0 = _797;
    float4 _803 = r0;
    _803.x = min(r0.x, asfloat(1065353216u));
    r0 = _803;
    float3 _810 = o5;
    _810.z = (-r0.x) + asfloat(1065353216u);
    o5 = _810;
    float4 _820 = r0;
    _820.x = asfloat((shader_in[6].w < asfloat(3323739136u)) ? 4294967295u : 0u);
    r0 = _820;
    float4 _830 = r0;
    _830.y = asfloat((asfloat(3323741184u) < shader_in[6].w) ? 4294967295u : 0u);
    r0 = _830;
    float4 _840 = r0;
    _840.x = asfloat(asuint(r0.y) & asuint(r0.x));
    r0 = _840;
    float3 _849 = o5;
    _849.y = (asuint(r0.x) != 0u) ? asfloat(0u) : asfloat(1065353216u);
    o5 = _849;
}

void vert_main()
{
    shader_in[0] = float4(v0.x, v0.y, v0.z, shader_in[0].w);
    float2 _857 = asfloat(v1);
    shader_in[1] = float4(_857.x, _857.y, shader_in[1].z, shader_in[1].w);
    shader_in[2] = float4(v2.x, v2.y, v2.z, shader_in[2].w);
    shader_in[3] = v3;
    shader_in[4] = v4;
    shader_in[5] = v5;
    shader_in[6] = v6;
    vs_main();
    gl_Position = o0;
    gl_PointSize = 1.0f;
    gl_Position.x = gl_Position.x - gl_HalfPixel.x * gl_Position.w;
    gl_Position.y = gl_Position.y + gl_HalfPixel.y * gl_Position.w;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    v0 = stage_input.v0;
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    v5 = stage_input.v5;
    v6 = stage_input.v6;
    vert_main();
    SPIRV_Cross_Output stage_output;
    stage_output.gl_Position = gl_Position;
    stage_output.gl_PointSize = gl_PointSize;
    return stage_output;
}
