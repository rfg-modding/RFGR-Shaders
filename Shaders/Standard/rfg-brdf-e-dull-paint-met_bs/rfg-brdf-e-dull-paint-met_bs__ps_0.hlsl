cbuffer cb0_t : register(b0)
{
    float4 cb0_m[8] : packoffset(c0);
};

cbuffer cb1_t : register(b1)
{
    float4 cb1_m[1] : packoffset(c0);
};

cbuffer cb6_t : register(b6)
{
    float4 cb6_m[1] : packoffset(c0);
};

cbuffer cb2_t : register(b2)
{
    float4 cb2_m[9] : packoffset(c0);
};

uniform sampler2D SPIRV_Cross_Combinedt0s0;
uniform sampler2D SPIRV_Cross_Combinedt2s2;
uniform sampler2D SPIRV_Cross_Combinedt3s3;
uniform sampler2D SPIRV_Cross_Combinedt1s1;
uniform sampler2D SPIRV_Cross_Combinedt15s15;

static float4 gl_FragCoord;
static float3 v1;
static float3 v2;
static float4 v3;
static float4 v4;

struct SPIRV_Cross_Input
{
    float3 v1 : TEXCOORD1;
    float3 v2 : TEXCOORD2;
    float4 v3 : TEXCOORD3;
    float4 v4 : TEXCOORD4;
    float4 gl_FragCoord : VPOS;
};

static float4 shader_in[5];
static float4 o0;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;
static float4 r5;
static float4 r6;

void ps_main()
{
    r0 = tex2D(SPIRV_Cross_Combinedt0s0, shader_in[4].xyxx.xy);
    float3 _81 = (r0.xyw * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r1 = float4(r1.x, _81.x, _81.y, _81.z);
    float4 _90 = r0;
    _90.y = r0.y + r0.y;
    r0 = _90;
    float4 _97 = r1;
    _97.x = r1.w * r1.y;
    r1 = _97;
    float4 _109 = r0;
    _109.w = mad(r1.xz.y, r1.xz.y, r1.xz.x * r1.xz.x);
    r0 = _109;
    float4 _113 = r0;
    _113.x = r1.x;
    r0 = _113;
    float4 _121 = r0;
    _121.w = (-r0.w) + asfloat(1065353216u);
    r0 = _121;
    float4 _128 = r0;
    _128.w = max(r0.w, asfloat(0u));
    r0 = _128;
    float4 _133 = r0;
    _133.z = sqrt(r0.w);
    r0 = _133;
    float3 _140 = r0.xyz + asfloat(uint3(2147483648u, 3212836864u, 3212836864u));
    r0 = float4(_140.x, _140.y, _140.z, r0.w);
    float3 _157 = (cb2_m[7].w.xxx * r0.xyz) + asfloat(uint3(0u, 0u, 1065353216u));
    r0 = float4(_157.x, _157.y, _157.z, r0.w);
    float4 _173 = r0;
    _173.w = mad(r0.xyz.z, r0.xyz.z, mad(r0.xyz.y, r0.xyz.y, r0.xyz.x * r0.xyz.x));
    r0 = _173;
    float4 _178 = r0;
    _178.w = rsqrt(r0.w);
    r0 = _178;
    float3 _184 = r0.www * r0.xyz;
    r0 = float4(_184.x, _184.y, _184.z, r0.w);
    float4 _203 = r0;
    _203.w = mad(shader_in[2].xyz.z, shader_in[2].xyz.z, mad(shader_in[2].xyz.y, shader_in[2].xyz.y, shader_in[2].xyz.x * shader_in[2].xyz.x));
    r0 = _203;
    float4 _208 = r0;
    _208.w = rsqrt(r0.w);
    r0 = _208;
    float3 _215 = r0.www * shader_in[2].xyz;
    r1 = float4(_215.x, _215.y, _215.z, r1.w);
    float4 _231 = r1;
    _231.x = mad(r0.xyz.z, r1.xyz.z, mad(r0.xyz.y, r1.xyz.y, r0.xyz.x * r1.xyz.x));
    r1 = _231;
    float4 _237 = r1;
    _237.x = max(r1.x, asfloat(0u));
    r1 = _237;
    float4 _243 = r1;
    _243.y = min(r1.x, asfloat(1065353216u));
    r1 = _243;
    float4 _250 = r1;
    _250.x = (-r1.x) + asfloat(1065353216u);
    r1 = _250;
    float4 _268 = r1;
    _268.z = mad(shader_in[1].xyz.z, shader_in[1].xyz.z, mad(shader_in[1].xyz.y, shader_in[1].xyz.y, shader_in[1].xyz.x * shader_in[1].xyz.x));
    r1 = _268;
    float4 _273 = r1;
    _273.z = rsqrt(r1.z);
    r1 = _273;
    float3 _280 = r1.zzz * shader_in[1].xyz;
    r2 = float4(_280.x, _280.y, _280.z, r2.w);
    float4 _297 = r1;
    _297.z = mad(r2.xyz.z, r0.xyz.z, mad(r2.xyz.y, r0.xyz.y, r2.xyz.x * r0.xyz.x));
    r1 = _297;
    float3 _307 = (shader_in[2].xyz * r0.www) + r2.xyz;
    r2 = float4(_307.x, _307.y, _307.z, r2.w);
    float4 _315 = r0;
    _315.w = clamp(r1.z, 0.0f, 1.0f);
    r0 = _315;
    float4 _322 = r0;
    _322.w = r1.y * r0.w;
    r0 = _322;
    float4 _327 = r0;
    _327.w = log2(r0.w);
    r0 = _327;
    float4 _334 = r0;
    _334.w = r0.w * asfloat(1074580685u);
    r0 = _334;
    float4 _339 = r0;
    _339.w = exp2(r0.w);
    r0 = _339;
    float3 _352 = r0.www * float3(cb2_m[1].x, cb2_m[1].y, cb2_m[1].z);
    r3 = float4(_352.x, _352.y, _352.z, r3.w);
    float3 _370 = ((-float3(cb2_m[1].x, cb2_m[1].y, cb2_m[1].z)) * r0.www) + asfloat(uint3(1065353216u, 1065353216u, 1065353216u));
    r4 = float4(_370.x, _370.y, _370.z, r4.w);
    float2 _384 = (r1.zz * asfloat(uint2(1056964608u, 1056964608u))) + asfloat(uint2(1056964608u, 3196059648u));
    r1 = float4(r1.x, _384.x, r1.z, _384.y);
    float4 _391 = r0;
    _391.w = max(r1.z, asfloat(0u));
    r0 = _391;
    float2 _396 = asfloat(uint2(964689920u, 1006632960u));
    bool2 _401 = bool2(_396.x < r0.ww.x, _396.y < r0.ww.y);
    float2 _407 = asfloat(uint2(_401.x ? uint2(4294967295u, 4294967295u).x : uint2(0u, 0u).x, _401.y ? uint2(4294967295u, 4294967295u).y : uint2(0u, 0u).y));
    r5 = float4(_407.x, _407.y, r5.z, r5.w);
    float2 _415 = asfloat(asuint(r5.xy) & uint2(1065353216u, 1065353216u));
    r5 = float4(_415.x, _415.y, r5.z, r5.w);
    float4 _424 = r0;
    _424.w = clamp(r1.w * asfloat(1082130432u), 0.0f, 1.0f);
    r0 = _424;
    float4 _432 = r1;
    _432.x = (-r1.x) + r1.y;
    r1 = _432;
    float4 _438 = r1;
    _438.x = r1.x + asfloat(3212836864u);
    r1 = _438;
    float4 _449 = r1;
    _449.x = clamp(((-r1.x) * asfloat(3207244459u)) + asfloat(1065353216u), 0.0f, 1.0f);
    r1 = _449;
    float4 _454 = r1;
    _454.x = log2(r1.x);
    r1 = _454;
    float4 _460 = r1;
    _460.x = r1.x * asfloat(1074580685u);
    r1 = _460;
    float4 _465 = r1;
    _465.x = exp2(r1.x);
    r1 = _465;
    float4 _470 = r0;
    _470.w = log2(r0.w);
    r0 = _470;
    float4 _476 = r0;
    _476.w = r0.w * asfloat(1074580685u);
    r0 = _476;
    float4 _481 = r0;
    _481.w = exp2(r0.w);
    r0 = _481;
    float3 _493 = r0.www * float3(cb2_m[0].x, cb2_m[0].y, cb2_m[0].z);
    r1 = float4(r1.x, _493.x, _493.y, _493.z);
    float3 _503 = (r1.yzw * r4.xyz) + r3.xyz;
    r1 = float4(r1.x, _503.x, _503.y, _503.z);
    float3 _516 = r1.xxx * float3(cb2_m[2].x, cb2_m[2].y, cb2_m[2].z);
    r3 = float4(_516.x, _516.y, _516.z, r3.w);
    float3 _532 = ((-float3(cb2_m[2].x, cb2_m[2].y, cb2_m[2].z)) * r1.xxx) + asfloat(uint3(1065353216u, 1065353216u, 1065353216u));
    r4 = float4(_532.x, _532.y, _532.z, r4.w);
    float3 _542 = (r1.yzw * r4.xyz) + r3.xyz;
    r1 = float4(_542.x, _542.y, _542.z, r1.w);
    r3 = tex2D(SPIRV_Cross_Combinedt2s2, shader_in[4].xyxx.xy);
    float3 _564 = r3.xyz * float3(cb2_m[6].x, cb2_m[6].y, cb2_m[6].z);
    r4 = float4(_564.x, _564.y, _564.z, r4.w);
    r6 = tex2D(SPIRV_Cross_Combinedt3s3, shader_in[4].zwzz.xy);
    float4 _582 = r0;
    _582.w = r6.w * cb2_m[7].z;
    r0 = _582;
    float3 _598 = ((-r3.xyz) * float3(cb2_m[6].x, cb2_m[6].y, cb2_m[6].z)) + r6.xyz;
    r6 = float4(_598.x, _598.y, _598.z, r6.w);
    float4 _610 = r1;
    _610.w = ((-r6.w) * cb2_m[7].z) + asfloat(1065353216u);
    r1 = _610;
    float3 _619 = (r0.www * r6.xyz) + r4.xyz;
    r4 = float4(_619.x, _619.y, _619.z, r4.w);
    float3 _626 = r1.xyz * r4.xyz;
    r1 = float4(_626.x, _626.y, _626.z, r1.w);
    float4 _642 = r0;
    _642.w = mad(r2.xyz.z, r2.xyz.z, mad(r2.xyz.y, r2.xyz.y, r2.xyz.x * r2.xyz.x));
    r0 = _642;
    float4 _647 = r0;
    _647.w = rsqrt(r0.w);
    r0 = _647;
    float3 _653 = r0.www * r2.xyz;
    r2 = float4(_653.x, _653.y, _653.z, r2.w);
    float4 _669 = r0;
    _669.w = mad(r0.xyz.z, r2.xyz.z, mad(r0.xyz.y, r2.xyz.y, r0.xyz.x * r2.xyz.x));
    r0 = _669;
    float4 _686 = r0;
    _686.x = mad(r0.xyz.z, shader_in[3].xyz.z, mad(r0.xyz.y, shader_in[3].xyz.y, r0.xyz.x * shader_in[3].xyz.x));
    r0 = _686;
    float4 _695 = r0;
    _695.x = clamp((r0.x * asfloat(1056964608u)) + asfloat(1056964608u), 0.0f, 1.0f);
    r0 = _695;
    float4 _701 = r0;
    _701.y = max(r0.w, asfloat(0u));
    r0 = _701;
    float3 _710 = (-r0.yyy) + asfloat(uint3(1065353216u, 1064933786u, 1061158912u));
    r0 = float4(r0.x, _710.x, _710.y, _710.z);
    float2 _722 = clamp(r0.zw * asfloat(uint2(3259498496u, 3229785276u)), 0.0f.xx, 1.0f.xx);
    r0 = float4(r0.x, r0.y, _722.x, _722.y);
    float4 _731 = r0;
    _731.y = asfloat((asfloat(1006632960u) >= r0.y) ? 4294967295u : 0u);
    r0 = _731;
    float4 _738 = r0;
    _738.y = asfloat(asuint(r0.y) & 1065353216u);
    r0 = _738;
    float4 _745 = r0;
    _745.y = r5.y * r0.y;
    r0 = _745;
    float2 _751 = r5.xx * r0.zw;
    r0 = float4(r0.x, r0.y, _751.x, _751.y);
    float2 _756 = log2(r0.zw);
    r0 = float4(r0.x, r0.y, _756.x, _756.y);
    float2 _763 = r0.zw * asfloat(uint2(1074580685u, 1074580685u));
    r0 = float4(r0.x, r0.y, _763.x, _763.y);
    float2 _768 = exp2(r0.zw);
    r2 = float4(_768.x, _768.y, r2.z, r2.w);
    float4 _774 = r0;
    _774.y = log2(r0.y);
    r0 = _774;
    float4 _780 = r0;
    _780.y = r0.y * asfloat(1074580685u);
    r0 = _780;
    float4 _785 = r2;
    _785.z = exp2(r0.y);
    r2 = _785;
    r5 = tex2D(SPIRV_Cross_Combinedt1s1, shader_in[4].xyxx.xy);
    float3 _799 = r2.xyz * r5.xyz;
    r0 = float4(r0.x, _799.x, _799.y, _799.z);
    float3 _812 = r0.yyy * float3(cb2_m[3].x, cb2_m[3].y, cb2_m[3].z);
    r2 = float4(_812.x, _812.y, _812.z, r2.w);
    float3 _825 = r0.zzz * float3(cb2_m[4].x, cb2_m[4].y, cb2_m[4].z);
    r5 = float4(_825.x, _825.y, _825.z, r5.w);
    float3 _841 = ((-float3(cb2_m[4].x, cb2_m[4].y, cb2_m[4].z)) * r0.zzz) + asfloat(uint3(1065353216u, 1065353216u, 1065353216u));
    r6 = float4(_841.x, _841.y, _841.z, r6.w);
    float3 _851 = (r2.xyz * r6.xyz) + r5.xyz;
    r2 = float4(_851.x, _851.y, _851.z, r2.w);
    float3 _865 = r0.www * float3(cb2_m[5].x, cb2_m[5].y, cb2_m[5].z);
    r5 = float4(_865.x, _865.y, _865.z, r5.w);
    float3 _881 = ((-float3(cb2_m[5].x, cb2_m[5].y, cb2_m[5].z)) * r0.www) + asfloat(uint3(1065353216u, 1065353216u, 1065353216u));
    r0 = float4(r0.x, _881.x, _881.y, _881.z);
    float3 _891 = (r2.xyz * r0.yzw) + r5.xyz;
    r0 = float4(r0.x, _891.x, _891.y, _891.z);
    float3 _901 = r0.yzw * cb2_m[8].x.xxx;
    r0 = float4(r0.x, _901.x, _901.y, _901.z);
    float3 _908 = r1.www * r0.yzw;
    r0 = float4(r0.x, _908.x, _908.y, _908.z);
    float2 _920 = shader_in[0].xy * float2(cb0_m[6].z, cb0_m[6].w);
    r2 = float4(_920.x, _920.y, r2.z, r2.w);
    r2 = tex2D(SPIRV_Cross_Combinedt15s15, r2.xyxx.xy);
    float4 _935 = r1;
    _935.w = max(r2.y, asfloat(1028443341u));
    r1 = _935;
    float3 _941 = r0.yzw * r1.www;
    r0 = float4(r0.x, _941.x, _941.y, _941.z);
    float3 _951 = (r1.xyz * r2.yyy) + r0.yzw;
    r0 = float4(r0.x, _951.x, _951.y, _951.z);
    float3 _964 = r0.yzw * float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z);
    r0 = float4(r0.x, _964.x, _964.y, _964.z);
    float4 _973 = r1;
    _973.x = (r0.x * asfloat(1073741824u)) + asfloat(3212836864u);
    r1 = _973;
    float4 _982 = r1;
    _982.x = abs(r1.x) + abs(r1.x);
    r1 = _982;
    float4 _992 = r1;
    _992.x = ((-r1.x) * r1.x) + asfloat(1065353216u);
    r1 = _992;
    float4 _998 = r1;
    _998.x = max(r1.x, asfloat(0u));
    r1 = _998;
    float4 _1006 = r1;
    _1006.x = r1.x * cb0_m[7].y;
    r1 = _1006;
    float3 _1030 = (float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z) * cb0_m[7].x.xxx) + (-float3(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z));
    r1 = float4(r1.x, _1030.x, _1030.y, _1030.z);
    float3 _1046 = (r0.xxx * r1.yzw) + float3(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z);
    r1 = float4(r1.x, _1046.x, _1046.y, _1046.z);
    float3 _1060 = (-r1.yzw) + float3(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z);
    r2 = float4(r2.x, _1060.x, _1060.y, _1060.z);
    float3 _1070 = (r1.xxx * r2.yzw) + r1.yzw;
    r1 = float4(_1070.x, _1070.y, _1070.z, r1.w);
    float3 _1077 = r2.xxx * r1.xyz;
    r1 = float4(_1077.x, _1077.y, _1077.z, r1.w);
    float3 _1087 = (r1.xyz * r4.xyz) + r0.yzw;
    r0 = float4(_1087.x, _1087.y, _1087.z, r0.w);
    float4 _1096 = r0;
    _1096.w = (-shader_in[3].w) + asfloat(1065353216u);
    r0 = _1096;
    float3 _1102 = r0.xyz * r0.www;
    r0 = float4(_1102.x, _1102.y, _1102.z, r0.w);
    float3 _1119 = (shader_in[3].www * float3(cb0_m[4].x, cb0_m[4].y, cb0_m[4].z)) + r0.xyz;
    r3 = float4(_1119.x, _1119.y, _1119.z, r3.w);
    o0 = r3 * float4(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z, cb6_m[0].w);
}

void frag_main()
{
    shader_in[1] = float4(v1.x, v1.y, v1.z, shader_in[1].w);
    shader_in[2] = float4(v2.x, v2.y, v2.z, shader_in[2].w);
    shader_in[3] = v3;
    shader_in[4] = v4;
    float4 _1148 = gl_FragCoord;
    _1148.w = 1.0f / _1148.w;
    shader_in[0] = float4(_1148.xy.x, _1148.xy.y, shader_in[0].z, shader_in[0].w);
    ps_main();
}

void main(SPIRV_Cross_Input stage_input)
{
    gl_FragCoord = stage_input.gl_FragCoord + float4(0.5f, 0.5f, 0.0f, 0.0f);
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    frag_main();
}
