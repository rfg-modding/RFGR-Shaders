cbuffer cb0_t : register(b0)
{
    float4 cb0_m[7] : packoffset(c0);
};

cbuffer cb1_t : register(b1)
{
    float4 cb1_m[3] : packoffset(c0);
};

cbuffer cb6_t : register(b6)
{
    float4 cb6_m[1] : packoffset(c0);
};

cbuffer cb2_t : register(b2)
{
    float4 cb2_m[9] : packoffset(c0);
};

uniform sampler2D SPIRV_Cross_Combinedt0s0;
uniform sampler2D SPIRV_Cross_Combinedt2s2;
uniform sampler2D SPIRV_Cross_Combinedt3s3;
uniform sampler2D SPIRV_Cross_Combinedt1s1;
uniform sampler2D SPIRV_Cross_Combinedt15s15;

static float4 gl_FragCoord;
static float3 v1;
static float3 v2;
static float4 v3;
static float4 v4;

struct SPIRV_Cross_Input
{
    float3 v1 : TEXCOORD1;
    float3 v2 : TEXCOORD2;
    float4 v3 : TEXCOORD3;
    float4 v4 : TEXCOORD4;
    float4 gl_FragCoord : VPOS;
};

static float4 shader_in[5];
static float4 o0;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;
static float4 r5;
static float4 r6;

void ps_main()
{
    r0 = tex2D(SPIRV_Cross_Combinedt0s0, shader_in[4].xyxx.xy);
    float3 _82 = (r0.xyw * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r1 = float4(r1.x, _82.x, _82.y, _82.z);
    float4 _91 = r0;
    _91.y = r0.y + r0.y;
    r0 = _91;
    float4 _98 = r1;
    _98.x = r1.w * r1.y;
    r1 = _98;
    float4 _110 = r0;
    _110.w = mad(r1.xz.y, r1.xz.y, r1.xz.x * r1.xz.x);
    r0 = _110;
    float4 _114 = r0;
    _114.x = r1.x;
    r0 = _114;
    float4 _122 = r0;
    _122.w = (-r0.w) + asfloat(1065353216u);
    r0 = _122;
    float4 _129 = r0;
    _129.w = max(r0.w, asfloat(0u));
    r0 = _129;
    float4 _134 = r0;
    _134.z = sqrt(r0.w);
    r0 = _134;
    float3 _141 = r0.xyz + asfloat(uint3(2147483648u, 3212836864u, 3212836864u));
    r0 = float4(_141.x, _141.y, _141.z, r0.w);
    float3 _157 = (cb2_m[7].w.xxx * r0.xyz) + asfloat(uint3(0u, 0u, 1065353216u));
    r0 = float4(_157.x, _157.y, _157.z, r0.w);
    float4 _173 = r0;
    _173.w = mad(r0.xyz.z, r0.xyz.z, mad(r0.xyz.y, r0.xyz.y, r0.xyz.x * r0.xyz.x));
    r0 = _173;
    float4 _178 = r0;
    _178.w = rsqrt(r0.w);
    r0 = _178;
    float3 _184 = r0.www * r0.xyz;
    r0 = float4(_184.x, _184.y, _184.z, r0.w);
    float4 _203 = r0;
    _203.w = mad(shader_in[2].xyz.z, shader_in[2].xyz.z, mad(shader_in[2].xyz.y, shader_in[2].xyz.y, shader_in[2].xyz.x * shader_in[2].xyz.x));
    r0 = _203;
    float4 _208 = r0;
    _208.w = rsqrt(r0.w);
    r0 = _208;
    float3 _215 = r0.www * shader_in[2].xyz;
    r1 = float4(_215.x, _215.y, _215.z, r1.w);
    float4 _231 = r1;
    _231.x = mad(r0.xyz.z, r1.xyz.z, mad(r0.xyz.y, r1.xyz.y, r0.xyz.x * r1.xyz.x));
    r1 = _231;
    float4 _237 = r1;
    _237.x = max(r1.x, asfloat(0u));
    r1 = _237;
    float4 _244 = r1;
    _244.y = (-r1.x) + asfloat(1065353216u);
    r1 = _244;
    float4 _262 = r1;
    _262.z = mad(shader_in[1].xyz.z, shader_in[1].xyz.z, mad(shader_in[1].xyz.y, shader_in[1].xyz.y, shader_in[1].xyz.x * shader_in[1].xyz.x));
    r1 = _262;
    float4 _267 = r1;
    _267.w = rsqrt(r1.z);
    r1 = _267;
    float4 _272 = r1;
    _272.z = sqrt(r1.z);
    r1 = _272;
    float4 _288 = r1;
    _288.z = clamp(((-r1.z) * cb1_m[1].y) + cb1_m[1].x, 0.0f, 1.0f);
    r1 = _288;
    float3 _295 = r1.www * shader_in[1].xyz;
    r2 = float4(_295.x, _295.y, _295.z, r2.w);
    float4 _312 = r1;
    _312.w = mad(r2.xyz.z, r0.xyz.z, mad(r2.xyz.y, r0.xyz.y, r2.xyz.x * r0.xyz.x));
    r1 = _312;
    float4 _321 = r2;
    _321.w = (r1.w * asfloat(1056964608u)) + asfloat(1056964608u);
    r2 = _321;
    float4 _327 = r1;
    _327.w = max(r1.w, asfloat(0u));
    r1 = _327;
    float4 _333 = r2;
    _333.w = max(r2.w, asfloat(0u));
    r2 = _333;
    float4 _340 = r1;
    _340.y = r1.y * r2.w;
    r1 = _340;
    float4 _348 = r3;
    _348.x = r1.y * r1.y;
    r3 = _348;
    float4 _355 = r1;
    _355.y = r1.y * r3.x;
    r1 = _355;
    float4 _362 = r1;
    _362.y = r2.w * r1.y;
    r1 = _362;
    float4 _370 = r1;
    _370.y = clamp(r1.y * asfloat(1082130432u), 0.0f, 1.0f);
    r1 = _370;
    float4 _377 = r2;
    _377.w = r1.w * r1.w;
    r2 = _377;
    float4 _384 = r2;
    _384.w = r2.w * r2.w;
    r2 = _384;
    float4 _391 = r2;
    _391.w = r1.w * r2.w;
    r2 = _391;
    float4 _398 = r1;
    _398.x = r1.x * r1.w;
    r1 = _398;
    float4 _403 = r1;
    _403.x = log2(r1.x);
    r1 = _403;
    float4 _410 = r1;
    _410.x = r1.x * asfloat(1074580685u);
    r1 = _410;
    float4 _415 = r1;
    _415.x = exp2(r1.x);
    r1 = _415;
    float3 _428 = r1.xxx * float3(cb2_m[1].x, cb2_m[1].y, cb2_m[1].z);
    r3 = float4(_428.x, _428.y, _428.z, r3.w);
    float3 _444 = (float3(cb2_m[0].x, cb2_m[0].y, cb2_m[0].z) * r2.www) + r3.xyz;
    r3 = float4(_444.x, _444.y, _444.z, r3.w);
    float3 _460 = (float3(cb2_m[2].x, cb2_m[2].y, cb2_m[2].z) * r1.yyy) + r3.xyz;
    r3 = float4(_460.x, _460.y, _460.z, r3.w);
    r4 = tex2D(SPIRV_Cross_Combinedt2s2, shader_in[4].xyxx.xy);
    float3 _483 = r4.xyz * float3(cb2_m[6].x, cb2_m[6].y, cb2_m[6].z);
    r5 = float4(_483.x, _483.y, _483.z, r5.w);
    r6 = tex2D(SPIRV_Cross_Combinedt3s3, shader_in[4].zwzz.xy);
    float4 _502 = r1;
    _502.x = r6.w * cb2_m[7].z;
    r1 = _502;
    float3 _518 = ((-r4.xyz) * float3(cb2_m[6].x, cb2_m[6].y, cb2_m[6].z)) + r6.xyz;
    r4 = float4(_518.x, _518.y, _518.z, r4.w);
    float4 _530 = r1;
    _530.y = ((-r6.w) * cb2_m[7].z) + asfloat(1065353216u);
    r1 = _530;
    float3 _539 = (r1.xxx * r4.xyz) + r5.xyz;
    r4 = float4(_539.x, _539.y, _539.z, r4.w);
    float3 _546 = r3.xyz * r4.xyz;
    r3 = float4(_546.x, _546.y, _546.z, r3.w);
    float3 _551 = -r2.xyz;
    float4 _565 = r1;
    _565.x = mad(_551.z, shader_in[3].xyz.z, mad(_551.y, shader_in[3].xyz.y, _551.x * shader_in[3].xyz.x));
    r1 = _565;
    float3 _575 = (shader_in[2].xyz * r0.www) + r2.xyz;
    r2 = float4(_575.x, _575.y, _575.z, r2.w);
    float4 _584 = r0;
    _584.w = min(r1.x, cb1_m[2].x);
    r0 = _584;
    float4 _593 = r0;
    _593.w = r0.w + (-cb1_m[2].y);
    r0 = _593;
    float4 _599 = r0;
    _599.w = max(r0.w, asfloat(0u));
    r0 = _599;
    float4 _607 = r0;
    _607.w = r0.w * cb1_m[2].z;
    r0 = _607;
    float4 _618 = r1;
    _618.x = asfloat((asfloat(0u) < cb1_m[2].w) ? 4294967295u : 0u);
    r1 = _618;
    float4 _628 = r0;
    _628.w = (asuint(r1.x) != 0u) ? r0.w : asfloat(1065353216u);
    r0 = _628;
    float4 _635 = r0;
    _635.w = r0.w * r1.z;
    r0 = _635;
    float3 _641 = r0.www * r3.xyz;
    r3 = float4(_641.x, _641.y, _641.z, r3.w);
    float4 _657 = r1;
    _657.x = mad(r2.xyz.z, r2.xyz.z, mad(r2.xyz.y, r2.xyz.y, r2.xyz.x * r2.xyz.x));
    r1 = _657;
    float4 _662 = r1;
    _662.x = rsqrt(r1.x);
    r1 = _662;
    float3 _668 = r1.xxx * r2.xyz;
    r2 = float4(_668.x, _668.y, _668.z, r2.w);
    float4 _684 = r0;
    _684.x = mad(r0.xyz.z, r2.xyz.z, mad(r0.xyz.y, r2.xyz.y, r0.xyz.x * r2.xyz.x));
    r0 = _684;
    float4 _690 = r0;
    _690.x = max(r0.x, asfloat(0u));
    r0 = _690;
    float4 _697 = r0;
    _697.x = r0.x + asfloat(953267991u);
    r0 = _697;
    float4 _702 = r0;
    _702.x = log2(r0.x);
    r0 = _702;
    float2 _711 = r0.xx * asfloat(uint2(1132593152u, 1109393408u));
    r0 = float4(_711.x, _711.y, r0.z, r0.w);
    float2 _716 = exp2(r0.xy);
    r0 = float4(_716.x, _716.y, r0.z, r0.w);
    float2 _723 = min(r0.xy, asfloat(uint2(1065353216u, 1065353216u)));
    r0 = float4(_723.x, _723.y, r0.z, r0.w);
    float2 _736 = (r0.xy * asfloat(uint2(1067030938u, 1069547520u))) + asfloat(uint2(0u, 3184315597u));
    r0 = float4(_736.x, _736.y, r0.z, r0.w);
    float4 _740 = r0;
    _740.z = asfloat(1065353216u);
    r0 = _740;
    float3 _746 = max(r0.xyz, asfloat(uint3(0u, 0u, 0u)));
    r0 = float4(_746.x, _746.y, _746.z, r0.w);
    float4 _756 = r1;
    _756.x = asfloat((r1.w >= asfloat(981668463u)) ? 4294967295u : 0u);
    r1 = _756;
    float4 _763 = r1;
    _763.x = asfloat(asuint(r1.x) & 1065353216u);
    r1 = _763;
    float3 _769 = r0.xyz * r1.xxx;
    r0 = float4(_769.x, _769.y, _769.z, r0.w);
    float3 _776 = r1.www * r0.xyz;
    r0 = float4(_776.x, _776.y, _776.z, r0.w);
    float3 _783 = r0.www * r0.xyz;
    r0 = float4(_783.x, _783.y, _783.z, r0.w);
    r2 = tex2D(SPIRV_Cross_Combinedt1s1, shader_in[4].xyxx.xy);
    float3 _798 = r0.xyz * r2.xyz;
    r0 = float4(_798.x, _798.y, _798.z, r0.w);
    float3 _811 = r0.yyy * float3(cb2_m[4].x, cb2_m[4].y, cb2_m[4].z);
    r1 = float4(_811.x, r1.y, _811.y, _811.z);
    float3 _827 = (float3(cb2_m[3].x, cb2_m[3].y, cb2_m[3].z) * r0.xxx) + r1.xzw;
    r0 = float4(_827.x, _827.y, r0.z, _827.z);
    float3 _844 = (float3(cb2_m[5].x, cb2_m[5].y, cb2_m[5].z) * r0.zzz) + r0.xyw;
    r0 = float4(_844.x, _844.y, _844.z, r0.w);
    float3 _854 = r0.xyz * cb2_m[8].x.xxx;
    r0 = float4(_854.x, _854.y, _854.z, r0.w);
    float3 _861 = r1.yyy * r0.xyz;
    r0 = float4(_861.x, _861.y, _861.z, r0.w);
    float2 _873 = shader_in[0].xy * float2(cb0_m[6].z, cb0_m[6].w);
    r1 = float4(_873.x, _873.y, r1.z, r1.w);
    r1 = tex2D(SPIRV_Cross_Combinedt15s15, r1.xyxx.xy);
    float4 _888 = r0;
    _888.w = max(r1.y, asfloat(1028443341u));
    r0 = _888;
    float3 _894 = r0.www * r0.xyz;
    r0 = float4(_894.x, _894.y, _894.z, r0.w);
    float3 _904 = (r3.xyz * r1.yyy) + r0.xyz;
    r0 = float4(_904.x, _904.y, _904.z, r0.w);
    float3 _917 = r0.xyz * float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z);
    r0 = float4(_917.x, _917.y, _917.z, r0.w);
    float4 _926 = r0;
    _926.w = (-shader_in[3].w) + asfloat(1065353216u);
    r0 = _926;
    float3 _932 = r0.xyz * r0.www;
    r0 = float4(_932.x, _932.y, _932.z, r0.w);
    float4 _936 = r0;
    _936.w = asfloat(1065353216u);
    r0 = _936;
    o0 = r0 * float4(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z, cb6_m[0].w);
}

void frag_main()
{
    shader_in[1] = float4(v1.x, v1.y, v1.z, shader_in[1].w);
    shader_in[2] = float4(v2.x, v2.y, v2.z, shader_in[2].w);
    shader_in[3] = v3;
    shader_in[4] = v4;
    float4 _964 = gl_FragCoord;
    _964.w = 1.0f / _964.w;
    shader_in[0] = float4(_964.xy.x, _964.xy.y, shader_in[0].z, shader_in[0].w);
    ps_main();
}

void main(SPIRV_Cross_Input stage_input)
{
    gl_FragCoord = stage_input.gl_FragCoord + float4(0.5f, 0.5f, 0.0f, 0.0f);
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    frag_main();
}
