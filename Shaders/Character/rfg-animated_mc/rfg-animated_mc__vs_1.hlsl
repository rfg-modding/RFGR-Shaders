cbuffer cb0_t : register(b160)
{
    float4 cb0_m[14] : packoffset(c0);
};

cbuffer cb1_t : register(b161)
{
    float4 cb1_m[2] : packoffset(c0);
};

cbuffer cb4_t : register(b164)
{
    float4 cb4_m[4096] : packoffset(c0);
};

cbuffer cb6_t : register(b166)
{
    float4 cb6_m[3] : packoffset(c0);
};

cbuffer cb2_t : register(b162)
{
    float4 cb2_m[5] : packoffset(c0);
};

uniform float4 gl_HalfPixel;

static float4 gl_Position;
static float gl_PointSize;
static float3 v0;
static int2 v1;
static int2 v2;
static int2 v3;
static float3 v4;
static float4 v5;
static float4 v6;
static float4 v7;
static float4 v8;
static int4 v9;

struct SPIRV_Cross_Input
{
    float3 v0 : TEXCOORD0;
    float2 v1 : TEXCOORD1;
    float2 v2 : TEXCOORD2;
    float2 v3 : TEXCOORD3;
    float3 v4 : TEXCOORD4;
    float4 v5 : TEXCOORD5;
    float4 v6 : TEXCOORD6;
    float4 v7 : TEXCOORD7;
    float4 v8 : TEXCOORD8;
    float4 v9 : TEXCOORD9;
};

struct SPIRV_Cross_Output
{
    float4 gl_Position : POSITION;
    float gl_PointSize : PSIZE;
};

static float4 shader_in[10];
static float4 o0;
static float2 o1;
static float3 o2;
static float3 o3;
static float4 o4;
static float4 o5;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;
static float4 r5;
static float4 r6;

void vs_main()
{
    float4 _77 = r0;
    _77.x = shader_in[8].y + shader_in[8].x;
    r0 = _77;
    float4 _85 = r0;
    _85.x = r0.x + shader_in[8].z;
    r0 = _85;
    float4 _93 = r0;
    _93.x = r0.x + shader_in[8].w;
    r0 = _93;
    float4 _100 = r0;
    _100.x = asfloat(1065353216u) / r0.x;
    r0 = _100;
    float3 _115 = (shader_in[6].xyz * asfloat(uint3(1082130432u, 1082130432u, 1082130432u))) + shader_in[0].xyz;
    r1 = float4(_115.x, _115.y, _115.z, r1.w);
    float4 _120 = r1;
    _120.w = asfloat(1065353216u);
    r1 = _120;
    r2 = asfloat(asint(shader_in[9]) * int4(uint4(3u, 3u, 3u, 3u)));
    int _137 = asint(r2.y);
    r3 = shader_in[8].yyyy * float4(cb4_m[_137].x, cb4_m[_137].y, cb4_m[_137].z, cb4_m[_137].w);
    int _159 = asint(r2.x);
    r3 = (shader_in[8].xxxx * float4(cb4_m[_159].x, cb4_m[_159].y, cb4_m[_159].z, cb4_m[_159].w)) + r3;
    int _178 = asint(r2.z);
    r3 = (shader_in[8].zzzz * float4(cb4_m[_178].x, cb4_m[_178].y, cb4_m[_178].z, cb4_m[_178].w)) + r3;
    int _197 = asint(r2.w);
    r3 = (shader_in[8].wwww * float4(cb4_m[_197].x, cb4_m[_197].y, cb4_m[_197].z, cb4_m[_197].w)) + r3;
    float4 _226 = r4;
    _226.x = mad(r3.w, r1.w, mad(r3.z, r1.z, mad(r3.y, r1.y, r3.x * r1.x)));
    r4 = _226;
    int _235 = asint(r2.y) + 1;
    r5 = shader_in[8].yyyy * float4(cb4_m[_235].x, cb4_m[_235].y, cb4_m[_235].z, cb4_m[_235].w);
    int _254 = asint(r2.x) + 1;
    r5 = (shader_in[8].xxxx * float4(cb4_m[_254].x, cb4_m[_254].y, cb4_m[_254].z, cb4_m[_254].w)) + r5;
    int _274 = asint(r2.z) + 1;
    r5 = (shader_in[8].zzzz * float4(cb4_m[_274].x, cb4_m[_274].y, cb4_m[_274].z, cb4_m[_274].w)) + r5;
    int _294 = asint(r2.w) + 1;
    r5 = (shader_in[8].wwww * float4(cb4_m[_294].x, cb4_m[_294].y, cb4_m[_294].z, cb4_m[_294].w)) + r5;
    float4 _322 = r4;
    _322.y = mad(r5.w, r1.w, mad(r5.z, r1.z, mad(r5.y, r1.y, r5.x * r1.x)));
    r4 = _322;
    int _331 = asint(r2.y) + 2;
    r6 = shader_in[8].yyyy * float4(cb4_m[_331].x, cb4_m[_331].y, cb4_m[_331].z, cb4_m[_331].w);
    int _350 = asint(r2.x) + 2;
    r6 = (shader_in[8].xxxx * float4(cb4_m[_350].x, cb4_m[_350].y, cb4_m[_350].z, cb4_m[_350].w)) + r6;
    int _370 = asint(r2.z) + 2;
    r6 = (shader_in[8].zzzz * float4(cb4_m[_370].x, cb4_m[_370].y, cb4_m[_370].z, cb4_m[_370].w)) + r6;
    int _390 = asint(r2.w) + 2;
    r2 = (shader_in[8].wwww * float4(cb4_m[_390].x, cb4_m[_390].y, cb4_m[_390].z, cb4_m[_390].w)) + r6;
    float4 _418 = r4;
    _418.z = mad(r2.w, r1.w, mad(r2.z, r1.z, mad(r2.y, r1.y, r2.x * r1.x)));
    r4 = _418;
    float3 _424 = r0.xxx * r4.xyz;
    r1 = float4(_424.x, _424.y, _424.z, r1.w);
    float4 _428 = r1;
    _428.w = asfloat(1065353216u);
    r1 = _428;
    float4 _439 = float4(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z, cb6_m[0].w);
    float4 _453 = r4;
    _453.x = mad(_439.w, r1.w, mad(_439.z, r1.z, mad(_439.y, r1.y, _439.x * r1.x)));
    r4 = _453;
    float4 _464 = float4(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z, cb6_m[1].w);
    float4 _478 = r4;
    _478.y = mad(_464.w, r1.w, mad(_464.z, r1.z, mad(_464.y, r1.y, _464.x * r1.x)));
    r4 = _478;
    float4 _489 = float4(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z, cb6_m[2].w);
    float4 _503 = r4;
    _503.z = mad(_489.w, r1.w, mad(_489.z, r1.z, mad(_489.y, r1.y, _489.x * r1.x)));
    r4 = _503;
    float4 _506 = r4;
    _506.w = asfloat(1065353216u);
    r4 = _506;
    float4 _517 = float4(cb0_m[0].x, cb0_m[0].y, cb0_m[0].z, cb0_m[0].w);
    float4 _531 = o0;
    _531.x = mad(_517.w, r4.w, mad(_517.z, r4.z, mad(_517.y, r4.y, _517.x * r4.x)));
    o0 = _531;
    float4 _542 = float4(cb0_m[1].x, cb0_m[1].y, cb0_m[1].z, cb0_m[1].w);
    float4 _556 = o0;
    _556.y = mad(_542.w, r4.w, mad(_542.z, r4.z, mad(_542.y, r4.y, _542.x * r4.x)));
    o0 = _556;
    float4 _567 = float4(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z, cb0_m[2].w);
    float4 _581 = o0;
    _581.z = mad(_567.w, r4.w, mad(_567.z, r4.z, mad(_567.y, r4.y, _567.x * r4.x)));
    o0 = _581;
    float4 _593 = float4(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z, cb0_m[3].w);
    float4 _607 = o0;
    _607.w = mad(_593.w, r4.w, mad(_593.z, r4.z, mad(_593.y, r4.y, _593.x * r4.x)));
    o0 = _607;
    float2 _613 = float2(asint(shader_in[2].xy));
    r0 = float4(r0.x, _613.x, _613.y, r0.w);
    float2 _627 = cb0_m[12].x.xx * float2(cb2_m[2].x, cb2_m[2].y);
    r1 = float4(_627.x, _627.y, r1.z, r1.w);
    float2 _639 = (r0.yz * asfloat(uint2(981467136u, 981467136u))) + r1.xy;
    r0 = float4(r0.x, _639.x, _639.y, r0.w);
    float2 _648 = o1;
    _648.x = r0.y * cb2_m[2].w;
    o1 = _648;
    float2 _656 = o1;
    _656.y = r0.z * cb2_m[3].x;
    o1 = _656;
    float3 _669 = (shader_in[4].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r0 = float4(r0.x, _669.x, _669.y, _669.z);
    float3 _679 = (shader_in[7].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r1 = float4(_679.x, _679.y, _679.z, r1.w);
    float3 _688 = (r1.xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + r0.yzw;
    r0 = float4(r0.x, _688.x, _688.y, _688.z);
    float4 _704 = r1;
    _704.x = mad(r0.yzw.z, r0.yzw.z, mad(r0.yzw.y, r0.yzw.y, r0.yzw.x * r0.yzw.x));
    r1 = _704;
    float4 _709 = r1;
    _709.x = rsqrt(r1.x);
    r1 = _709;
    float3 _715 = r0.yzw * r1.xxx;
    r0 = float4(r0.x, _715.x, _715.y, _715.z);
    float4 _731 = r1;
    _731.x = mad(r3.xyz.z, r0.yzw.z, mad(r3.xyz.y, r0.yzw.y, r3.xyz.x * r0.yzw.x));
    r1 = _731;
    float4 _746 = r1;
    _746.y = mad(r5.xyz.z, r0.yzw.z, mad(r5.xyz.y, r0.yzw.y, r5.xyz.x * r0.yzw.x));
    r1 = _746;
    float4 _761 = r1;
    _761.z = mad(r2.xyz.z, r0.yzw.z, mad(r2.xyz.y, r0.yzw.y, r2.xyz.x * r0.yzw.x));
    r1 = _761;
    float3 _767 = r0.xxx * r1.xyz;
    r0 = float4(r0.x, _767.x, _767.y, _767.z);
    float4 _783 = r1;
    _783.x = mad(r0.yzw.z, r0.yzw.z, mad(r0.yzw.y, r0.yzw.y, r0.yzw.x * r0.yzw.x));
    r1 = _783;
    float4 _788 = r1;
    _788.x = rsqrt(r1.x);
    r1 = _788;
    float3 _794 = r0.yzw * r1.xxx;
    r0 = float4(r0.x, _794.x, _794.y, _794.z);
    float3 _804 = float3(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z);
    float4 _816 = r1;
    _816.x = mad(_804.z, r0.yzw.z, mad(_804.y, r0.yzw.y, _804.x * r0.yzw.x));
    r1 = _816;
    float3 _825 = float3(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z);
    float4 _837 = r1;
    _837.y = mad(_825.z, r0.yzw.z, mad(_825.y, r0.yzw.y, _825.x * r0.yzw.x));
    r1 = _837;
    float3 _846 = float3(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z);
    float4 _858 = r1;
    _858.z = mad(_846.z, r0.yzw.z, mad(_846.y, r0.yzw.y, _846.x * r0.yzw.x));
    r1 = _858;
    float4 _873 = r0;
    _873.y = mad(r1.xyz.z, r1.xyz.z, mad(r1.xyz.y, r1.xyz.y, r1.xyz.x * r1.xyz.x));
    r0 = _873;
    float4 _878 = r0;
    _878.y = rsqrt(r0.y);
    r0 = _878;
    float3 _884 = r0.yyy * r1.xyz;
    r0 = float4(r0.x, _884.x, _884.y, _884.z);
    r1 = (shader_in[5] * asfloat(uint4(1073741824u, 1073741824u, 1073741824u, 1073741824u))) + asfloat(uint4(3212836864u, 3212836864u, 3212836864u, 3212836864u));
    float4 _909 = r3;
    _909.x = mad(r3.xyz.z, r1.xyz.z, mad(r3.xyz.y, r1.xyz.y, r3.xyz.x * r1.xyz.x));
    r3 = _909;
    float4 _924 = r3;
    _924.y = mad(r5.xyz.z, r1.xyz.z, mad(r5.xyz.y, r1.xyz.y, r5.xyz.x * r1.xyz.x));
    r3 = _924;
    float4 _939 = r3;
    _939.z = mad(r2.xyz.z, r1.xyz.z, mad(r2.xyz.y, r1.xyz.y, r2.xyz.x * r1.xyz.x));
    r3 = _939;
    float3 _945 = r0.xxx * r3.xyz;
    r1 = float4(_945.x, _945.y, _945.z, r1.w);
    float4 _961 = r0;
    _961.x = mad(r1.xyz.z, r1.xyz.z, mad(r1.xyz.y, r1.xyz.y, r1.xyz.x * r1.xyz.x));
    r0 = _961;
    float4 _966 = r0;
    _966.x = rsqrt(r0.x);
    r0 = _966;
    float3 _972 = r0.xxx * r1.xyz;
    r1 = float4(_972.x, _972.y, _972.z, r1.w);
    float3 _982 = float3(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z);
    float4 _994 = r2;
    _994.x = mad(_982.z, r1.xyz.z, mad(_982.y, r1.xyz.y, _982.x * r1.xyz.x));
    r2 = _994;
    float3 _1003 = float3(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z);
    float4 _1015 = r2;
    _1015.y = mad(_1003.z, r1.xyz.z, mad(_1003.y, r1.xyz.y, _1003.x * r1.xyz.x));
    r2 = _1015;
    float3 _1024 = float3(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z);
    float4 _1036 = r2;
    _1036.z = mad(_1024.z, r1.xyz.z, mad(_1024.y, r1.xyz.y, _1024.x * r1.xyz.x));
    r2 = _1036;
    float4 _1051 = r0;
    _1051.x = mad(r2.xyz.z, r2.xyz.z, mad(r2.xyz.y, r2.xyz.y, r2.xyz.x * r2.xyz.x));
    r0 = _1051;
    float4 _1056 = r0;
    _1056.x = rsqrt(r0.x);
    r0 = _1056;
    float3 _1062 = r0.xxx * r2.xyz;
    r1 = float4(_1062.x, _1062.y, _1062.z, r1.w);
    float3 _1069 = r0.wyz * r1.yzx;
    r2 = float4(_1069.x, _1069.y, _1069.z, r2.w);
    float3 _1080 = (r0.zwy * r1.zxy) + (-r2.xyz);
    r2 = float4(_1080.x, _1080.y, _1080.z, r2.w);
    float3 _1087 = r1.www * r2.xyz;
    r2 = float4(_1087.x, _1087.y, _1087.z, r2.w);
    float3 _1101 = (-r4.xyz) + float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z);
    r3 = float4(_1101.x, _1101.y, _1101.z, r3.w);
    float3 _1117 = o2;
    _1117.y = mad(r3.xyz.z, r2.xyz.z, mad(r3.xyz.y, r2.xyz.y, r3.xyz.x * r2.xyz.x));
    o2 = _1117;
    float3 _1132 = o2;
    _1132.z = mad(r3.xyz.z, r0.yzw.z, mad(r3.xyz.y, r0.yzw.y, r3.xyz.x * r0.yzw.x));
    o2 = _1132;
    float3 _1147 = o2;
    _1147.x = mad(r3.xyz.z, r1.xyz.z, mad(r3.xyz.y, r1.xyz.y, r3.xyz.x * r1.xyz.x));
    o2 = _1147;
    float3 _1161 = (-r4.xyz) + float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z);
    r3 = float4(_1161.x, _1161.y, _1161.z, r3.w);
    float3 _1175 = r4.xyz + (-float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z));
    r4 = float4(_1175.x, _1175.y, _1175.z, r4.w);
    float4 _1191 = r0;
    _1191.x = mad(r3.xyz.z, r3.xyz.z, mad(r3.xyz.y, r3.xyz.y, r3.xyz.x * r3.xyz.x));
    r0 = _1191;
    float4 _1196 = r0;
    _1196.x = rsqrt(r0.x);
    r0 = _1196;
    float3 _1202 = r0.xxx * r3.xyz;
    r3 = float4(_1202.x, _1202.y, _1202.z, r3.w);
    float3 _1218 = o3;
    _1218.z = mad(r3.xyz.z, r0.yzw.z, mad(r3.xyz.y, r0.yzw.y, r3.xyz.x * r0.yzw.x));
    o3 = _1218;
    float3 _1227 = float3(cb1_m[1].x, cb1_m[1].y, cb1_m[1].z);
    float4 _1239 = o4;
    _1239.z = mad(_1227.z, r0.yzw.z, mad(_1227.y, r0.yzw.y, _1227.x * r0.yzw.x));
    o4 = _1239;
    float3 _1254 = o3;
    _1254.x = mad(r3.xyz.z, r1.xyz.z, mad(r3.xyz.y, r1.xyz.y, r3.xyz.x * r1.xyz.x));
    o3 = _1254;
    float3 _1263 = float3(cb1_m[1].x, cb1_m[1].y, cb1_m[1].z);
    float4 _1275 = o4;
    _1275.x = mad(_1263.z, r1.xyz.z, mad(_1263.y, r1.xyz.y, _1263.x * r1.xyz.x));
    o4 = _1275;
    float3 _1290 = o3;
    _1290.y = mad(r3.xyz.z, r2.xyz.z, mad(r3.xyz.y, r2.xyz.y, r3.xyz.x * r2.xyz.x));
    o3 = _1290;
    float3 _1299 = float3(cb1_m[1].x, cb1_m[1].y, cb1_m[1].z);
    float4 _1311 = o4;
    _1311.y = mad(_1299.z, r2.xyz.z, mad(_1299.y, r2.xyz.y, _1299.x * r2.xyz.x));
    o4 = _1311;
    float4 _1320 = r0;
    _1320.x = r4.y * cb0_m[13].x;
    r0 = _1320;
    float4 _1327 = r0;
    _1327.y = r0.x * asfloat(3216550459u);
    r0 = _1327;
    float4 _1332 = r0;
    _1332.y = exp2(r0.y);
    r0 = _1332;
    float4 _1339 = r0;
    _1339.y = (-r0.y) + asfloat(1065353216u);
    r0 = _1339;
    float4 _1346 = r0;
    _1346.x = r0.y / r0.x;
    r0 = _1346;
    float4 _1358 = r0;
    _1358.y = asfloat((asfloat(1008981770u) < abs(r4.y)) ? 4294967295u : 0u);
    r0 = _1358;
    float4 _1373 = r0;
    _1373.z = mad(r4.xyz.z, r4.xyz.z, mad(r4.xyz.y, r4.xyz.y, r4.xyz.x * r4.xyz.x));
    r0 = _1373;
    float4 _1378 = r0;
    _1378.z = sqrt(r0.z);
    r0 = _1378;
    float4 _1386 = r0;
    _1386.z = r0.z * cb0_m[13].y;
    r0 = _1386;
    float4 _1396 = r0;
    _1396.x = (asuint(r0.y) != 0u) ? r0.x : asfloat(1065353216u);
    r0 = _1396;
    float4 _1408 = r0;
    _1408.x = (r0.x * r0.z) + (-cb0_m[13].w);
    r0 = _1408;
    float4 _1414 = r0;
    _1414.x = exp2(-r0.x);
    r0 = _1414;
    float4 _1420 = r0;
    _1420.x = min(r0.x, asfloat(1065353216u));
    r0 = _1420;
    float4 _1427 = o4;
    _1427.w = (-r0.x) + asfloat(1065353216u);
    o4 = _1427;
    float2 _1433 = float2(asint(shader_in[1].xy));
    r0 = float4(_1433.x, _1433.y, r0.z, r0.w);
    float2 _1446 = cb0_m[12].x.xx * float2(cb2_m[4].x, cb2_m[4].y);
    r0 = float4(r0.x, r0.y, _1446.x, _1446.y);
    float2 _1455 = (r0.xy * asfloat(uint2(981467136u, 981467136u))) + r0.zw;
    o5 = float4(_1455.x, _1455.y, o5.z, o5.w);
    float2 _1462 = float2(asint(shader_in[3].xy));
    r0 = float4(_1462.x, _1462.y, r0.z, r0.w);
    float2 _1475 = cb0_m[12].x.xx * float2(cb2_m[3].y, cb2_m[3].z);
    r0 = float4(r0.x, r0.y, _1475.x, _1475.y);
    float2 _1484 = (r0.xy * asfloat(uint2(981467136u, 981467136u))) + r0.zw;
    o5 = float4(o5.x, o5.y, _1484.x, _1484.y);
}

void vert_main()
{
    shader_in[0] = float4(v0.x, v0.y, v0.z, shader_in[0].w);
    float2 _1493 = asfloat(v1);
    shader_in[1] = float4(_1493.x, _1493.y, shader_in[1].z, shader_in[1].w);
    float2 _1498 = asfloat(v2);
    shader_in[2] = float4(_1498.x, _1498.y, shader_in[2].z, shader_in[2].w);
    float2 _1503 = asfloat(v3);
    shader_in[3] = float4(_1503.x, _1503.y, shader_in[3].z, shader_in[3].w);
    shader_in[4] = float4(v4.x, v4.y, v4.z, shader_in[4].w);
    shader_in[5] = v5;
    shader_in[6] = v6;
    shader_in[7] = v7;
    shader_in[8] = v8;
    shader_in[9] = asfloat(v9);
    vs_main();
    gl_Position = o0;
    gl_PointSize = 1.0f;
    gl_Position.x = gl_Position.x - gl_HalfPixel.x * gl_Position.w;
    gl_Position.y = gl_Position.y + gl_HalfPixel.y * gl_Position.w;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    v0 = stage_input.v0;
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    v5 = stage_input.v5;
    v6 = stage_input.v6;
    v7 = stage_input.v7;
    v8 = stage_input.v8;
    v9 = stage_input.v9;
    vert_main();
    SPIRV_Cross_Output stage_output;
    stage_output.gl_Position = gl_Position;
    stage_output.gl_PointSize = gl_PointSize;
    return stage_output;
}
