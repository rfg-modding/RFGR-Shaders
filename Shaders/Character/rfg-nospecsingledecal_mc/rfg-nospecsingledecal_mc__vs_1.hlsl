cbuffer cb0_t : register(b160)
{
    float4 cb0_m[14] : packoffset(c0);
};

cbuffer cb1_t : register(b161)
{
    float4 cb1_m[2] : packoffset(c0);
};

cbuffer cb4_t : register(b164)
{
    float4 cb4_m[4096] : packoffset(c0);
};

cbuffer cb6_t : register(b166)
{
    float4 cb6_m[3] : packoffset(c0);
};

cbuffer cb2_t : register(b162)
{
    float4 cb2_m[2] : packoffset(c0);
};

uniform float4 gl_HalfPixel;

static float4 gl_Position;
static float gl_PointSize;
static float3 v0;
static int2 v1;
static int2 v2;
static float3 v3;
static float4 v4;
static float4 v5;
static float4 v6;
static float4 v7;
static int4 v8;

struct SPIRV_Cross_Input
{
    float3 v0 : TEXCOORD0;
    float2 v1 : TEXCOORD1;
    float2 v2 : TEXCOORD2;
    float3 v3 : TEXCOORD3;
    float4 v4 : TEXCOORD4;
    float4 v5 : TEXCOORD5;
    float4 v6 : TEXCOORD6;
    float4 v7 : TEXCOORD7;
    float4 v8 : TEXCOORD8;
};

struct SPIRV_Cross_Output
{
    float4 gl_Position : POSITION;
    float gl_PointSize : PSIZE;
};

static float4 shader_in[9];
static float4 o0;
static float3 o1;
static float4 o2;
static float4 o3;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;
static float4 r5;
static float4 r6;

void vs_main()
{
    float4 _71 = r0;
    _71.x = shader_in[7].y + shader_in[7].x;
    r0 = _71;
    float4 _79 = r0;
    _79.x = r0.x + shader_in[7].z;
    r0 = _79;
    float4 _87 = r0;
    _87.x = r0.x + shader_in[7].w;
    r0 = _87;
    float4 _94 = r0;
    _94.x = asfloat(1065353216u) / r0.x;
    r0 = _94;
    float3 _109 = (shader_in[5].xyz * asfloat(uint3(1082130432u, 1082130432u, 1082130432u))) + shader_in[0].xyz;
    r1 = float4(_109.x, _109.y, _109.z, r1.w);
    float4 _114 = r1;
    _114.w = asfloat(1065353216u);
    r1 = _114;
    r2 = asfloat(asint(shader_in[8]) * int4(uint4(3u, 3u, 3u, 3u)));
    int _131 = asint(r2.y);
    r3 = shader_in[7].yyyy * float4(cb4_m[_131].x, cb4_m[_131].y, cb4_m[_131].z, cb4_m[_131].w);
    int _153 = asint(r2.x);
    r3 = (shader_in[7].xxxx * float4(cb4_m[_153].x, cb4_m[_153].y, cb4_m[_153].z, cb4_m[_153].w)) + r3;
    int _172 = asint(r2.z);
    r3 = (shader_in[7].zzzz * float4(cb4_m[_172].x, cb4_m[_172].y, cb4_m[_172].z, cb4_m[_172].w)) + r3;
    int _191 = asint(r2.w);
    r3 = (shader_in[7].wwww * float4(cb4_m[_191].x, cb4_m[_191].y, cb4_m[_191].z, cb4_m[_191].w)) + r3;
    float4 _220 = r4;
    _220.x = mad(r3.w, r1.w, mad(r3.z, r1.z, mad(r3.y, r1.y, r3.x * r1.x)));
    r4 = _220;
    int _229 = asint(r2.y) + 1;
    r5 = shader_in[7].yyyy * float4(cb4_m[_229].x, cb4_m[_229].y, cb4_m[_229].z, cb4_m[_229].w);
    int _248 = asint(r2.x) + 1;
    r5 = (shader_in[7].xxxx * float4(cb4_m[_248].x, cb4_m[_248].y, cb4_m[_248].z, cb4_m[_248].w)) + r5;
    int _268 = asint(r2.z) + 1;
    r5 = (shader_in[7].zzzz * float4(cb4_m[_268].x, cb4_m[_268].y, cb4_m[_268].z, cb4_m[_268].w)) + r5;
    int _288 = asint(r2.w) + 1;
    r5 = (shader_in[7].wwww * float4(cb4_m[_288].x, cb4_m[_288].y, cb4_m[_288].z, cb4_m[_288].w)) + r5;
    float4 _316 = r4;
    _316.y = mad(r5.w, r1.w, mad(r5.z, r1.z, mad(r5.y, r1.y, r5.x * r1.x)));
    r4 = _316;
    int _325 = asint(r2.y) + 2;
    r6 = shader_in[7].yyyy * float4(cb4_m[_325].x, cb4_m[_325].y, cb4_m[_325].z, cb4_m[_325].w);
    int _344 = asint(r2.x) + 2;
    r6 = (shader_in[7].xxxx * float4(cb4_m[_344].x, cb4_m[_344].y, cb4_m[_344].z, cb4_m[_344].w)) + r6;
    int _364 = asint(r2.z) + 2;
    r6 = (shader_in[7].zzzz * float4(cb4_m[_364].x, cb4_m[_364].y, cb4_m[_364].z, cb4_m[_364].w)) + r6;
    int _384 = asint(r2.w) + 2;
    r2 = (shader_in[7].wwww * float4(cb4_m[_384].x, cb4_m[_384].y, cb4_m[_384].z, cb4_m[_384].w)) + r6;
    float4 _412 = r4;
    _412.z = mad(r2.w, r1.w, mad(r2.z, r1.z, mad(r2.y, r1.y, r2.x * r1.x)));
    r4 = _412;
    float3 _418 = r0.xxx * r4.xyz;
    r1 = float4(_418.x, _418.y, _418.z, r1.w);
    float4 _422 = r1;
    _422.w = asfloat(1065353216u);
    r1 = _422;
    float4 _433 = float4(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z, cb6_m[0].w);
    float4 _447 = r4;
    _447.x = mad(_433.w, r1.w, mad(_433.z, r1.z, mad(_433.y, r1.y, _433.x * r1.x)));
    r4 = _447;
    float4 _458 = float4(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z, cb6_m[1].w);
    float4 _472 = r4;
    _472.y = mad(_458.w, r1.w, mad(_458.z, r1.z, mad(_458.y, r1.y, _458.x * r1.x)));
    r4 = _472;
    float4 _483 = float4(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z, cb6_m[2].w);
    float4 _497 = r4;
    _497.z = mad(_483.w, r1.w, mad(_483.z, r1.z, mad(_483.y, r1.y, _483.x * r1.x)));
    r4 = _497;
    float4 _500 = r4;
    _500.w = asfloat(1065353216u);
    r4 = _500;
    float4 _511 = float4(cb0_m[0].x, cb0_m[0].y, cb0_m[0].z, cb0_m[0].w);
    float4 _525 = o0;
    _525.x = mad(_511.w, r4.w, mad(_511.z, r4.z, mad(_511.y, r4.y, _511.x * r4.x)));
    o0 = _525;
    float4 _536 = float4(cb0_m[1].x, cb0_m[1].y, cb0_m[1].z, cb0_m[1].w);
    float4 _550 = o0;
    _550.y = mad(_536.w, r4.w, mad(_536.z, r4.z, mad(_536.y, r4.y, _536.x * r4.x)));
    o0 = _550;
    float4 _561 = float4(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z, cb0_m[2].w);
    float4 _575 = o0;
    _575.z = mad(_561.w, r4.w, mad(_561.z, r4.z, mad(_561.y, r4.y, _561.x * r4.x)));
    o0 = _575;
    float4 _587 = float4(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z, cb0_m[3].w);
    float4 _601 = o0;
    _601.w = mad(_587.w, r4.w, mad(_587.z, r4.z, mad(_587.y, r4.y, _587.x * r4.x)));
    o0 = _601;
    float3 _613 = (shader_in[3].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r0 = float4(r0.x, _613.x, _613.y, _613.z);
    float3 _623 = (shader_in[6].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r1 = float4(_623.x, _623.y, _623.z, r1.w);
    float3 _632 = (r1.xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + r0.yzw;
    r0 = float4(r0.x, _632.x, _632.y, _632.z);
    float4 _648 = r1;
    _648.x = mad(r0.yzw.z, r0.yzw.z, mad(r0.yzw.y, r0.yzw.y, r0.yzw.x * r0.yzw.x));
    r1 = _648;
    float4 _653 = r1;
    _653.x = rsqrt(r1.x);
    r1 = _653;
    float3 _659 = r0.yzw * r1.xxx;
    r0 = float4(r0.x, _659.x, _659.y, _659.z);
    float4 _675 = r1;
    _675.x = mad(r3.xyz.z, r0.yzw.z, mad(r3.xyz.y, r0.yzw.y, r3.xyz.x * r0.yzw.x));
    r1 = _675;
    float4 _690 = r1;
    _690.y = mad(r5.xyz.z, r0.yzw.z, mad(r5.xyz.y, r0.yzw.y, r5.xyz.x * r0.yzw.x));
    r1 = _690;
    float4 _705 = r1;
    _705.z = mad(r2.xyz.z, r0.yzw.z, mad(r2.xyz.y, r0.yzw.y, r2.xyz.x * r0.yzw.x));
    r1 = _705;
    float3 _711 = r0.xxx * r1.xyz;
    r0 = float4(r0.x, _711.x, _711.y, _711.z);
    float4 _727 = r1;
    _727.x = mad(r0.yzw.z, r0.yzw.z, mad(r0.yzw.y, r0.yzw.y, r0.yzw.x * r0.yzw.x));
    r1 = _727;
    float4 _732 = r1;
    _732.x = rsqrt(r1.x);
    r1 = _732;
    float3 _738 = r0.yzw * r1.xxx;
    r0 = float4(r0.x, _738.x, _738.y, _738.z);
    float3 _748 = float3(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z);
    float4 _760 = r1;
    _760.x = mad(_748.z, r0.yzw.z, mad(_748.y, r0.yzw.y, _748.x * r0.yzw.x));
    r1 = _760;
    float3 _769 = float3(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z);
    float4 _781 = r1;
    _781.y = mad(_769.z, r0.yzw.z, mad(_769.y, r0.yzw.y, _769.x * r0.yzw.x));
    r1 = _781;
    float3 _790 = float3(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z);
    float4 _802 = r1;
    _802.z = mad(_790.z, r0.yzw.z, mad(_790.y, r0.yzw.y, _790.x * r0.yzw.x));
    r1 = _802;
    float4 _817 = r0;
    _817.y = mad(r1.xyz.z, r1.xyz.z, mad(r1.xyz.y, r1.xyz.y, r1.xyz.x * r1.xyz.x));
    r0 = _817;
    float4 _822 = r0;
    _822.y = rsqrt(r0.y);
    r0 = _822;
    float3 _828 = r0.yyy * r1.xyz;
    r0 = float4(r0.x, _828.x, _828.y, _828.z);
    r1 = (shader_in[4] * asfloat(uint4(1073741824u, 1073741824u, 1073741824u, 1073741824u))) + asfloat(uint4(3212836864u, 3212836864u, 3212836864u, 3212836864u));
    float4 _853 = r3;
    _853.x = mad(r3.xyz.z, r1.xyz.z, mad(r3.xyz.y, r1.xyz.y, r3.xyz.x * r1.xyz.x));
    r3 = _853;
    float4 _868 = r3;
    _868.y = mad(r5.xyz.z, r1.xyz.z, mad(r5.xyz.y, r1.xyz.y, r5.xyz.x * r1.xyz.x));
    r3 = _868;
    float4 _883 = r3;
    _883.z = mad(r2.xyz.z, r1.xyz.z, mad(r2.xyz.y, r1.xyz.y, r2.xyz.x * r1.xyz.x));
    r3 = _883;
    float3 _889 = r0.xxx * r3.xyz;
    r1 = float4(_889.x, _889.y, _889.z, r1.w);
    float4 _905 = r0;
    _905.x = mad(r1.xyz.z, r1.xyz.z, mad(r1.xyz.y, r1.xyz.y, r1.xyz.x * r1.xyz.x));
    r0 = _905;
    float4 _910 = r0;
    _910.x = rsqrt(r0.x);
    r0 = _910;
    float3 _916 = r0.xxx * r1.xyz;
    r1 = float4(_916.x, _916.y, _916.z, r1.w);
    float3 _926 = float3(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z);
    float4 _938 = r2;
    _938.x = mad(_926.z, r1.xyz.z, mad(_926.y, r1.xyz.y, _926.x * r1.xyz.x));
    r2 = _938;
    float3 _947 = float3(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z);
    float4 _959 = r2;
    _959.y = mad(_947.z, r1.xyz.z, mad(_947.y, r1.xyz.y, _947.x * r1.xyz.x));
    r2 = _959;
    float3 _968 = float3(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z);
    float4 _980 = r2;
    _980.z = mad(_968.z, r1.xyz.z, mad(_968.y, r1.xyz.y, _968.x * r1.xyz.x));
    r2 = _980;
    float4 _995 = r0;
    _995.x = mad(r2.xyz.z, r2.xyz.z, mad(r2.xyz.y, r2.xyz.y, r2.xyz.x * r2.xyz.x));
    r0 = _995;
    float4 _1000 = r0;
    _1000.x = rsqrt(r0.x);
    r0 = _1000;
    float3 _1006 = r0.xxx * r2.xyz;
    r1 = float4(_1006.x, _1006.y, _1006.z, r1.w);
    float3 _1013 = r0.wyz * r1.yzx;
    r2 = float4(_1013.x, _1013.y, _1013.z, r2.w);
    float3 _1024 = (r0.zwy * r1.zxy) + (-r2.xyz);
    r2 = float4(_1024.x, _1024.y, _1024.z, r2.w);
    float3 _1031 = r1.www * r2.xyz;
    r2 = float4(_1031.x, _1031.y, _1031.z, r2.w);
    float3 _1045 = (-r4.xyz) + float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z);
    r3 = float4(_1045.x, _1045.y, _1045.z, r3.w);
    float3 _1060 = r4.xyz + (-float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z));
    r4 = float4(_1060.x, _1060.y, _1060.z, r4.w);
    float3 _1076 = o1;
    _1076.y = mad(r3.xyz.z, r2.xyz.z, mad(r3.xyz.y, r2.xyz.y, r3.xyz.x * r2.xyz.x));
    o1 = _1076;
    float3 _1085 = float3(cb1_m[1].x, cb1_m[1].y, cb1_m[1].z);
    float4 _1097 = o2;
    _1097.y = mad(_1085.z, r2.xyz.z, mad(_1085.y, r2.xyz.y, _1085.x * r2.xyz.x));
    o2 = _1097;
    float3 _1112 = o1;
    _1112.z = mad(r3.xyz.z, r0.yzw.z, mad(r3.xyz.y, r0.yzw.y, r3.xyz.x * r0.yzw.x));
    o1 = _1112;
    float3 _1121 = float3(cb1_m[1].x, cb1_m[1].y, cb1_m[1].z);
    float4 _1133 = o2;
    _1133.z = mad(_1121.z, r0.yzw.z, mad(_1121.y, r0.yzw.y, _1121.x * r0.yzw.x));
    o2 = _1133;
    float3 _1148 = o1;
    _1148.x = mad(r3.xyz.z, r1.xyz.z, mad(r3.xyz.y, r1.xyz.y, r3.xyz.x * r1.xyz.x));
    o1 = _1148;
    float3 _1157 = float3(cb1_m[1].x, cb1_m[1].y, cb1_m[1].z);
    float4 _1169 = o2;
    _1169.x = mad(_1157.z, r1.xyz.z, mad(_1157.y, r1.xyz.y, _1157.x * r1.xyz.x));
    o2 = _1169;
    float4 _1178 = r0;
    _1178.x = r4.y * cb0_m[13].x;
    r0 = _1178;
    float4 _1185 = r0;
    _1185.y = r0.x * asfloat(3216550459u);
    r0 = _1185;
    float4 _1190 = r0;
    _1190.y = exp2(r0.y);
    r0 = _1190;
    float4 _1197 = r0;
    _1197.y = (-r0.y) + asfloat(1065353216u);
    r0 = _1197;
    float4 _1204 = r0;
    _1204.x = r0.y / r0.x;
    r0 = _1204;
    float4 _1216 = r0;
    _1216.y = asfloat((asfloat(1008981770u) < abs(r4.y)) ? 4294967295u : 0u);
    r0 = _1216;
    float4 _1231 = r0;
    _1231.z = mad(r4.xyz.z, r4.xyz.z, mad(r4.xyz.y, r4.xyz.y, r4.xyz.x * r4.xyz.x));
    r0 = _1231;
    float4 _1236 = r0;
    _1236.z = sqrt(r0.z);
    r0 = _1236;
    float4 _1244 = r0;
    _1244.z = r0.z * cb0_m[13].y;
    r0 = _1244;
    float4 _1254 = r0;
    _1254.x = (asuint(r0.y) != 0u) ? r0.x : asfloat(1065353216u);
    r0 = _1254;
    float4 _1266 = r0;
    _1266.x = (r0.x * r0.z) + (-cb0_m[13].w);
    r0 = _1266;
    float4 _1272 = r0;
    _1272.x = exp2(-r0.x);
    r0 = _1272;
    float4 _1278 = r0;
    _1278.x = min(r0.x, asfloat(1065353216u));
    r0 = _1278;
    float4 _1285 = o2;
    _1285.w = (-r0.x) + asfloat(1065353216u);
    o2 = _1285;
    float2 _1292 = float2(asint(shader_in[2].xy));
    r0 = float4(_1292.x, _1292.y, r0.z, r0.w);
    float2 _1303 = r0.xy * float2(cb2_m[1].y, cb2_m[1].z);
    r0 = float4(_1303.x, _1303.y, r0.z, r0.w);
    float2 _1312 = r0.xy * asfloat(uint2(981467136u, 981467136u));
    o3 = float4(o3.x, o3.y, _1312.x, _1312.y);
    float2 _1319 = float2(asint(shader_in[1].xy));
    r0 = float4(_1319.x, _1319.y, r0.z, r0.w);
    float2 _1325 = r0.xy * asfloat(uint2(981467136u, 981467136u));
    o3 = float4(_1325.x, _1325.y, o3.z, o3.w);
}

void vert_main()
{
    shader_in[0] = float4(v0.x, v0.y, v0.z, shader_in[0].w);
    float2 _1334 = asfloat(v1);
    shader_in[1] = float4(_1334.x, _1334.y, shader_in[1].z, shader_in[1].w);
    float2 _1339 = asfloat(v2);
    shader_in[2] = float4(_1339.x, _1339.y, shader_in[2].z, shader_in[2].w);
    shader_in[3] = float4(v3.x, v3.y, v3.z, shader_in[3].w);
    shader_in[4] = v4;
    shader_in[5] = v5;
    shader_in[6] = v6;
    shader_in[7] = v7;
    shader_in[8] = asfloat(v8);
    vs_main();
    gl_Position = o0;
    gl_PointSize = 1.0f;
    gl_Position.x = gl_Position.x - gl_HalfPixel.x * gl_Position.w;
    gl_Position.y = gl_Position.y + gl_HalfPixel.y * gl_Position.w;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    v0 = stage_input.v0;
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    v5 = stage_input.v5;
    v6 = stage_input.v6;
    v7 = stage_input.v7;
    v8 = stage_input.v8;
    vert_main();
    SPIRV_Cross_Output stage_output;
    stage_output.gl_Position = gl_Position;
    stage_output.gl_PointSize = gl_PointSize;
    return stage_output;
}
