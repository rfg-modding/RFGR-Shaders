cbuffer cb0_t : register(b160)
{
    float4 cb0_m[14] : packoffset(c0);
};

cbuffer cb4_t : register(b164)
{
    float4 cb4_m[4096] : packoffset(c0);
};

cbuffer cb6_t : register(b166)
{
    float4 cb6_m[4] : packoffset(c0);
};

uniform float4 gl_HalfPixel;

static float4 gl_Position;
static float gl_PointSize;
static float3 v0;
static int2 v1;
static float3 v2;
static float4 v3;
static float4 v4;
static float4 v5;
static int4 v6;

struct SPIRV_Cross_Input
{
    float3 v0 : TEXCOORD0;
    float2 v1 : TEXCOORD1;
    float3 v2 : TEXCOORD2;
    float4 v3 : TEXCOORD3;
    float4 v4 : TEXCOORD4;
    float4 v5 : TEXCOORD5;
    float4 v6 : TEXCOORD6;
};

struct SPIRV_Cross_Output
{
    float4 gl_Position : POSITION;
    float gl_PointSize : PSIZE;
};

static float4 shader_in[7];
static float4 o0;
static float4 o1;
static float4 o2;
static float4 o3;
static float4 o4;
static float3 o5;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;
static float4 r5;
static float4 r6;

void vs_main()
{
    float4 _62 = r0;
    _62.x = shader_in[5].y + shader_in[5].x;
    r0 = _62;
    float4 _70 = r0;
    _70.x = r0.x + shader_in[5].z;
    r0 = _70;
    float4 _78 = r0;
    _78.x = r0.x + shader_in[5].w;
    r0 = _78;
    float4 _85 = r0;
    _85.x = asfloat(1065353216u) / r0.x;
    r0 = _85;
    float3 _100 = (shader_in[3].xyz * asfloat(uint3(1082130432u, 1082130432u, 1082130432u))) + shader_in[0].xyz;
    r1 = float4(_100.x, _100.y, _100.z, r1.w);
    float4 _105 = r1;
    _105.w = asfloat(1065353216u);
    r1 = _105;
    r2 = asfloat(asint(shader_in[6]) * int4(uint4(3u, 3u, 3u, 3u)));
    int _123 = asint(r2.y);
    r3 = shader_in[5].yyyy * float4(cb4_m[_123].x, cb4_m[_123].y, cb4_m[_123].z, cb4_m[_123].w);
    int _146 = asint(r2.x);
    r3 = (shader_in[5].xxxx * float4(cb4_m[_146].x, cb4_m[_146].y, cb4_m[_146].z, cb4_m[_146].w)) + r3;
    int _165 = asint(r2.z);
    r3 = (shader_in[5].zzzz * float4(cb4_m[_165].x, cb4_m[_165].y, cb4_m[_165].z, cb4_m[_165].w)) + r3;
    int _184 = asint(r2.w);
    r3 = (shader_in[5].wwww * float4(cb4_m[_184].x, cb4_m[_184].y, cb4_m[_184].z, cb4_m[_184].w)) + r3;
    float4 _213 = r4;
    _213.x = mad(r3.w, r1.w, mad(r3.z, r1.z, mad(r3.y, r1.y, r3.x * r1.x)));
    r4 = _213;
    int _222 = asint(r2.y) + 1;
    r5 = shader_in[5].yyyy * float4(cb4_m[_222].x, cb4_m[_222].y, cb4_m[_222].z, cb4_m[_222].w);
    int _241 = asint(r2.x) + 1;
    r5 = (shader_in[5].xxxx * float4(cb4_m[_241].x, cb4_m[_241].y, cb4_m[_241].z, cb4_m[_241].w)) + r5;
    int _261 = asint(r2.z) + 1;
    r5 = (shader_in[5].zzzz * float4(cb4_m[_261].x, cb4_m[_261].y, cb4_m[_261].z, cb4_m[_261].w)) + r5;
    int _281 = asint(r2.w) + 1;
    r5 = (shader_in[5].wwww * float4(cb4_m[_281].x, cb4_m[_281].y, cb4_m[_281].z, cb4_m[_281].w)) + r5;
    float4 _309 = r4;
    _309.y = mad(r5.w, r1.w, mad(r5.z, r1.z, mad(r5.y, r1.y, r5.x * r1.x)));
    r4 = _309;
    int _318 = asint(r2.y) + 2;
    r6 = shader_in[5].yyyy * float4(cb4_m[_318].x, cb4_m[_318].y, cb4_m[_318].z, cb4_m[_318].w);
    int _337 = asint(r2.x) + 2;
    r6 = (shader_in[5].xxxx * float4(cb4_m[_337].x, cb4_m[_337].y, cb4_m[_337].z, cb4_m[_337].w)) + r6;
    int _357 = asint(r2.z) + 2;
    r6 = (shader_in[5].zzzz * float4(cb4_m[_357].x, cb4_m[_357].y, cb4_m[_357].z, cb4_m[_357].w)) + r6;
    int _377 = asint(r2.w) + 2;
    r2 = (shader_in[5].wwww * float4(cb4_m[_377].x, cb4_m[_377].y, cb4_m[_377].z, cb4_m[_377].w)) + r6;
    float4 _405 = r4;
    _405.z = mad(r2.w, r1.w, mad(r2.z, r1.z, mad(r2.y, r1.y, r2.x * r1.x)));
    r4 = _405;
    float3 _411 = r0.xxx * r4.xyz;
    r1 = float4(_411.x, _411.y, _411.z, r1.w);
    float4 _415 = r1;
    _415.w = asfloat(1065353216u);
    r1 = _415;
    float4 _426 = float4(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z, cb6_m[0].w);
    float4 _440 = r4;
    _440.x = mad(_426.w, r1.w, mad(_426.z, r1.z, mad(_426.y, r1.y, _426.x * r1.x)));
    r4 = _440;
    float4 _451 = float4(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z, cb6_m[2].w);
    float4 _465 = r4;
    _465.z = mad(_451.w, r1.w, mad(_451.z, r1.z, mad(_451.y, r1.y, _451.x * r1.x)));
    r4 = _465;
    float4 _476 = float4(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z, cb6_m[1].w);
    float4 _490 = r4;
    _490.y = mad(_476.w, r1.w, mad(_476.z, r1.z, mad(_476.y, r1.y, _476.x * r1.x)));
    r4 = _490;
    float4 _493 = r4;
    _493.w = asfloat(1065353216u);
    r4 = _493;
    float4 _504 = float4(cb0_m[0].x, cb0_m[0].y, cb0_m[0].z, cb0_m[0].w);
    float4 _518 = o0;
    _518.x = mad(_504.w, r4.w, mad(_504.z, r4.z, mad(_504.y, r4.y, _504.x * r4.x)));
    o0 = _518;
    float4 _529 = float4(cb0_m[1].x, cb0_m[1].y, cb0_m[1].z, cb0_m[1].w);
    float4 _543 = o0;
    _543.y = mad(_529.w, r4.w, mad(_529.z, r4.z, mad(_529.y, r4.y, _529.x * r4.x)));
    o0 = _543;
    float4 _554 = float4(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z, cb0_m[2].w);
    float4 _568 = o0;
    _568.z = mad(_554.w, r4.w, mad(_554.z, r4.z, mad(_554.y, r4.y, _554.x * r4.x)));
    o0 = _568;
    float4 _579 = float4(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z, cb0_m[3].w);
    float4 _593 = o0;
    _593.w = mad(_579.w, r4.w, mad(_579.z, r4.z, mad(_579.y, r4.y, _579.x * r4.x)));
    o0 = _593;
    float3 _605 = (shader_in[2].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r0 = float4(r0.x, _605.x, _605.y, _605.z);
    float3 _615 = (shader_in[4].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r1 = float4(_615.x, _615.y, _615.z, r1.w);
    float3 _624 = (r1.xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + r0.yzw;
    r0 = float4(r0.x, _624.x, _624.y, _624.z);
    float4 _640 = r1;
    _640.x = mad(r0.yzw.z, r0.yzw.z, mad(r0.yzw.y, r0.yzw.y, r0.yzw.x * r0.yzw.x));
    r1 = _640;
    float4 _645 = r1;
    _645.x = rsqrt(r1.x);
    r1 = _645;
    float3 _651 = r0.yzw * r1.xxx;
    r0 = float4(r0.x, _651.x, _651.y, _651.z);
    float4 _667 = r1;
    _667.x = mad(r3.xyz.z, r0.yzw.z, mad(r3.xyz.y, r0.yzw.y, r3.xyz.x * r0.yzw.x));
    r1 = _667;
    float4 _682 = r1;
    _682.y = mad(r5.xyz.z, r0.yzw.z, mad(r5.xyz.y, r0.yzw.y, r5.xyz.x * r0.yzw.x));
    r1 = _682;
    float4 _697 = r1;
    _697.z = mad(r2.xyz.z, r0.yzw.z, mad(r2.xyz.y, r0.yzw.y, r2.xyz.x * r0.yzw.x));
    r1 = _697;
    float3 _703 = r0.xxx * r1.xyz;
    r0 = float4(_703.x, _703.y, _703.z, r0.w);
    float4 _719 = r0;
    _719.w = mad(r0.xyz.z, r0.xyz.z, mad(r0.xyz.y, r0.xyz.y, r0.xyz.x * r0.xyz.x));
    r0 = _719;
    float4 _724 = r0;
    _724.w = rsqrt(r0.w);
    r0 = _724;
    float3 _730 = r0.www * r0.xyz;
    r0 = float4(_730.x, _730.y, _730.z, r0.w);
    float3 _740 = float3(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z);
    float4 _752 = r1;
    _752.x = mad(_740.z, r0.xyz.z, mad(_740.y, r0.xyz.y, _740.x * r0.xyz.x));
    r1 = _752;
    float3 _761 = float3(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z);
    float4 _773 = r1;
    _773.y = mad(_761.z, r0.xyz.z, mad(_761.y, r0.xyz.y, _761.x * r0.xyz.x));
    r1 = _773;
    float3 _782 = float3(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z);
    float4 _794 = r1;
    _794.z = mad(_782.z, r0.xyz.z, mad(_782.y, r0.xyz.y, _782.x * r0.xyz.x));
    r1 = _794;
    float4 _809 = r0;
    _809.x = mad(r1.xyz.z, r1.xyz.z, mad(r1.xyz.y, r1.xyz.y, r1.xyz.x * r1.xyz.x));
    r0 = _809;
    float4 _814 = r0;
    _814.x = rsqrt(r0.x);
    r0 = _814;
    float3 _820 = r0.xxx * r1.xyz;
    r0 = float4(_820.x, _820.y, _820.z, r0.w);
    float3 _835 = (-r4.xyz) + float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z);
    r1 = float4(_835.x, _835.y, _835.z, r1.w);
    float3 _849 = r4.xyz + (-float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z));
    r2 = float4(_849.x, _849.y, _849.z, r2.w);
    float4 _862 = r0;
    _862.w = asfloat((cb6_m[3].w < r4.y) ? 4294967295u : 0u);
    r0 = _862;
    float3 _869 = o5;
    _869.x = asfloat(asuint(r0.w) & 1065353216u);
    o5 = _869;
    float4 _884 = r0;
    _884.w = mad(r1.xyz.z, r1.xyz.z, mad(r1.xyz.y, r1.xyz.y, r1.xyz.x * r1.xyz.x));
    r0 = _884;
    float4 _889 = r1;
    _889.w = rsqrt(r0.w);
    r1 = _889;
    float4 _894 = r0;
    _894.w = sqrt(r0.w);
    r0 = _894;
    float4 _901 = r0;
    _901.w = r0.w + asfloat(3221225472u);
    r0 = _901;
    float4 _911 = o3;
    _911.w = clamp(r0.w * asfloat(1015889355u), 0.0f, 1.0f);
    o3 = _911;
    float4 _921 = r0;
    _921.w = ((-r1.y) * r1.w) + asfloat(1065353216u);
    r0 = _921;
    float3 _927 = r1.www * r1.xyz;
    r1 = float4(_927.x, _927.y, _927.z, r1.w);
    float4 _938 = r0;
    _938.w = asfloat((abs(r0.w) < asfloat(981668463u)) ? 4294967295u : 0u);
    r0 = _938;
    float4 _947 = r1;
    _947.w = asfloat((abs(r1.x) < asfloat(981668463u)) ? 4294967295u : 0u);
    r1 = _947;
    float4 _956 = r2;
    _956.w = asfloat((asfloat(0u) == abs(r1.z)) ? 0u : 4294967295u);
    r2 = _956;
    float4 _966 = r1;
    _966.w = asfloat(asuint(r1.w) & asuint(r2.w));
    r1 = _966;
    float4 _976 = r0;
    _976.w = asfloat(asuint(r0.w) & asuint(r1.w));
    r0 = _976;
    uint3 _980 = asuint(r0.www);
    float3 _982 = asfloat(uint3(0u, 0u, 1065353216u));
    float3 _984 = asfloat(uint3(1065353216u, 0u, 0u));
    bool3 _987 = bool3(_980.x != uint3(0u, 0u, 0u).x, _980.y != uint3(0u, 0u, 0u).y, _980.z != uint3(0u, 0u, 0u).z);
    float3 _988 = float3(_987.x ? _982.x : _984.x, _987.y ? _982.y : _984.y, _987.z ? _982.z : _984.z);
    r3 = float4(_988.x, _988.y, _988.z, r3.w);
    float3 _995 = r1.zxy * r3.xyz;
    r4 = float4(_995.x, _995.y, _995.z, r4.w);
    float3 _1006 = (r1.yzx * r3.yzx) + (-r4.xyz);
    r3 = float4(_1006.x, _1006.y, _1006.z, r3.w);
    float4 _1022 = r0;
    _1022.w = mad(r3.xyz.z, r3.xyz.z, mad(r3.xyz.y, r3.xyz.y, r3.xyz.x * r3.xyz.x));
    r0 = _1022;
    float4 _1027 = r0;
    _1027.w = rsqrt(r0.w);
    r0 = _1027;
    float3 _1033 = r0.www * r3.xyz;
    r3 = float4(_1033.x, _1033.y, _1033.z, r3.w);
    float3 _1040 = r1.yzx * r3.zxy;
    r4 = float4(_1040.x, _1040.y, _1040.z, r4.w);
    float3 _1051 = (r3.yzx * r1.zxy) + (-r4.xyz);
    r4 = float4(_1051.x, _1051.y, _1051.z, r4.w);
    float4 _1067 = r0;
    _1067.w = mad(r3.xyz.z, r0.xyz.z, mad(r3.xyz.y, r0.xyz.y, r3.xyz.x * r0.xyz.x));
    r0 = _1067;
    float4 _1076 = r0;
    _1076.w = (r0.w * asfloat(1056964608u)) + asfloat(1056964608u);
    r0 = _1076;
    float4 _1083 = o1;
    _1083.x = (-r0.w) + asfloat(1065353216u);
    o1 = _1083;
    float4 _1098 = r0;
    _1098.w = mad(r4.xyz.z, r4.xyz.z, mad(r4.xyz.y, r4.xyz.y, r4.xyz.x * r4.xyz.x));
    r0 = _1098;
    float4 _1103 = r0;
    _1103.w = rsqrt(r0.w);
    r0 = _1103;
    float3 _1109 = r0.www * r4.xyz;
    r3 = float4(_1109.x, _1109.y, _1109.z, r3.w);
    float4 _1125 = r0;
    _1125.w = mad(r3.xyz.z, r0.xyz.z, mad(r3.xyz.y, r0.xyz.y, r3.xyz.x * r0.xyz.x));
    r0 = _1125;
    float4 _1133 = r0;
    _1133.w = (r0.w * asfloat(1056964608u)) + asfloat(1056964608u);
    r0 = _1133;
    float4 _1140 = o1;
    _1140.y = (-r0.w) + asfloat(1065353216u);
    o1 = _1140;
    float2 _1145 = asfloat(uint2(0u, 1065353216u));
    o1 = float4(o1.x, o1.y, _1145.x, _1145.y);
    float4 _1162 = o2;
    _1162.w = clamp(mad(r1.xyz.z, r0.xyz.z, mad(r1.xyz.y, r0.xyz.y, r1.xyz.x * r0.xyz.x)), 0.0f, 1.0f);
    o2 = _1162;
    o3 = float4(r0.xyz.x, r0.xyz.y, r0.xyz.z, o3.w);
    o2 = float4(r1.xyz.x, r1.xyz.y, r1.xyz.z, o2.w);
    float3 _1177 = float3(asint(shader_in[1].xxy));
    r0 = float4(_1177.x, _1177.y, _1177.z, r0.w);
    float3 _1186 = r0.xyz * asfloat(uint3(989855744u, 989855744u, 981467136u));
    r0 = float4(_1186.x, _1186.y, _1186.z, r0.w);
    float3 _1202 = (cb0_m[12].x.xxx * asfloat(uint3(1041865114u, 3189348762u, 1028443341u))) + r0.xyz;
    o4 = float4(_1202.x, o4.y, _1202.y, _1202.z);
    float4 _1207 = o4;
    _1207.y = r0.z;
    o4 = _1207;
    float4 _1216 = r0;
    _1216.x = r2.y * cb0_m[13].x;
    r0 = _1216;
    float4 _1223 = r0;
    _1223.y = r0.x * asfloat(3216550459u);
    r0 = _1223;
    float4 _1228 = r0;
    _1228.y = exp2(r0.y);
    r0 = _1228;
    float4 _1235 = r0;
    _1235.y = (-r0.y) + asfloat(1065353216u);
    r0 = _1235;
    float4 _1242 = r0;
    _1242.x = r0.y / r0.x;
    r0 = _1242;
    float4 _1252 = r0;
    _1252.y = asfloat((asfloat(1008981770u) < abs(r2.y)) ? 4294967295u : 0u);
    r0 = _1252;
    float4 _1267 = r0;
    _1267.z = mad(r2.xyz.z, r2.xyz.z, mad(r2.xyz.y, r2.xyz.y, r2.xyz.x * r2.xyz.x));
    r0 = _1267;
    float4 _1272 = r0;
    _1272.z = sqrt(r0.z);
    r0 = _1272;
    float4 _1280 = r0;
    _1280.z = r0.z * cb0_m[13].y;
    r0 = _1280;
    float4 _1290 = r0;
    _1290.x = (asuint(r0.y) != 0u) ? r0.x : asfloat(1065353216u);
    r0 = _1290;
    float4 _1302 = r0;
    _1302.x = (r0.x * r0.z) + (-cb0_m[13].w);
    r0 = _1302;
    float4 _1308 = r0;
    _1308.x = exp2(-r0.x);
    r0 = _1308;
    float4 _1314 = r0;
    _1314.x = min(r0.x, asfloat(1065353216u));
    r0 = _1314;
    float3 _1321 = o5;
    _1321.z = (-r0.x) + asfloat(1065353216u);
    o5 = _1321;
    float4 _1331 = r0;
    _1331.x = asfloat((cb6_m[3].w < asfloat(3323739136u)) ? 4294967295u : 0u);
    r0 = _1331;
    float4 _1341 = r0;
    _1341.y = asfloat((asfloat(3323741184u) < cb6_m[3].w) ? 4294967295u : 0u);
    r0 = _1341;
    float4 _1351 = r0;
    _1351.x = asfloat(asuint(r0.y) & asuint(r0.x));
    r0 = _1351;
    float3 _1360 = o5;
    _1360.y = (asuint(r0.x) != 0u) ? asfloat(0u) : asfloat(1065353216u);
    o5 = _1360;
}

void vert_main()
{
    shader_in[0] = float4(v0.x, v0.y, v0.z, shader_in[0].w);
    float2 _1368 = asfloat(v1);
    shader_in[1] = float4(_1368.x, _1368.y, shader_in[1].z, shader_in[1].w);
    shader_in[2] = float4(v2.x, v2.y, v2.z, shader_in[2].w);
    shader_in[3] = v3;
    shader_in[4] = v4;
    shader_in[5] = v5;
    shader_in[6] = asfloat(v6);
    vs_main();
    gl_Position = o0;
    gl_PointSize = 1.0f;
    gl_Position.x = gl_Position.x - gl_HalfPixel.x * gl_Position.w;
    gl_Position.y = gl_Position.y + gl_HalfPixel.y * gl_Position.w;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    v0 = stage_input.v0;
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    v5 = stage_input.v5;
    v6 = stage_input.v6;
    vert_main();
    SPIRV_Cross_Output stage_output;
    stage_output.gl_Position = gl_Position;
    stage_output.gl_PointSize = gl_PointSize;
    return stage_output;
}
