cbuffer cb0_t : register(b160)
{
    float4 cb0_m[14] : packoffset(c0);
};

cbuffer cb1_t : register(b161)
{
    float4 cb1_m[2] : packoffset(c0);
};

cbuffer cb4_t : register(b164)
{
    float4 cb4_m[4096] : packoffset(c0);
};

cbuffer cb5_t : register(b165)
{
    float4 cb5_m[7] : packoffset(c0);
};

cbuffer cb6_t : register(b166)
{
    float4 cb6_m[3] : packoffset(c0);
};

uniform float4 gl_HalfPixel;

static float4 gl_Position;
static float gl_PointSize;
static float3 v0;
static float3 v1;
static float4 v2;
static int4 v3;

struct SPIRV_Cross_Input
{
    float3 v0 : TEXCOORD0;
    float3 v1 : TEXCOORD1;
    float4 v2 : TEXCOORD2;
    float4 v3 : TEXCOORD3;
};

struct SPIRV_Cross_Output
{
    float4 gl_Position : POSITION;
    float gl_PointSize : PSIZE;
};

static float4 shader_in[4];
static float4 o0;
static float2 o1;
static float3 o2;
static float4 o3;
static float4 o4;
static float4 o5;
static float4 o6;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;
static float4 r5;
static float4 r6;
static float4 r7;

void vs_main()
{
    float4 _70 = r0;
    _70.x = shader_in[2].y + shader_in[2].x;
    r0 = _70;
    float4 _78 = r0;
    _78.x = r0.x + shader_in[2].z;
    r0 = _78;
    float4 _86 = r0;
    _86.x = r0.x + shader_in[2].w;
    r0 = _86;
    float4 _93 = r0;
    _93.x = asfloat(1065353216u) / r0.x;
    r0 = _93;
    r1 = float4(shader_in[0].xyz.x, shader_in[0].xyz.y, shader_in[0].xyz.z, r1.w);
    float4 _103 = r1;
    _103.w = asfloat(1065353216u);
    r1 = _103;
    r2 = asfloat(asint(shader_in[3]) * int4(uint4(3u, 3u, 3u, 3u)));
    int _120 = asint(r2.y);
    r3 = shader_in[2].yyyy * float4(cb4_m[_120].x, cb4_m[_120].y, cb4_m[_120].z, cb4_m[_120].w);
    int _142 = asint(r2.x);
    r3 = (shader_in[2].xxxx * float4(cb4_m[_142].x, cb4_m[_142].y, cb4_m[_142].z, cb4_m[_142].w)) + r3;
    int _161 = asint(r2.z);
    r3 = (shader_in[2].zzzz * float4(cb4_m[_161].x, cb4_m[_161].y, cb4_m[_161].z, cb4_m[_161].w)) + r3;
    int _180 = asint(r2.w);
    r3 = (shader_in[2].wwww * float4(cb4_m[_180].x, cb4_m[_180].y, cb4_m[_180].z, cb4_m[_180].w)) + r3;
    float4 _209 = r4;
    _209.x = mad(r3.w, r1.w, mad(r3.z, r1.z, mad(r3.y, r1.y, r3.x * r1.x)));
    r4 = _209;
    int _218 = asint(r2.y) + 1;
    r5 = shader_in[2].yyyy * float4(cb4_m[_218].x, cb4_m[_218].y, cb4_m[_218].z, cb4_m[_218].w);
    int _237 = asint(r2.x) + 1;
    r5 = (shader_in[2].xxxx * float4(cb4_m[_237].x, cb4_m[_237].y, cb4_m[_237].z, cb4_m[_237].w)) + r5;
    int _257 = asint(r2.z) + 1;
    r5 = (shader_in[2].zzzz * float4(cb4_m[_257].x, cb4_m[_257].y, cb4_m[_257].z, cb4_m[_257].w)) + r5;
    int _277 = asint(r2.w) + 1;
    r5 = (shader_in[2].wwww * float4(cb4_m[_277].x, cb4_m[_277].y, cb4_m[_277].z, cb4_m[_277].w)) + r5;
    float4 _305 = r4;
    _305.y = mad(r5.w, r1.w, mad(r5.z, r1.z, mad(r5.y, r1.y, r5.x * r1.x)));
    r4 = _305;
    int _313 = asint(r2.y) + 2;
    r6 = shader_in[2].yyyy * float4(cb4_m[_313].x, cb4_m[_313].y, cb4_m[_313].z, cb4_m[_313].w);
    int _332 = asint(r2.x) + 2;
    r6 = (shader_in[2].xxxx * float4(cb4_m[_332].x, cb4_m[_332].y, cb4_m[_332].z, cb4_m[_332].w)) + r6;
    int _352 = asint(r2.z) + 2;
    r6 = (shader_in[2].zzzz * float4(cb4_m[_352].x, cb4_m[_352].y, cb4_m[_352].z, cb4_m[_352].w)) + r6;
    int _372 = asint(r2.w) + 2;
    r2 = (shader_in[2].wwww * float4(cb4_m[_372].x, cb4_m[_372].y, cb4_m[_372].z, cb4_m[_372].w)) + r6;
    float4 _400 = r4;
    _400.z = mad(r2.w, r1.w, mad(r2.z, r1.z, mad(r2.y, r1.y, r2.x * r1.x)));
    r4 = _400;
    float3 _406 = r0.xxx * r4.xyz;
    r1 = float4(_406.x, _406.y, _406.z, r1.w);
    float4 _410 = r1;
    _410.w = asfloat(1065353216u);
    r1 = _410;
    float4 _421 = float4(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z, cb6_m[0].w);
    float4 _435 = r4;
    _435.x = mad(_421.w, r1.w, mad(_421.z, r1.z, mad(_421.y, r1.y, _421.x * r1.x)));
    r4 = _435;
    float4 _446 = float4(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z, cb6_m[1].w);
    float4 _460 = r4;
    _460.y = mad(_446.w, r1.w, mad(_446.z, r1.z, mad(_446.y, r1.y, _446.x * r1.x)));
    r4 = _460;
    float4 _471 = float4(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z, cb6_m[2].w);
    float4 _485 = r4;
    _485.z = mad(_471.w, r1.w, mad(_471.z, r1.z, mad(_471.y, r1.y, _471.x * r1.x)));
    r4 = _485;
    float4 _488 = r4;
    _488.w = asfloat(1065353216u);
    r4 = _488;
    float4 _499 = float4(cb0_m[0].x, cb0_m[0].y, cb0_m[0].z, cb0_m[0].w);
    float4 _513 = o0;
    _513.x = mad(_499.w, r4.w, mad(_499.z, r4.z, mad(_499.y, r4.y, _499.x * r4.x)));
    o0 = _513;
    float4 _524 = float4(cb0_m[1].x, cb0_m[1].y, cb0_m[1].z, cb0_m[1].w);
    float4 _538 = o0;
    _538.y = mad(_524.w, r4.w, mad(_524.z, r4.z, mad(_524.y, r4.y, _524.x * r4.x)));
    o0 = _538;
    float4 _549 = float4(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z, cb0_m[2].w);
    float4 _563 = o0;
    _563.z = mad(_549.w, r4.w, mad(_549.z, r4.z, mad(_549.y, r4.y, _549.x * r4.x)));
    o0 = _563;
    float4 _574 = float4(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z, cb0_m[3].w);
    float4 _588 = o0;
    _588.w = mad(_574.w, r4.w, mad(_574.z, r4.z, mad(_574.y, r4.y, _574.x * r4.x)));
    o0 = _588;
    float4 _592 = r0;
    _592.y = asfloat(3212836864u);
    r0 = _592;
    float3 _606 = shader_in[0].xyz + (-float3(cb5_m[3].x, cb5_m[3].y, cb5_m[3].z));
    r1 = float4(_606.x, _606.y, _606.z, r1.w);
    float3 _618 = float3(cb5_m[1].x, cb5_m[1].y, cb5_m[1].z);
    float4 _628 = r0;
    _628.z = mad(r1.xyz.z, _618.z, mad(r1.xyz.y, _618.y, r1.xyz.x * _618.x));
    r0 = _628;
    float4 _637 = r0;
    _637.z = r0.z * cb5_m[5].y;
    r0 = _637;
    float4 _644 = r6;
    _644.y = r0.z * r0.y;
    r6 = _644;
    float3 _655 = float3(cb5_m[0].x, cb5_m[0].y, cb5_m[0].z);
    float4 _666 = r7;
    _666.x = mad(r1.xyz.z, _655.z, mad(r1.xyz.y, _655.y, r1.xyz.x * _655.x));
    r7 = _666;
    float3 _677 = float3(cb5_m[2].x, cb5_m[2].y, cb5_m[2].z);
    float4 _687 = r7;
    _687.z = mad(r1.xyz.z, _677.z, mad(r1.xyz.y, _677.y, r1.xyz.x * _677.x));
    r7 = _687;
    float2 _697 = r7.xz * float2(cb5_m[5].x, cb5_m[5].z);
    r6 = float4(_697.x, r6.y, _697.y, r6.w);
    o1 = r6.xy + asfloat(uint2(1056964608u, 1056964608u));
    float4 _709 = o3;
    _709.w = r6.z;
    o3 = _709;
    float3 _721 = (shader_in[1].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r0 = float4(r0.x, _721.x, _721.y, _721.z);
    float3 _735 = r0.zwy * (-float3(cb5_m[0].z, cb5_m[0].x, cb5_m[0].y));
    r1 = float4(_735.x, _735.y, _735.z, r1.w);
    float3 _753 = ((-float3(cb5_m[0].y, cb5_m[0].z, cb5_m[0].x)) * r0.wyz) + (-r1.xyz);
    r1 = float4(_753.x, _753.y, _753.z, r1.w);
    float4 _769 = r1;
    _769.w = mad(r1.xyz.z, r1.xyz.z, mad(r1.xyz.y, r1.xyz.y, r1.xyz.x * r1.xyz.x));
    r1 = _769;
    float4 _774 = r1;
    _774.w = rsqrt(r1.w);
    r1 = _774;
    float3 _780 = r1.www * r1.xyz;
    r1 = float4(_780.x, _780.y, _780.z, r1.w);
    float3 _787 = r0.wyz * r1.yzx;
    r6 = float4(_787.x, _787.y, _787.z, r6.w);
    float3 _798 = (r0.zwy * r1.zxy) + (-r6.xyz);
    r6 = float4(_798.x, _798.y, _798.z, r6.w);
    float3 _808 = float3(cb5_m[2].x, cb5_m[2].y, cb5_m[2].z);
    float4 _820 = o3;
    _820.y = mad(_808.z, r1.xyz.z, mad(_808.y, r1.xyz.y, _808.x * r1.xyz.x));
    o3 = _820;
    float4 _835 = r1;
    _835.x = mad(r6.xyz.z, r6.xyz.z, mad(r6.xyz.y, r6.xyz.y, r6.xyz.x * r6.xyz.x));
    r1 = _835;
    float4 _840 = r1;
    _840.x = rsqrt(r1.x);
    r1 = _840;
    float3 _846 = r1.xxx * r6.xyz;
    r1 = float4(_846.x, _846.y, _846.z, r1.w);
    float4 _862 = r6;
    _862.x = mad(r3.xyz.z, r1.xyz.z, mad(r3.xyz.y, r1.xyz.y, r3.xyz.x * r1.xyz.x));
    r6 = _862;
    float4 _877 = r3;
    _877.x = mad(r3.xyz.z, r0.yzw.z, mad(r3.xyz.y, r0.yzw.y, r3.xyz.x * r0.yzw.x));
    r3 = _877;
    float4 _892 = r6;
    _892.y = mad(r5.xyz.z, r1.xyz.z, mad(r5.xyz.y, r1.xyz.y, r5.xyz.x * r1.xyz.x));
    r6 = _892;
    float4 _907 = r3;
    _907.y = mad(r5.xyz.z, r0.yzw.z, mad(r5.xyz.y, r0.yzw.y, r5.xyz.x * r0.yzw.x));
    r3 = _907;
    float4 _922 = r6;
    _922.z = mad(r2.xyz.z, r1.xyz.z, mad(r2.xyz.y, r1.xyz.y, r2.xyz.x * r1.xyz.x));
    r6 = _922;
    float4 _937 = r3;
    _937.z = mad(r2.xyz.z, r0.yzw.z, mad(r2.xyz.y, r0.yzw.y, r2.xyz.x * r0.yzw.x));
    r3 = _937;
    float3 _946 = float3(cb5_m[2].x, cb5_m[2].y, cb5_m[2].z);
    float4 _958 = o3;
    _958.z = mad(_946.z, r0.yzw.z, mad(_946.y, r0.yzw.y, _946.x * r0.yzw.x));
    o3 = _958;
    float3 _964 = r0.xxx * r3.xyz;
    r0 = float4(r0.x, _964.x, _964.y, _964.z);
    float3 _971 = r0.xxx * r6.xyz;
    r2 = float4(_971.x, _971.y, _971.z, r2.w);
    float3 _981 = float3(cb5_m[2].x, cb5_m[2].y, cb5_m[2].z);
    float4 _993 = o3;
    _993.x = mad(_981.z, r1.xyz.z, mad(_981.y, r1.xyz.y, _981.x * r1.xyz.x));
    o3 = _993;
    float4 _1008 = r0;
    _1008.x = mad(r2.xyz.z, r2.xyz.z, mad(r2.xyz.y, r2.xyz.y, r2.xyz.x * r2.xyz.x));
    r0 = _1008;
    float4 _1013 = r0;
    _1013.x = rsqrt(r0.x);
    r0 = _1013;
    float3 _1019 = r0.xxx * r2.xyz;
    r1 = float4(_1019.x, _1019.y, _1019.z, r1.w);
    float3 _1029 = float3(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z);
    float4 _1041 = r2;
    _1041.x = mad(_1029.z, r1.xyz.z, mad(_1029.y, r1.xyz.y, _1029.x * r1.xyz.x));
    r2 = _1041;
    float3 _1050 = float3(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z);
    float4 _1062 = r2;
    _1062.y = mad(_1050.z, r1.xyz.z, mad(_1050.y, r1.xyz.y, _1050.x * r1.xyz.x));
    r2 = _1062;
    float3 _1071 = float3(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z);
    float4 _1083 = r2;
    _1083.z = mad(_1071.z, r1.xyz.z, mad(_1071.y, r1.xyz.y, _1071.x * r1.xyz.x));
    r2 = _1083;
    float4 _1098 = r0;
    _1098.x = mad(r2.xyz.z, r2.xyz.z, mad(r2.xyz.y, r2.xyz.y, r2.xyz.x * r2.xyz.x));
    r0 = _1098;
    float4 _1103 = r0;
    _1103.x = rsqrt(r0.x);
    r0 = _1103;
    float3 _1109 = r0.xxx * r2.xyz;
    r1 = float4(_1109.x, _1109.y, _1109.z, r1.w);
    float4 _1125 = r0;
    _1125.x = mad(r0.yzw.z, r0.yzw.z, mad(r0.yzw.y, r0.yzw.y, r0.yzw.x * r0.yzw.x));
    r0 = _1125;
    float4 _1130 = r0;
    _1130.x = rsqrt(r0.x);
    r0 = _1130;
    float3 _1136 = r0.xxx * r0.yzw;
    r0 = float4(_1136.x, _1136.y, _1136.z, r0.w);
    float3 _1146 = float3(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z);
    float4 _1158 = r2;
    _1158.x = mad(_1146.z, r0.xyz.z, mad(_1146.y, r0.xyz.y, _1146.x * r0.xyz.x));
    r2 = _1158;
    float3 _1167 = float3(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z);
    float4 _1179 = r2;
    _1179.y = mad(_1167.z, r0.xyz.z, mad(_1167.y, r0.xyz.y, _1167.x * r0.xyz.x));
    r2 = _1179;
    float3 _1188 = float3(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z);
    float4 _1200 = r2;
    _1200.z = mad(_1188.z, r0.xyz.z, mad(_1188.y, r0.xyz.y, _1188.x * r0.xyz.x));
    r2 = _1200;
    float4 _1215 = r0;
    _1215.x = mad(r2.xyz.z, r2.xyz.z, mad(r2.xyz.y, r2.xyz.y, r2.xyz.x * r2.xyz.x));
    r0 = _1215;
    float4 _1220 = r0;
    _1220.x = rsqrt(r0.x);
    r0 = _1220;
    float3 _1226 = r0.xxx * r2.xyz;
    r0 = float4(_1226.x, _1226.y, _1226.z, r0.w);
    float3 _1233 = r1.yzx * r0.zxy;
    r2 = float4(_1233.x, _1233.y, _1233.z, r2.w);
    float3 _1244 = (r0.yzx * r1.zxy) + (-r2.xyz);
    r2 = float4(_1244.x, _1244.y, _1244.z, r2.w);
    float3 _1258 = (-r4.xyz) + float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z);
    r3 = float4(_1258.x, _1258.y, _1258.z, r3.w);
    float3 _1273 = r4.xyz + (-float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z));
    r4 = float4(_1273.x, _1273.y, _1273.z, r4.w);
    float3 _1280 = -r2.xyz;
    float3 _1290 = o2;
    _1290.y = mad(r3.xyz.z, _1280.z, mad(r3.xyz.y, _1280.y, r3.xyz.x * _1280.x));
    o2 = _1290;
    float3 _1299 = float3(cb1_m[1].x, cb1_m[1].y, cb1_m[1].z);
    float3 _1302 = -r2.xyz;
    float4 _1312 = o6;
    _1312.y = mad(_1299.z, _1302.z, mad(_1299.y, _1302.y, _1299.x * _1302.x));
    o6 = _1312;
    float3 _1327 = o2;
    _1327.x = mad(r3.xyz.z, r1.xyz.z, mad(r3.xyz.y, r1.xyz.y, r3.xyz.x * r1.xyz.x));
    o2 = _1327;
    float3 _1336 = float3(cb1_m[1].x, cb1_m[1].y, cb1_m[1].z);
    float4 _1348 = o6;
    _1348.x = mad(_1336.z, r1.xyz.z, mad(_1336.y, r1.xyz.y, _1336.x * r1.xyz.x));
    o6 = _1348;
    float3 _1363 = o2;
    _1363.z = mad(r3.xyz.z, r0.xyz.z, mad(r3.xyz.y, r0.xyz.y, r3.xyz.x * r0.xyz.x));
    o2 = _1363;
    float3 _1372 = float3(cb1_m[1].x, cb1_m[1].y, cb1_m[1].z);
    float4 _1384 = o6;
    _1384.z = mad(_1372.z, r0.xyz.z, mad(_1372.y, r0.xyz.y, _1372.x * r0.xyz.x));
    o6 = _1384;
    o4 = float4(cb5_m[6].x, cb5_m[6].y, cb5_m[6].z, cb5_m[6].w);
    o5 = float4(cb5_m[4].x, cb5_m[4].y, cb5_m[4].z, cb5_m[4].w);
    float4 _1415 = r0;
    _1415.x = r4.y * cb0_m[13].x;
    r0 = _1415;
    float4 _1422 = r0;
    _1422.y = r0.x * asfloat(3216550459u);
    r0 = _1422;
    float4 _1427 = r0;
    _1427.y = exp2(r0.y);
    r0 = _1427;
    float4 _1434 = r0;
    _1434.y = (-r0.y) + asfloat(1065353216u);
    r0 = _1434;
    float4 _1441 = r0;
    _1441.x = r0.y / r0.x;
    r0 = _1441;
    float4 _1453 = r0;
    _1453.y = asfloat((asfloat(1008981770u) < abs(r4.y)) ? 4294967295u : 0u);
    r0 = _1453;
    float4 _1468 = r0;
    _1468.z = mad(r4.xyz.z, r4.xyz.z, mad(r4.xyz.y, r4.xyz.y, r4.xyz.x * r4.xyz.x));
    r0 = _1468;
    float4 _1473 = r0;
    _1473.z = sqrt(r0.z);
    r0 = _1473;
    float4 _1481 = r0;
    _1481.z = r0.z * cb0_m[13].y;
    r0 = _1481;
    float4 _1491 = r0;
    _1491.x = (asuint(r0.y) != 0u) ? r0.x : asfloat(1065353216u);
    r0 = _1491;
    float4 _1503 = r0;
    _1503.x = (r0.x * r0.z) + (-cb0_m[13].w);
    r0 = _1503;
    float4 _1509 = r0;
    _1509.x = exp2(-r0.x);
    r0 = _1509;
    float4 _1515 = r0;
    _1515.x = min(r0.x, asfloat(1065353216u));
    r0 = _1515;
    float4 _1522 = o6;
    _1522.w = (-r0.x) + asfloat(1065353216u);
    o6 = _1522;
}

void vert_main()
{
    shader_in[0] = float4(v0.x, v0.y, v0.z, shader_in[0].w);
    shader_in[1] = float4(v1.x, v1.y, v1.z, shader_in[1].w);
    shader_in[2] = v2;
    shader_in[3] = asfloat(v3);
    vs_main();
    gl_Position = o0;
    gl_PointSize = 1.0f;
    gl_Position.x = gl_Position.x - gl_HalfPixel.x * gl_Position.w;
    gl_Position.y = gl_Position.y + gl_HalfPixel.y * gl_Position.w;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    v0 = stage_input.v0;
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    vert_main();
    SPIRV_Cross_Output stage_output;
    stage_output.gl_Position = gl_Position;
    stage_output.gl_PointSize = gl_PointSize;
    return stage_output;
}
