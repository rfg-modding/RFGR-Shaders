cbuffer cb0_t : register(b160)
{
    float4 cb0_m[14] : packoffset(c0);
};

cbuffer cb1_t : register(b161)
{
    float4 cb1_m[1] : packoffset(c0);
};

cbuffer cb4_t : register(b164)
{
    float4 cb4_m[4096] : packoffset(c0);
};

cbuffer cb5_t : register(b165)
{
    float4 cb5_m[7] : packoffset(c0);
};

cbuffer cb6_t : register(b166)
{
    float4 cb6_m[3] : packoffset(c0);
};

uniform float4 gl_HalfPixel;

static float4 gl_Position;
static float gl_PointSize;
static float3 v0;
static float3 v1;
static float4 v2;
static float4 v3;
static float4 v4;
static int4 v5;

struct SPIRV_Cross_Input
{
    float3 v0 : TEXCOORD0;
    float3 v1 : TEXCOORD1;
    float4 v2 : TEXCOORD2;
    float4 v3 : TEXCOORD3;
    float4 v4 : TEXCOORD4;
    float4 v5 : TEXCOORD5;
};

struct SPIRV_Cross_Output
{
    float4 gl_Position : POSITION;
    float gl_PointSize : PSIZE;
};

static float4 shader_in[6];
static float4 o0;
static float2 o1;
static float3 o2;
static float4 o3;
static float4 o4;
static float4 o5;
static float4 o6;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;
static float4 r5;
static float4 r6;

void vs_main()
{
    float4 _72 = r0;
    _72.x = shader_in[4].y + shader_in[4].x;
    r0 = _72;
    float4 _80 = r0;
    _80.x = r0.x + shader_in[4].z;
    r0 = _80;
    float4 _88 = r0;
    _88.x = r0.x + shader_in[4].w;
    r0 = _88;
    float4 _95 = r0;
    _95.x = asfloat(1065353216u) / r0.x;
    r0 = _95;
    float3 _110 = (shader_in[2].xyz * asfloat(uint3(1082130432u, 1082130432u, 1082130432u))) + shader_in[0].xyz;
    r1 = float4(_110.x, _110.y, _110.z, r1.w);
    float4 _115 = r1;
    _115.w = asfloat(1065353216u);
    r1 = _115;
    r2 = asfloat(asint(shader_in[5]) * int4(uint4(3u, 3u, 3u, 3u)));
    int _132 = asint(r2.y);
    r3 = shader_in[4].yyyy * float4(cb4_m[_132].x, cb4_m[_132].y, cb4_m[_132].z, cb4_m[_132].w);
    int _154 = asint(r2.x);
    r3 = (shader_in[4].xxxx * float4(cb4_m[_154].x, cb4_m[_154].y, cb4_m[_154].z, cb4_m[_154].w)) + r3;
    int _173 = asint(r2.z);
    r3 = (shader_in[4].zzzz * float4(cb4_m[_173].x, cb4_m[_173].y, cb4_m[_173].z, cb4_m[_173].w)) + r3;
    int _192 = asint(r2.w);
    r3 = (shader_in[4].wwww * float4(cb4_m[_192].x, cb4_m[_192].y, cb4_m[_192].z, cb4_m[_192].w)) + r3;
    float4 _221 = r4;
    _221.x = mad(r3.w, r1.w, mad(r3.z, r1.z, mad(r3.y, r1.y, r3.x * r1.x)));
    r4 = _221;
    int _230 = asint(r2.y) + 1;
    r5 = shader_in[4].yyyy * float4(cb4_m[_230].x, cb4_m[_230].y, cb4_m[_230].z, cb4_m[_230].w);
    int _249 = asint(r2.x) + 1;
    r5 = (shader_in[4].xxxx * float4(cb4_m[_249].x, cb4_m[_249].y, cb4_m[_249].z, cb4_m[_249].w)) + r5;
    int _269 = asint(r2.z) + 1;
    r5 = (shader_in[4].zzzz * float4(cb4_m[_269].x, cb4_m[_269].y, cb4_m[_269].z, cb4_m[_269].w)) + r5;
    int _289 = asint(r2.w) + 1;
    r5 = (shader_in[4].wwww * float4(cb4_m[_289].x, cb4_m[_289].y, cb4_m[_289].z, cb4_m[_289].w)) + r5;
    float4 _317 = r4;
    _317.y = mad(r5.w, r1.w, mad(r5.z, r1.z, mad(r5.y, r1.y, r5.x * r1.x)));
    r4 = _317;
    int _325 = asint(r2.y) + 2;
    r6 = shader_in[4].yyyy * float4(cb4_m[_325].x, cb4_m[_325].y, cb4_m[_325].z, cb4_m[_325].w);
    int _344 = asint(r2.x) + 2;
    r6 = (shader_in[4].xxxx * float4(cb4_m[_344].x, cb4_m[_344].y, cb4_m[_344].z, cb4_m[_344].w)) + r6;
    int _364 = asint(r2.z) + 2;
    r6 = (shader_in[4].zzzz * float4(cb4_m[_364].x, cb4_m[_364].y, cb4_m[_364].z, cb4_m[_364].w)) + r6;
    int _384 = asint(r2.w) + 2;
    r2 = (shader_in[4].wwww * float4(cb4_m[_384].x, cb4_m[_384].y, cb4_m[_384].z, cb4_m[_384].w)) + r6;
    float4 _412 = r4;
    _412.z = mad(r2.w, r1.w, mad(r2.z, r1.z, mad(r2.y, r1.y, r2.x * r1.x)));
    r4 = _412;
    float3 _418 = r0.xxx * r4.xyz;
    r1 = float4(_418.x, _418.y, _418.z, r1.w);
    float4 _422 = r1;
    _422.w = asfloat(1065353216u);
    r1 = _422;
    float4 _433 = float4(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z, cb6_m[0].w);
    float4 _447 = r4;
    _447.x = mad(_433.w, r1.w, mad(_433.z, r1.z, mad(_433.y, r1.y, _433.x * r1.x)));
    r4 = _447;
    float4 _458 = float4(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z, cb6_m[1].w);
    float4 _472 = r4;
    _472.y = mad(_458.w, r1.w, mad(_458.z, r1.z, mad(_458.y, r1.y, _458.x * r1.x)));
    r4 = _472;
    float4 _483 = float4(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z, cb6_m[2].w);
    float4 _497 = r4;
    _497.z = mad(_483.w, r1.w, mad(_483.z, r1.z, mad(_483.y, r1.y, _483.x * r1.x)));
    r4 = _497;
    float4 _500 = r4;
    _500.w = asfloat(1065353216u);
    r4 = _500;
    float4 _511 = float4(cb0_m[0].x, cb0_m[0].y, cb0_m[0].z, cb0_m[0].w);
    float4 _525 = o0;
    _525.x = mad(_511.w, r4.w, mad(_511.z, r4.z, mad(_511.y, r4.y, _511.x * r4.x)));
    o0 = _525;
    float4 _536 = float4(cb0_m[1].x, cb0_m[1].y, cb0_m[1].z, cb0_m[1].w);
    float4 _550 = o0;
    _550.y = mad(_536.w, r4.w, mad(_536.z, r4.z, mad(_536.y, r4.y, _536.x * r4.x)));
    o0 = _550;
    float4 _561 = float4(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z, cb0_m[2].w);
    float4 _575 = o0;
    _575.z = mad(_561.w, r4.w, mad(_561.z, r4.z, mad(_561.y, r4.y, _561.x * r4.x)));
    o0 = _575;
    float4 _587 = float4(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z, cb0_m[3].w);
    float4 _601 = o0;
    _601.w = mad(_587.w, r4.w, mad(_587.z, r4.z, mad(_587.y, r4.y, _587.x * r4.x)));
    o0 = _601;
    float3 _615 = r4.xyz + (-float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z));
    r0 = float4(r0.x, _615.x, _615.y, _615.z);
    float4 _620 = r1;
    _620.x = asfloat(3212836864u);
    r1 = _620;
    float3 _634 = shader_in[0].xyz + (-float3(cb5_m[3].x, cb5_m[3].y, cb5_m[3].z));
    r1 = float4(r1.x, _634.x, _634.y, _634.z);
    float3 _646 = float3(cb5_m[1].x, cb5_m[1].y, cb5_m[1].z);
    float4 _656 = r2;
    _656.w = mad(r1.yzw.z, _646.z, mad(r1.yzw.y, _646.y, r1.yzw.x * _646.x));
    r2 = _656;
    float4 _664 = r2;
    _664.w = r2.w * cb5_m[5].y;
    r2 = _664;
    float4 _671 = r4;
    _671.y = r1.x * r2.w;
    r4 = _671;
    float3 _682 = float3(cb5_m[0].x, cb5_m[0].y, cb5_m[0].z);
    float4 _692 = r6;
    _692.x = mad(r1.yzw.z, _682.z, mad(r1.yzw.y, _682.y, r1.yzw.x * _682.x));
    r6 = _692;
    float3 _703 = float3(cb5_m[2].x, cb5_m[2].y, cb5_m[2].z);
    float4 _713 = r6;
    _713.z = mad(r1.yzw.z, _703.z, mad(r1.yzw.y, _703.y, r1.yzw.x * _703.x));
    r6 = _713;
    float2 _723 = r6.xz * float2(cb5_m[5].x, cb5_m[5].z);
    r4 = float4(_723.x, r4.y, _723.y, r4.w);
    o1 = r4.xy + asfloat(uint2(1056964608u, 1056964608u));
    float4 _735 = o3;
    _735.w = r4.z;
    o3 = _735;
    float3 _746 = (shader_in[1].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r1 = float4(_746.x, _746.y, _746.z, r1.w);
    float3 _760 = r1.yzx * (-float3(cb5_m[0].z, cb5_m[0].x, cb5_m[0].y));
    r4 = float4(_760.x, _760.y, _760.z, r4.w);
    float3 _778 = ((-float3(cb5_m[0].y, cb5_m[0].z, cb5_m[0].x)) * r1.zxy) + (-r4.xyz);
    r4 = float4(_778.x, _778.y, _778.z, r4.w);
    float4 _794 = r1;
    _794.w = mad(r4.xyz.z, r4.xyz.z, mad(r4.xyz.y, r4.xyz.y, r4.xyz.x * r4.xyz.x));
    r1 = _794;
    float4 _799 = r1;
    _799.w = rsqrt(r1.w);
    r1 = _799;
    float3 _805 = r1.www * r4.xyz;
    r4 = float4(_805.x, _805.y, _805.z, r4.w);
    float3 _812 = r1.zxy * r4.yzx;
    r6 = float4(_812.x, _812.y, _812.z, r6.w);
    float3 _823 = (r1.yzx * r4.zxy) + (-r6.xyz);
    r6 = float4(_823.x, _823.y, _823.z, r6.w);
    float3 _833 = float3(cb5_m[2].x, cb5_m[2].y, cb5_m[2].z);
    float4 _845 = o3;
    _845.y = mad(_833.z, r4.xyz.z, mad(_833.y, r4.xyz.y, _833.x * r4.xyz.x));
    o3 = _845;
    float4 _860 = r1;
    _860.w = mad(r6.xyz.z, r6.xyz.z, mad(r6.xyz.y, r6.xyz.y, r6.xyz.x * r6.xyz.x));
    r1 = _860;
    float4 _865 = r1;
    _865.w = rsqrt(r1.w);
    r1 = _865;
    float3 _871 = r1.www * r6.xyz;
    r4 = float4(_871.x, _871.y, _871.z, r4.w);
    float4 _887 = r6;
    _887.x = mad(r3.xyz.z, r4.xyz.z, mad(r3.xyz.y, r4.xyz.y, r3.xyz.x * r4.xyz.x));
    r6 = _887;
    float4 _902 = r6;
    _902.y = mad(r5.xyz.z, r4.xyz.z, mad(r5.xyz.y, r4.xyz.y, r5.xyz.x * r4.xyz.x));
    r6 = _902;
    float4 _917 = r6;
    _917.z = mad(r2.xyz.z, r4.xyz.z, mad(r2.xyz.y, r4.xyz.y, r2.xyz.x * r4.xyz.x));
    r6 = _917;
    float3 _926 = float3(cb5_m[2].x, cb5_m[2].y, cb5_m[2].z);
    float4 _938 = o3;
    _938.x = mad(_926.z, r4.xyz.z, mad(_926.y, r4.xyz.y, _926.x * r4.xyz.x));
    o3 = _938;
    float3 _944 = r0.xxx * r6.xyz;
    r4 = float4(_944.x, _944.y, _944.z, r4.w);
    float4 _960 = r1;
    _960.w = mad(r4.xyz.z, r4.xyz.z, mad(r4.xyz.y, r4.xyz.y, r4.xyz.x * r4.xyz.x));
    r1 = _960;
    float4 _965 = r1;
    _965.w = rsqrt(r1.w);
    r1 = _965;
    float3 _971 = r1.www * r4.xyz;
    r4 = float4(_971.x, _971.y, _971.z, r4.w);
    float3 _981 = float3(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z);
    float4 _993 = r6;
    _993.x = mad(_981.z, r4.xyz.z, mad(_981.y, r4.xyz.y, _981.x * r4.xyz.x));
    r6 = _993;
    float3 _1002 = float3(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z);
    float4 _1014 = r6;
    _1014.y = mad(_1002.z, r4.xyz.z, mad(_1002.y, r4.xyz.y, _1002.x * r4.xyz.x));
    r6 = _1014;
    float3 _1023 = float3(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z);
    float4 _1035 = r6;
    _1035.z = mad(_1023.z, r4.xyz.z, mad(_1023.y, r4.xyz.y, _1023.x * r4.xyz.x));
    r6 = _1035;
    float4 _1050 = r1;
    _1050.w = mad(r6.xyz.z, r6.xyz.z, mad(r6.xyz.y, r6.xyz.y, r6.xyz.x * r6.xyz.x));
    r1 = _1050;
    float4 _1055 = r1;
    _1055.w = rsqrt(r1.w);
    r1 = _1055;
    float3 _1061 = r1.www * r6.xyz;
    r4 = float4(_1061.x, _1061.y, _1061.z, r4.w);
    float3 _1070 = (shader_in[3].xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r6 = float4(_1070.x, _1070.y, _1070.z, r6.w);
    float3 _1079 = (r6.xyz * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + r1.xyz;
    r6 = float4(_1079.x, _1079.y, _1079.z, r6.w);
    float3 _1089 = float3(cb5_m[2].x, cb5_m[2].y, cb5_m[2].z);
    float4 _1101 = o3;
    _1101.z = mad(_1089.z, r1.xyz.z, mad(_1089.y, r1.xyz.y, _1089.x * r1.xyz.x));
    o3 = _1101;
    float4 _1116 = r1;
    _1116.x = mad(r6.xyz.z, r6.xyz.z, mad(r6.xyz.y, r6.xyz.y, r6.xyz.x * r6.xyz.x));
    r1 = _1116;
    float4 _1121 = r1;
    _1121.x = rsqrt(r1.x);
    r1 = _1121;
    float3 _1127 = r1.xxx * r6.xyz;
    r1 = float4(_1127.x, _1127.y, _1127.z, r1.w);
    float4 _1143 = r3;
    _1143.x = mad(r3.xyz.z, r1.xyz.z, mad(r3.xyz.y, r1.xyz.y, r3.xyz.x * r1.xyz.x));
    r3 = _1143;
    float4 _1158 = r3;
    _1158.y = mad(r5.xyz.z, r1.xyz.z, mad(r5.xyz.y, r1.xyz.y, r5.xyz.x * r1.xyz.x));
    r3 = _1158;
    float4 _1173 = r3;
    _1173.z = mad(r2.xyz.z, r1.xyz.z, mad(r2.xyz.y, r1.xyz.y, r2.xyz.x * r1.xyz.x));
    r3 = _1173;
    float3 _1179 = r0.xxx * r3.xyz;
    r1 = float4(_1179.x, _1179.y, _1179.z, r1.w);
    float4 _1195 = r0;
    _1195.x = mad(r1.xyz.z, r1.xyz.z, mad(r1.xyz.y, r1.xyz.y, r1.xyz.x * r1.xyz.x));
    r0 = _1195;
    float4 _1200 = r0;
    _1200.x = rsqrt(r0.x);
    r0 = _1200;
    float3 _1206 = r0.xxx * r1.xyz;
    r1 = float4(_1206.x, _1206.y, _1206.z, r1.w);
    float3 _1216 = float3(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z);
    float4 _1228 = r2;
    _1228.x = mad(_1216.z, r1.xyz.z, mad(_1216.y, r1.xyz.y, _1216.x * r1.xyz.x));
    r2 = _1228;
    float3 _1237 = float3(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z);
    float4 _1249 = r2;
    _1249.y = mad(_1237.z, r1.xyz.z, mad(_1237.y, r1.xyz.y, _1237.x * r1.xyz.x));
    r2 = _1249;
    float3 _1258 = float3(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z);
    float4 _1270 = r2;
    _1270.z = mad(_1258.z, r1.xyz.z, mad(_1258.y, r1.xyz.y, _1258.x * r1.xyz.x));
    r2 = _1270;
    float4 _1285 = r0;
    _1285.x = mad(r2.xyz.z, r2.xyz.z, mad(r2.xyz.y, r2.xyz.y, r2.xyz.x * r2.xyz.x));
    r0 = _1285;
    float4 _1290 = r0;
    _1290.x = rsqrt(r0.x);
    r0 = _1290;
    float3 _1296 = r0.xxx * r2.xyz;
    r1 = float4(_1296.x, _1296.y, _1296.z, r1.w);
    float3 _1303 = r4.yzx * r1.zxy;
    r2 = float4(_1303.x, _1303.y, _1303.z, r2.w);
    float3 _1314 = (r1.yzx * r4.zxy) + (-r2.xyz);
    r2 = float4(_1314.x, _1314.y, _1314.z, r2.w);
    float3 _1324 = float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z);
    float3 _1327 = -r2.xyz;
    float3 _1337 = o2;
    _1337.y = mad(_1324.z, _1327.z, mad(_1324.y, _1327.y, _1324.x * _1327.x));
    o2 = _1337;
    float4 _1342 = o6;
    _1342.y = -r2.y;
    o6 = _1342;
    float3 _1351 = float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z);
    float3 _1363 = o2;
    _1363.x = mad(_1351.z, r4.xyz.z, mad(_1351.y, r4.xyz.y, _1351.x * r4.xyz.x));
    o2 = _1363;
    float4 _1367 = o6;
    _1367.x = r4.y;
    o6 = _1367;
    float3 _1376 = float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z);
    float3 _1388 = o2;
    _1388.z = mad(_1376.z, r1.xyz.z, mad(_1376.y, r1.xyz.y, _1376.x * r1.xyz.x));
    o2 = _1388;
    float4 _1392 = o6;
    _1392.z = r1.y;
    o6 = _1392;
    o4 = float4(cb5_m[6].x, cb5_m[6].y, cb5_m[6].z, cb5_m[6].w);
    o5 = float4(cb5_m[4].x, cb5_m[4].y, cb5_m[4].z, cb5_m[4].w);
    float4 _1422 = r0;
    _1422.x = r0.z * cb0_m[13].x;
    r0 = _1422;
    float4 _1429 = r1;
    _1429.x = r0.x * asfloat(3216550459u);
    r1 = _1429;
    float4 _1434 = r1;
    _1434.x = exp2(r1.x);
    r1 = _1434;
    float4 _1441 = r1;
    _1441.x = (-r1.x) + asfloat(1065353216u);
    r1 = _1441;
    float4 _1448 = r0;
    _1448.x = r1.x / r0.x;
    r0 = _1448;
    float4 _1460 = r1;
    _1460.x = asfloat((asfloat(1008981770u) < abs(r0.z)) ? 4294967295u : 0u);
    r1 = _1460;
    float4 _1475 = r0;
    _1475.y = mad(r0.yzw.z, r0.yzw.z, mad(r0.yzw.y, r0.yzw.y, r0.yzw.x * r0.yzw.x));
    r0 = _1475;
    float4 _1480 = r0;
    _1480.y = sqrt(r0.y);
    r0 = _1480;
    float4 _1488 = r0;
    _1488.y = r0.y * cb0_m[13].y;
    r0 = _1488;
    float4 _1498 = r0;
    _1498.x = (asuint(r1.x) != 0u) ? r0.x : asfloat(1065353216u);
    r0 = _1498;
    float4 _1510 = r0;
    _1510.x = (r0.x * r0.y) + (-cb0_m[13].w);
    r0 = _1510;
    float4 _1516 = r0;
    _1516.x = exp2(-r0.x);
    r0 = _1516;
    float4 _1522 = r0;
    _1522.x = min(r0.x, asfloat(1065353216u));
    r0 = _1522;
    float4 _1529 = o6;
    _1529.w = (-r0.x) + asfloat(1065353216u);
    o6 = _1529;
}

void vert_main()
{
    shader_in[0] = float4(v0.x, v0.y, v0.z, shader_in[0].w);
    shader_in[1] = float4(v1.x, v1.y, v1.z, shader_in[1].w);
    shader_in[2] = v2;
    shader_in[3] = v3;
    shader_in[4] = v4;
    shader_in[5] = asfloat(v5);
    vs_main();
    gl_Position = o0;
    gl_PointSize = 1.0f;
    gl_Position.x = gl_Position.x - gl_HalfPixel.x * gl_Position.w;
    gl_Position.y = gl_Position.y + gl_HalfPixel.y * gl_Position.w;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    v0 = stage_input.v0;
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    v5 = stage_input.v5;
    vert_main();
    SPIRV_Cross_Output stage_output;
    stage_output.gl_Position = gl_Position;
    stage_output.gl_PointSize = gl_PointSize;
    return stage_output;
}
