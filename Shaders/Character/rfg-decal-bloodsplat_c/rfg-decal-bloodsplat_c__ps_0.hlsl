cbuffer cb0_t : register(b0)
{
    float4 cb0_m[8] : packoffset(c0);
};

cbuffer cb1_t : register(b1)
{
    float4 cb1_m[1] : packoffset(c0);
};

cbuffer cb6_t : register(b6)
{
    float4 cb6_m[1] : packoffset(c0);
};

cbuffer cb2_t : register(b2)
{
    float4 cb2_m[3] : packoffset(c0);
};

uniform sampler2D SPIRV_Cross_Combinedt0s0;
uniform sampler2D SPIRV_Cross_Combinedt1s1;
uniform sampler2D SPIRV_Cross_Combinedt15s15;

static float4 gl_FragCoord;
static float3 v1;
static float3 v2;
static float4 v3;
static float4 v4;
static float4 v5;
static float4 v6;
static float3 v7;

struct SPIRV_Cross_Input
{
    float3 v1 : TEXCOORD1;
    float3 v2 : TEXCOORD2;
    float4 v3 : TEXCOORD3;
    float4 v4 : TEXCOORD4;
    float4 v5 : TEXCOORD5;
    float4 v6 : TEXCOORD6;
    float3 v7 : TEXCOORD7;
    float4 gl_FragCoord : VPOS;
};

static float4 shader_in[8];
static float4 o0;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;
static float4 r5;

void ps_main()
{
    r0 = tex2D(SPIRV_Cross_Combinedt0s0, shader_in[7].xyxx.xy);
    float3 _80 = (r0.xyw * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r1 = float4(r1.x, _80.x, _80.y, _80.z);
    float4 _89 = r0;
    _89.y = r0.y + r0.y;
    r0 = _89;
    float4 _96 = r1;
    _96.x = r1.w * r1.y;
    r1 = _96;
    float4 _108 = r0;
    _108.w = mad(r1.xz.y, r1.xz.y, r1.xz.x * r1.xz.x);
    r0 = _108;
    float4 _112 = r0;
    _112.x = r1.x;
    r0 = _112;
    float4 _120 = r0;
    _120.w = (-r0.w) + asfloat(1065353216u);
    r0 = _120;
    float4 _127 = r0;
    _127.w = max(r0.w, asfloat(0u));
    r0 = _127;
    float4 _132 = r0;
    _132.z = sqrt(r0.w);
    r0 = _132;
    float3 _139 = r0.xyz + asfloat(uint3(2147483648u, 3212836864u, 3212836864u));
    r0 = float4(_139.x, _139.y, _139.z, r0.w);
    float3 _155 = (cb2_m[2].x.xxx * r0.xyz) + asfloat(uint3(0u, 0u, 1065353216u));
    r0 = float4(_155.x, _155.y, _155.z, r0.w);
    float4 _171 = r0;
    _171.w = mad(r0.xyz.z, r0.xyz.z, mad(r0.xyz.y, r0.xyz.y, r0.xyz.x * r0.xyz.x));
    r0 = _171;
    float4 _176 = r0;
    _176.w = rsqrt(r0.w);
    r0 = _176;
    float3 _182 = r0.www * r0.xyz;
    r0 = float4(_182.x, _182.y, _182.z, r0.w);
    float3 _188 = -shader_in[2].xyz;
    float4 _200 = r0;
    _200.w = mad(_188.z, r0.xyz.z, mad(_188.y, r0.xyz.y, _188.x * r0.xyz.x));
    r0 = _200;
    float4 _207 = r1;
    _207.x = r0.w + r0.w;
    r1 = _207;
    float4 _213 = r0;
    _213.w = r0.w + asfloat(1065353216u);
    r0 = _213;
    float4 _219 = r0;
    _219.w = log2(abs(r0.w));
    r0 = _219;
    float4 _226 = r0;
    _226.w = r0.w * asfloat(1083179008u);
    r0 = _226;
    float4 _231 = r0;
    _231.w = exp2(r0.w);
    r0 = _231;
    float4 _238 = r0;
    _238.w = r0.w + asfloat(925353388u);
    r0 = _238;
    float4 _244 = r0;
    _244.w = min(r0.w, asfloat(1065353216u));
    r0 = _244;
    float3 _256 = (r0.xyz * (-r1.xxx)) + (-shader_in[2].xyz);
    r1 = float4(_256.x, _256.y, _256.z, r1.w);
    float4 _274 = r1;
    _274.x = mad(r1.xyz.z, shader_in[6].xyz.z, mad(r1.xyz.y, shader_in[6].xyz.y, r1.xyz.x * shader_in[6].xyz.x));
    r1 = _274;
    float4 _283 = r1;
    _283.y = abs(r1.x) + abs(r1.x);
    r1 = _283;
    float4 _295 = r1;
    _295.x = clamp((r1.x * asfloat(1056964608u)) + asfloat(1056964608u), 0.0f, 1.0f);
    r1 = _295;
    float4 _305 = r1;
    _305.y = ((-r1.y) * r1.y) + asfloat(1065353216u);
    r1 = _305;
    float4 _311 = r1;
    _311.y = max(r1.y, asfloat(0u));
    r1 = _311;
    float4 _319 = r1;
    _319.y = r1.y * cb0_m[7].y;
    r1 = _319;
    float3 _340 = float3(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z) + (-float3(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z));
    r2 = float4(_340.x, _340.y, _340.z, r2.w);
    float3 _357 = (r1.xxx * r2.xyz) + float3(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z);
    r1 = float4(_357.x, r1.y, _357.y, _357.z);
    float3 _376 = (float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z) * cb0_m[7].x.xxx) + (-r1.xzw);
    r3 = float4(_376.x, _376.y, _376.z, r3.w);
    float3 _387 = (r1.yyy * r3.xyz) + r1.xzw;
    r1 = float4(_387.x, _387.y, _387.z, r1.w);
    float4 _398 = r1;
    _398.w = clamp(shader_in[7].z / cb2_m[2].y, 0.0f, 1.0f);
    r1 = _398;
    r3 = (r1.wwww * asfloat(uint4(3211998003u, 3204448256u, 3202770534u, 3192704205u))) + asfloat(uint4(1064514355u, 1065353216u, 1064514355u, 1065353216u));
    float2 _419 = (-r3.xz) + r3.yw;
    r3 = float4(r3.x, _419.x, r3.z, _419.y);
    r4 = tex2D(SPIRV_Cross_Combinedt1s1, shader_in[7].xyxx.xy);
    float2 _436 = (-r3.xz) + r4.ww;
    r3 = float4(_436.x, r3.y, _436.y, r3.w);
    float3 _449 = r4.xyz * float3(cb2_m[0].x, cb2_m[0].y, cb2_m[0].z);
    r4 = float4(_449.x, _449.y, _449.z, r4.w);
    float2 _459 = clamp(r3.xz / r3.yw, 0.0f.xx, 1.0f.xx);
    r3 = float4(_459.x, _459.y, r3.z, r3.w);
    float4 _468 = r1;
    _468.w = r3.y * cb2_m[2].z;
    r1 = _468;
    float4 _475 = r0;
    _475.w = r0.w * r1.w;
    r0 = _475;
    float3 _488 = r0.www * float3(cb2_m[1].x, cb2_m[1].y, cb2_m[1].z);
    r3 = float4(r3.x, _488.x, _488.y, _488.z);
    float3 _495 = r1.xyz * r3.yzw;
    r1 = float4(_495.x, _495.y, _495.z, r1.w);
    float3 _504 = r1.xyz * cb0_m[7].z.xxx;
    r1 = float4(_504.x, _504.y, _504.z, r1.w);
    float4 _521 = r0;
    _521.w = mad(r0.xyz.z, shader_in[6].xyz.z, mad(r0.xyz.y, shader_in[6].xyz.y, r0.xyz.x * shader_in[6].xyz.x));
    r0 = _521;
    float4 _530 = r1;
    _530.w = abs(r0.w) + abs(r0.w);
    r1 = _530;
    float4 _539 = r0;
    _539.w = clamp((r0.w * asfloat(1056964608u)) + asfloat(1056964608u), 0.0f, 1.0f);
    r0 = _539;
    float3 _554 = (r0.www * r2.xyz) + float3(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z);
    r2 = float4(_554.x, _554.y, _554.z, r2.w);
    float4 _565 = r0;
    _565.w = ((-r1.w) * r1.w) + asfloat(1065353216u);
    r0 = _565;
    float4 _571 = r0;
    _571.w = max(r0.w, asfloat(0u));
    r0 = _571;
    float4 _579 = r0;
    _579.w = r0.w * cb0_m[7].y;
    r0 = _579;
    float3 _597 = (float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z) * cb0_m[7].x.xxx) + (-r2.xyz);
    r5 = float4(_597.x, _597.y, _597.z, r5.w);
    float3 _608 = (r0.www * r5.xyz) + r2.xyz;
    r2 = float4(_608.x, _608.y, _608.z, r2.w);
    float3 _618 = (r4.xyz * r2.xyz) + r1.xyz;
    r1 = float4(_618.x, _618.y, _618.z, r1.w);
    float2 _630 = shader_in[0].xy * float2(cb0_m[6].z, cb0_m[6].w);
    r2 = float4(_630.x, _630.y, r2.z, r2.w);
    r2 = tex2D(SPIRV_Cross_Combinedt15s15, r2.xyxx.xy);
    float3 _644 = r1.xyz * r2.xxx;
    r1 = float4(_644.x, _644.y, _644.z, r1.w);
    float4 _662 = r0;
    _662.w = mad(shader_in[1].xyz.z, shader_in[1].xyz.z, mad(shader_in[1].xyz.y, shader_in[1].xyz.y, shader_in[1].xyz.x * shader_in[1].xyz.x));
    r0 = _662;
    float4 _667 = r0;
    _667.w = rsqrt(r0.w);
    r0 = _667;
    float3 _678 = (shader_in[1].xyz * r0.www) + shader_in[2].xyz;
    r2 = float4(_678.x, r2.y, _678.y, _678.z);
    float3 _686 = r0.www * shader_in[1].xyz;
    r5 = float4(_686.x, _686.y, _686.z, r5.w);
    float4 _702 = r0;
    _702.w = mad(r0.xyz.z, r5.xyz.z, mad(r0.xyz.y, r5.xyz.y, r0.xyz.x * r5.xyz.x));
    r0 = _702;
    float4 _717 = r1;
    _717.w = mad(r2.xzw.z, r2.xzw.z, mad(r2.xzw.y, r2.xzw.y, r2.xzw.x * r2.xzw.x));
    r1 = _717;
    float4 _722 = r1;
    _722.w = rsqrt(r1.w);
    r1 = _722;
    float3 _728 = r1.www * r2.xzw;
    r2 = float4(_728.x, r2.y, _728.y, _728.z);
    float4 _745 = r0;
    _745.x = clamp(mad(r0.xyz.z, r2.xzw.z, mad(r0.xyz.y, r2.xzw.y, r0.xyz.x * r2.xzw.x)), 0.0f, 1.0f);
    r0 = _745;
    float4 _751 = r0;
    _751.x = r0.x + asfloat(925353388u);
    r0 = _751;
    float4 _756 = r0;
    _756.x = log2(r0.x);
    r0 = _756;
    float4 _764 = r0;
    _764.x = r0.x * cb2_m[2].w;
    r0 = _764;
    float4 _769 = r0;
    _769.x = exp2(r0.x);
    r0 = _769;
    float4 _779 = r0;
    _779.y = asfloat((asfloat(0u) >= r0.w) ? 4294967295u : 0u);
    r0 = _779;
    float4 _784 = r0;
    _784.w = clamp(r0.w, 0.0f, 1.0f);
    r0 = _784;
    float4 _791 = r0;
    _791.z = r2.y * r0.w;
    r0 = _791;
    float4 _798 = r0;
    _798.w = max(r2.y, asfloat(1028443341u));
    r0 = _798;
    float4 _807 = r0;
    _807.y = (asuint(r0.y) != 0u) ? asfloat(0u) : asfloat(1065353216u);
    r0 = _807;
    float4 _814 = r0;
    _814.x = r0.y * r0.x;
    r0 = _814;
    float4 _821 = r0;
    _821.x = r0.w * r0.x;
    r0 = _821;
    float3 _827 = r3.yzw * r0.xxx;
    r0 = float4(_827.x, _827.y, r0.z, _827.z);
    float3 _837 = (r0.zzz * r4.xyz) + r0.xyw;
    r0 = float4(_837.x, _837.y, _837.z, r0.w);
    float3 _853 = (r0.xyz * float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z)) + r1.xyz;
    r0 = float4(_853.x, _853.y, _853.z, r0.w);
    float4 _871 = r1;
    _871.x = mad(shader_in[3].xyz.z, shader_in[3].xyz.z, mad(shader_in[3].xyz.y, shader_in[3].xyz.y, shader_in[3].xyz.x * shader_in[3].xyz.x));
    r1 = _871;
    float4 _876 = r1;
    _876.x = rsqrt(r1.x);
    r1 = _876;
    float4 _884 = r1;
    _884.x = r1.x * shader_in[3].z;
    r1 = _884;
    float4 _898 = r1;
    _898.x = clamp((r1.x * shader_in[4].x) + shader_in[4].y, 0.0f, 1.0f);
    r1 = _898;
    float4 _913 = r1;
    _913.y = clamp((abs(shader_in[3].w) * shader_in[4].z) + shader_in[4].w, 0.0f, 1.0f);
    r1 = _913;
    float4 _920 = r1;
    _920.y = (-r1.y) + asfloat(1065353216u);
    r1 = _920;
    float4 _927 = r1;
    _927.x = r1.y * r1.x;
    r1 = _927;
    float4 _934 = r0;
    _934.w = r1.x * r3.x;
    r0 = _934;
    r0 *= shader_in[5];
    float4 _947 = r1;
    _947.x = (-shader_in[6].w) + asfloat(1065353216u);
    r1 = _947;
    float3 _953 = r0.xyz * r1.xxx;
    r1 = float4(_953.x, _953.y, _953.z, r1.w);
    float3 _970 = (shader_in[6].www * float3(cb0_m[4].x, cb0_m[4].y, cb0_m[4].z)) + r1.xyz;
    r0 = float4(_970.x, _970.y, _970.z, r0.w);
    o0 = r0 * float4(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z, cb6_m[0].w);
}

void frag_main()
{
    shader_in[1] = float4(v1.x, v1.y, v1.z, shader_in[1].w);
    shader_in[2] = float4(v2.x, v2.y, v2.z, shader_in[2].w);
    shader_in[3] = v3;
    shader_in[4] = v4;
    shader_in[5] = v5;
    shader_in[6] = v6;
    shader_in[7] = float4(v7.x, v7.y, v7.z, shader_in[7].w);
    float4 _1007 = gl_FragCoord;
    _1007.w = 1.0f / _1007.w;
    shader_in[0] = float4(_1007.xy.x, _1007.xy.y, shader_in[0].z, shader_in[0].w);
    ps_main();
}

void main(SPIRV_Cross_Input stage_input)
{
    gl_FragCoord = stage_input.gl_FragCoord + float4(0.5f, 0.5f, 0.0f, 0.0f);
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    v5 = stage_input.v5;
    v6 = stage_input.v6;
    v7 = stage_input.v7;
    frag_main();
}
