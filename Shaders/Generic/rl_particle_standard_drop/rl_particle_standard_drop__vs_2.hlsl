cbuffer cb0_t : register(b160)
{
    float4 cb0_m[14] : packoffset(c0);
};

cbuffer cb3_t : register(b163)
{
    float4 cb3_m[9] : packoffset(c0);
};

cbuffer cb6_t : register(b166)
{
    float4 cb6_m[3] : packoffset(c0);
};

uniform float4 gl_HalfPixel;

static float4 gl_Position;
static float gl_PointSize;
static float4 v0;
static float4 v1;
static float v2;
static int2 v3;
static float v4;
static float v5;
static float4 v6;
static float4 v7;

struct SPIRV_Cross_Input
{
    float4 v0 : TEXCOORD0;
    float4 v1 : TEXCOORD1;
    float v2 : TEXCOORD2;
    float2 v3 : TEXCOORD3;
    float v4 : TEXCOORD4;
    float v5 : TEXCOORD5;
    float4 v6 : TEXCOORD6;
    float4 v7 : TEXCOORD7;
};

struct SPIRV_Cross_Output
{
    float4 gl_Position : POSITION;
    float gl_PointSize : PSIZE;
};

static float4 shader_in[8];
static float4 o0;
static float4 o1;
static float o2;
static float4 o3;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;

void vs_main()
{
    r0 = float4(shader_in[0].xyz.x, shader_in[0].xyz.y, shader_in[0].xyz.z, r0.w);
    float4 _59 = r0;
    _59.w = asfloat(1065353216u);
    r0 = _59;
    float4 _75 = float4(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z, cb6_m[0].w);
    float4 _90 = r1;
    _90.x = mad(_75.w, r0.w, mad(_75.z, r0.z, mad(_75.y, r0.y, _75.x * r0.x)));
    r1 = _90;
    float4 _102 = float4(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z, cb6_m[1].w);
    float4 _116 = r1;
    _116.y = mad(_102.w, r0.w, mad(_102.z, r0.z, mad(_102.y, r0.y, _102.x * r0.x)));
    r1 = _116;
    float4 _128 = float4(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z, cb6_m[2].w);
    float4 _142 = r1;
    _142.z = mad(_128.w, r0.w, mad(_128.z, r0.z, mad(_128.y, r0.y, _128.x * r0.x)));
    r1 = _142;
    float3 _156 = r1.zxy + (-float3(cb0_m[11].z, cb0_m[11].x, cb0_m[11].y));
    r0 = float4(_156.x, _156.y, _156.z, r0.w);
    float4 _172 = r0;
    _172.w = mad(r0.xyz.z, r0.xyz.z, mad(r0.xyz.y, r0.xyz.y, r0.xyz.x * r0.xyz.x));
    r0 = _172;
    float4 _177 = r0;
    _177.w = rsqrt(r0.w);
    r0 = _177;
    float3 _183 = r0.www * r0.xyz;
    r0 = float4(_183.x, _183.y, _183.z, r0.w);
    float4 _202 = r0;
    _202.w = mad(shader_in[6].xyz.z, shader_in[6].xyz.z, mad(shader_in[6].xyz.y, shader_in[6].xyz.y, shader_in[6].xyz.x * shader_in[6].xyz.x));
    r0 = _202;
    float4 _207 = r0;
    _207.w = rsqrt(r0.w);
    r0 = _207;
    float3 _214 = r0.www * shader_in[6].yzx;
    r2 = float4(_214.x, _214.y, _214.z, r2.w);
    float3 _222 = r0.xyz * r2.xyz;
    r3 = float4(_222.x, _222.y, _222.z, r3.w);
    float3 _234 = (r0.zxy * r2.yzx) + (-r3.xyz);
    r0 = float4(_234.x, _234.y, _234.z, r0.w);
    float4 _250 = r0;
    _250.w = mad(r0.xyz.z, r0.xyz.z, mad(r0.xyz.y, r0.xyz.y, r0.xyz.x * r0.xyz.x));
    r0 = _250;
    float4 _255 = r0;
    _255.w = rsqrt(r0.w);
    r0 = _255;
    float3 _261 = r0.www * r0.xyz;
    r0 = float4(_261.x, _261.y, _261.z, r0.w);
    float3 _273 = (shader_in[7].xxx * r0.xyz) + r1.xyz;
    r1 = float4(_273.x, _273.y, _273.z, r1.w);
    float3 _287 = r0.zxy * float3(cb0_m[10].y, cb0_m[10].z, cb0_m[10].x);
    r2 = float4(_287.x, _287.y, _287.z, r2.w);
    float3 _304 = (r0.yzx * float3(cb0_m[10].z, cb0_m[10].x, cb0_m[10].y)) + (-r2.xyz);
    r0 = float4(_304.x, _304.y, _304.z, r0.w);
    float4 _320 = r0;
    _320.w = mad(r0.xyz.z, r0.xyz.z, mad(r0.xyz.y, r0.xyz.y, r0.xyz.x * r0.xyz.x));
    r0 = _320;
    float4 _325 = r0;
    _325.w = rsqrt(r0.w);
    r0 = _325;
    float3 _331 = r0.www * r0.xyz;
    r0 = float4(_331.x, _331.y, _331.z, r0.w);
    float3 _342 = (r0.xyz * shader_in[7].yyy) + r1.xyz;
    r0 = float4(_342.x, _342.y, _342.z, r0.w);
    float4 _346 = r0;
    _346.w = asfloat(1065353216u);
    r0 = _346;
    float4 _357 = float4(cb0_m[0].x, cb0_m[0].y, cb0_m[0].z, cb0_m[0].w);
    float4 _371 = o0;
    _371.x = mad(_357.w, r0.w, mad(_357.z, r0.z, mad(_357.y, r0.y, _357.x * r0.x)));
    o0 = _371;
    float4 _382 = float4(cb0_m[1].x, cb0_m[1].y, cb0_m[1].z, cb0_m[1].w);
    float4 _396 = o0;
    _396.y = mad(_382.w, r0.w, mad(_382.z, r0.z, mad(_382.y, r0.y, _382.x * r0.x)));
    o0 = _396;
    float4 _407 = float4(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z, cb0_m[2].w);
    float4 _421 = o0;
    _421.z = mad(_407.w, r0.w, mad(_407.z, r0.z, mad(_407.y, r0.y, _407.x * r0.x)));
    o0 = _421;
    float4 _433 = float4(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z, cb0_m[3].w);
    float4 _447 = o0;
    _447.w = mad(_433.w, r0.w, mad(_433.z, r0.z, mad(_433.y, r0.y, _433.x * r0.x)));
    o0 = _447;
    float3 _460 = r0.xyz + (-float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z));
    r0 = float4(_460.x, _460.y, _460.z, r0.w);
    float3 _479 = (shader_in[1].zyx * float3(cb3_m[7].x, cb3_m[7].y, cb3_m[7].z)) + (-shader_in[1].zyx);
    r1 = float4(_479.x, _479.y, _479.z, r1.w);
    float3 _492 = (cb3_m[7].w.xxx * r1.xyz) + shader_in[1].zyx;
    r1 = float4(_492.x, _492.y, _492.z, r1.w);
    float3 _521 = (float3(cb3_m[6].x, cb3_m[6].y, cb3_m[6].z) * float3(cb3_m[7].x, cb3_m[7].y, cb3_m[7].z)) + (-float3(cb3_m[6].x, cb3_m[6].y, cb3_m[6].z));
    r2 = float4(_521.x, _521.y, _521.z, r2.w);
    float3 _539 = (cb3_m[7].w.xxx * r2.xyz) + float3(cb3_m[6].x, cb3_m[6].y, cb3_m[6].z);
    r2 = float4(_539.x, _539.y, _539.z, r2.w);
    float3 _546 = r1.xyz + r2.xyz;
    o1 = float4(_546.x, _546.y, _546.z, o1.w);
    float4 _557 = o1;
    _557.w = shader_in[1].w * cb3_m[5].x;
    o1 = _557;
    float4 _566 = r0;
    _566.w = r0.y * cb0_m[13].x;
    r0 = _566;
    float4 _573 = r1;
    _573.x = r0.w * asfloat(3216550459u);
    r1 = _573;
    float4 _578 = r1;
    _578.x = exp2(r1.x);
    r1 = _578;
    float4 _585 = r1;
    _585.x = (-r1.x) + asfloat(1065353216u);
    r1 = _585;
    float4 _592 = r0;
    _592.w = r1.x / r0.w;
    r0 = _592;
    float4 _604 = r1;
    _604.x = asfloat((asfloat(1008981770u) < abs(r0.y)) ? 4294967295u : 0u);
    r1 = _604;
    float4 _619 = r0;
    _619.x = mad(r0.xyz.z, r0.xyz.z, mad(r0.xyz.y, r0.xyz.y, r0.xyz.x * r0.xyz.x));
    r0 = _619;
    float4 _624 = r0;
    _624.x = sqrt(r0.x);
    r0 = _624;
    float4 _632 = r0;
    _632.x = r0.x * cb0_m[13].y;
    r0 = _632;
    float4 _642 = r0;
    _642.y = (asuint(r1.x) != 0u) ? r0.w : asfloat(1065353216u);
    r0 = _642;
    float4 _654 = r0;
    _654.x = (r0.y * r0.x) + (-cb0_m[13].w);
    r0 = _654;
    float4 _660 = r0;
    _660.x = exp2(-r0.x);
    r0 = _660;
    float4 _666 = r0;
    _666.x = min(r0.x, asfloat(1065353216u));
    r0 = _666;
    o2 = (-r0.x) + asfloat(1065353216u);
    float4 _679 = r0;
    _679.x = shader_in[5].x + asfloat(841731191u);
    r0 = _679;
    float4 _689 = r0;
    _689.y = cb3_m[8].y * cb3_m[8].x;
    r0 = _689;
    float4 _694 = r0;
    _694.z = trunc(r0.y);
    r0 = _694;
    float4 _700 = r0;
    _700.y = asfloat(int(r0.y));
    r0 = _700;
    float4 _707 = r0;
    _707.x = r0.x * r0.z;
    r0 = _707;
    float4 _713 = r0;
    _713.x = asfloat(int(r0.x));
    r0 = _713;
    float2 _724 = asfloat(max(asint(r0.yx), (-asint(r0.yx))));
    r0 = float4(r0.x, _724.x, _724.y, r0.w);
    float4 _733 = r0;
    _733.x = asfloat(asuint(r0.x) & 2147483648u);
    r0 = _733;
    uint _740 = asuint(r0.y);
    float4 _745 = r0;
    _745.y = asfloat((_740 != 0u) ? (asuint(r0.z) % _740) : 4294967295u);
    r0 = _745;
    float4 _752 = r0;
    _752.z = asfloat(-asint(r0.y));
    r0 = _752;
    float4 _763 = r0;
    _763.x = (asuint(r0.x) != 0u) ? r0.z : r0.y;
    r0 = _763;
    float4 _770 = r0;
    _770.y = asfloat(asuint(r0.x) & 2147483648u);
    r0 = _770;
    float4 _781 = r0;
    _781.z = asfloat(max(asint(r0.x), (-asint(r0.x))));
    r0 = _781;
    float4 _787 = r0;
    _787.x = float(asint(r0.x));
    r0 = _787;
    float4 _795 = r0;
    _795.x = r0.x / cb3_m[8].x;
    r0 = _795;
    float4 _800 = r0;
    _800.x = trunc(r0.x);
    r0 = _800;
    float4 _807 = r0;
    _807.w = asfloat(int(cb3_m[8].x));
    r0 = _807;
    float4 _818 = r0;
    _818.w = asfloat(max(asint(r0.w), (-asint(r0.w))));
    r0 = _818;
    uint _825 = asuint(r0.w);
    float4 _830 = r0;
    _830.z = asfloat((_825 != 0u) ? (asuint(r0.z) % _825) : 4294967295u);
    r0 = _830;
    float4 _837 = r0;
    _837.w = asfloat(-asint(r0.z));
    r0 = _837;
    float4 _848 = r0;
    _848.y = (asuint(r0.y) != 0u) ? r0.w : r0.z;
    r0 = _848;
    float4 _854 = r0;
    _854.y = float(asint(r0.y));
    r0 = _854;
    float2 _860 = float2(asint(shader_in[3].xy));
    r0 = float4(r0.x, r0.y, _860.x, _860.y);
    float2 _872 = asfloat(uint2(1065353216u, 1065353216u)) / float2(cb3_m[8].x, cb3_m[8].y);
    r1 = float4(_872.x, _872.y, r1.z, r1.w);
    float2 _879 = r0.zw * r1.xy;
    r0 = float4(r0.x, r0.y, _879.x, _879.y);
    float4 _890 = o3;
    _890.x = (r0.y * r1.x) + r0.z;
    o3 = _890;
    float4 _900 = o3;
    _900.y = (r0.x * r1.y) + r0.w;
    o3 = _900;
    float4 _905 = o3;
    _905.z = shader_in[2].x;
    o3 = _905;
    float4 _911 = o3;
    _911.w = shader_in[4].x;
    o3 = _911;
}

void vert_main()
{
    shader_in[0] = v0;
    shader_in[1] = v1;
    float4 _920 = shader_in[2];
    _920.x = v2;
    shader_in[2] = _920;
    float2 _923 = asfloat(v3);
    shader_in[3] = float4(_923.x, _923.y, shader_in[3].z, shader_in[3].w);
    float4 _929 = shader_in[4];
    _929.x = v4;
    shader_in[4] = _929;
    float4 _933 = shader_in[5];
    _933.x = v5;
    shader_in[5] = _933;
    shader_in[6] = v6;
    shader_in[7] = v7;
    vs_main();
    gl_Position = o0;
    gl_PointSize = 1.0f;
    gl_Position.x = gl_Position.x - gl_HalfPixel.x * gl_Position.w;
    gl_Position.y = gl_Position.y + gl_HalfPixel.y * gl_Position.w;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    v0 = stage_input.v0;
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    v5 = stage_input.v5;
    v6 = stage_input.v6;
    v7 = stage_input.v7;
    vert_main();
    SPIRV_Cross_Output stage_output;
    stage_output.gl_Position = gl_Position;
    stage_output.gl_PointSize = gl_PointSize;
    return stage_output;
}
