cbuffer cb0_t : register(b160)
{
    float4 cb0_m[14] : packoffset(c0);
};

cbuffer cb3_t : register(b163)
{
    float4 cb3_m[9] : packoffset(c0);
};

cbuffer cb6_t : register(b166)
{
    float4 cb6_m[3] : packoffset(c0);
};

uniform float4 gl_HalfPixel;

static float4 gl_Position;
static float gl_PointSize;
static float3 v0;
static float4 v1;
static float v2;
static float2 v3;
static float v4;
static float v5;
static float v6;
static float3 v7;

struct SPIRV_Cross_Input
{
    float3 v0 : TEXCOORD0;
    float4 v1 : TEXCOORD1;
    float v2 : TEXCOORD2;
    float2 v3 : TEXCOORD3;
    float v4 : TEXCOORD4;
    float v5 : TEXCOORD5;
    float v6 : TEXCOORD6;
    float3 v7 : TEXCOORD7;
};

struct SPIRV_Cross_Output
{
    float4 gl_Position : POSITION;
    float gl_PointSize : PSIZE;
};

static float4 shader_in[8];
static float4 o0;
static float4 o1;
static float o2;
static float4 o3;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;
static float4 r5;
static float4 r6;

void vs_main()
{
    float3 _65 = float3(cb0_m[8].x, cb0_m[8].y, cb0_m[8].z);
    r0 = float4(_65.x, _65.y, _65.z, r0.w);
    float3 _78 = -float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z);
    r1 = float4(_78.x, _78.y, _78.z, r1.w);
    float4 _84 = r1;
    _84.w = asfloat(1065353216u);
    r1 = _84;
    float4 _95 = float4(cb0_m[8].x, cb0_m[8].y, cb0_m[8].z, cb0_m[8].w);
    float4 _109 = r0;
    _109.w = mad(_95.w, r1.w, mad(_95.z, r1.z, mad(_95.y, r1.y, _95.x * r1.x)));
    r0 = _109;
    r2 = float4(shader_in[7].xyz.x, shader_in[7].xyz.y, shader_in[7].xyz.z, r2.w);
    float4 _119 = r2;
    _119.w = asfloat(1065353216u);
    r2 = _119;
    float4 _136 = r3;
    _136.x = mad(r0.w, r2.w, mad(r0.z, r2.z, mad(r0.y, r2.y, r0.x * r2.x)));
    r3 = _136;
    float4 _148 = float4(cb0_m[9].x, cb0_m[9].y, cb0_m[9].z, cb0_m[9].w);
    float4 _163 = r4;
    _163.w = mad(_148.w, r1.w, mad(_148.z, r1.z, mad(_148.y, r1.y, _148.x * r1.x)));
    r4 = _163;
    float4 _175 = float4(cb0_m[10].x, cb0_m[10].y, cb0_m[10].z, cb0_m[10].w);
    float4 _189 = r1;
    _189.w = mad(_175.w, r1.w, mad(_175.z, r1.z, mad(_175.y, r1.y, _175.x * r1.x)));
    r1 = _189;
    float3 _198 = float3(cb0_m[9].x, cb0_m[9].y, cb0_m[9].z);
    r4 = float4(_198.x, _198.y, _198.z, r4.w);
    float4 _215 = r3;
    _215.y = mad(r4.w, r2.w, mad(r4.z, r2.z, mad(r4.y, r2.y, r4.x * r2.x)));
    r3 = _215;
    r5 = float4(shader_in[0].xyz.x, shader_in[0].xyz.y, shader_in[0].xyz.z, r5.w);
    float4 _224 = r5;
    _224.w = asfloat(1065353216u);
    r5 = _224;
    float4 _240 = r0;
    _240.x = mad(r0.w, r5.w, mad(r0.z, r5.z, mad(r0.y, r5.y, r0.x * r5.x)));
    r0 = _240;
    float4 _256 = r0;
    _256.y = mad(r4.w, r5.w, mad(r4.z, r5.z, mad(r4.y, r5.y, r4.x * r5.x)));
    r0 = _256;
    float2 _263 = (-r3.xy) + r0.xy;
    r4 = float4(_263.x, _263.y, r4.z, r4.w);
    float4 _276 = r0;
    _276.w = mad(r4.xy.y, r4.xy.y, r4.xy.x * r4.xy.x);
    r0 = _276;
    float4 _281 = r0;
    _281.w = rsqrt(r0.w);
    r0 = _281;
    float2 _291 = shader_in[4].xx * asfloat(uint2(1056964608u, 1056964608u));
    r4 = float4(r4.x, r4.y, _291.x, _291.y);
    float3 _298 = r0.www * r4.xyz;
    r4 = float4(_298.x, _298.y, _298.z, r4.w);
    float4 _307 = r6;
    _307.x = shader_in[4].x * asfloat(1056964608u);
    r6 = _307;
    float4 _310 = r6;
    _310.z = asfloat(0u);
    r6 = _310;
    float3 _319 = float3(cb0_m[10].x, cb0_m[10].y, cb0_m[10].z);
    r1 = float4(_319.x, _319.y, _319.z, r1.w);
    float4 _336 = r0;
    _336.z = mad(r1.w, r5.w, mad(r1.z, r5.z, mad(r1.y, r5.y, r1.x * r5.x)));
    r0 = _336;
    float4 _352 = r3;
    _352.z = mad(r1.w, r2.w, mad(r1.z, r2.z, mad(r1.y, r2.y, r1.x * r2.x)));
    r3 = _352;
    float3 _362 = ((-r4.xyz) * r6.xxz) + r3.xyz;
    r1 = float4(_362.x, _362.y, _362.z, r1.w);
    float3 _372 = (r4.xyz * r6.xxz) + r0.xyz;
    r0 = float4(_372.x, _372.y, _372.z, r0.w);
    float2 _379 = asfloat(uint2(1056964608u, 1056964608u));
    bool2 _382 = bool2(shader_in[3].xy.x < _379.x, shader_in[3].xy.y < _379.y);
    float2 _387 = asfloat(uint2(_382.x ? uint2(4294967295u, 4294967295u).x : uint2(0u, 0u).x, _382.y ? uint2(4294967295u, 4294967295u).y : uint2(0u, 0u).y));
    r2 = float4(_387.x, _387.y, r2.z, r2.w);
    uint3 _393 = asuint(r2.xxx);
    bool3 _400 = bool3(_393.x != uint3(0u, 0u, 0u).x, _393.y != uint3(0u, 0u, 0u).y, _393.z != uint3(0u, 0u, 0u).z);
    float3 _401 = float3(_400.x ? r0.xyz.x : r1.xyz.x, _400.y ? r0.xyz.y : r1.xyz.y, _400.z ? r0.xyz.z : r1.xyz.z);
    r0 = float4(_401.x, _401.y, _401.z, r0.w);
    float4 _410 = r1;
    _410.x = r4.w * (-r4.y);
    r1 = _410;
    float4 _417 = r1;
    _417.y = r4.w * r4.x;
    r1 = _417;
    float2 _420 = asfloat(uint2(0u, 1065353216u));
    r1 = float4(r1.x, r1.y, _420.x, _420.y);
    float3 _427 = r0.xyz + r1.xyz;
    r2 = float4(_427.x, r2.y, _427.y, _427.z);
    float3 _435 = r0.xyz + (-r1.xyz);
    r0 = float4(_435.x, _435.y, _435.z, r0.w);
    uint3 _440 = asuint(r2.yyy);
    bool3 _445 = bool3(_440.x != uint3(0u, 0u, 0u).x, _440.y != uint3(0u, 0u, 0u).y, _440.z != uint3(0u, 0u, 0u).z);
    float3 _446 = float3(_445.x ? r2.xzw.x : r0.xyz.x, _445.y ? r2.xzw.y : r0.xyz.y, _445.z ? r2.xzw.z : r0.xyz.z);
    r0 = float4(_446.x, _446.y, _446.z, r0.w);
    float3 _459 = r0.yyy * float3(cb0_m[9].x, cb0_m[9].y, cb0_m[9].z);
    r1 = float4(_459.x, _459.y, _459.z, r1.w);
    float3 _475 = (float3(cb0_m[8].x, cb0_m[8].y, cb0_m[8].z) * r0.xxx) + r1.xyz;
    r0 = float4(_475.x, _475.y, r0.z, _475.z);
    float3 _491 = (float3(cb0_m[10].x, cb0_m[10].y, cb0_m[10].z) * r0.zzz) + r0.xyw;
    r0 = float4(_491.x, _491.y, _491.z, r0.w);
    float3 _504 = r0.xyz + float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z);
    r0 = float4(_504.x, _504.y, _504.z, r0.w);
    float4 _508 = r0;
    _508.w = asfloat(1065353216u);
    r0 = _508;
    float4 _519 = float4(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z, cb6_m[0].w);
    float4 _533 = r1;
    _533.x = mad(_519.w, r0.w, mad(_519.z, r0.z, mad(_519.y, r0.y, _519.x * r0.x)));
    r1 = _533;
    float4 _545 = float4(cb6_m[1].x, cb6_m[1].y, cb6_m[1].z, cb6_m[1].w);
    float4 _559 = r1;
    _559.y = mad(_545.w, r0.w, mad(_545.z, r0.z, mad(_545.y, r0.y, _545.x * r0.x)));
    r1 = _559;
    float4 _571 = float4(cb6_m[2].x, cb6_m[2].y, cb6_m[2].z, cb6_m[2].w);
    float4 _585 = r1;
    _585.z = mad(_571.w, r0.w, mad(_571.z, r0.z, mad(_571.y, r0.y, _571.x * r0.x)));
    r1 = _585;
    float4 _596 = float4(cb0_m[0].x, cb0_m[0].y, cb0_m[0].z, cb0_m[0].w);
    float4 _610 = o0;
    _610.x = mad(_596.w, r1.w, mad(_596.z, r1.z, mad(_596.y, r1.y, _596.x * r1.x)));
    o0 = _610;
    float4 _621 = float4(cb0_m[1].x, cb0_m[1].y, cb0_m[1].z, cb0_m[1].w);
    float4 _635 = o0;
    _635.y = mad(_621.w, r1.w, mad(_621.z, r1.z, mad(_621.y, r1.y, _621.x * r1.x)));
    o0 = _635;
    float4 _646 = float4(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z, cb0_m[2].w);
    float4 _660 = o0;
    _660.z = mad(_646.w, r1.w, mad(_646.z, r1.z, mad(_646.y, r1.y, _646.x * r1.x)));
    o0 = _660;
    float4 _671 = float4(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z, cb0_m[3].w);
    float4 _685 = o0;
    _685.w = mad(_671.w, r1.w, mad(_671.z, r1.z, mad(_671.y, r1.y, _671.x * r1.x)));
    o0 = _685;
    float3 _698 = r1.xyz + (-float3(cb0_m[11].x, cb0_m[11].y, cb0_m[11].z));
    r0 = float4(_698.x, _698.y, _698.z, r0.w);
    float3 _717 = (shader_in[1].zyx * float3(cb3_m[7].x, cb3_m[7].y, cb3_m[7].z)) + (-shader_in[1].zyx);
    r1 = float4(_717.x, _717.y, _717.z, r1.w);
    float3 _730 = (cb3_m[7].w.xxx * r1.xyz) + shader_in[1].zyx;
    r1 = float4(_730.x, _730.y, _730.z, r1.w);
    float3 _760 = (float3(cb3_m[6].x, cb3_m[6].y, cb3_m[6].z) * float3(cb3_m[7].x, cb3_m[7].y, cb3_m[7].z)) + (-float3(cb3_m[6].x, cb3_m[6].y, cb3_m[6].z));
    r2 = float4(_760.x, _760.y, _760.z, r2.w);
    float3 _778 = (cb3_m[7].w.xxx * r2.xyz) + float3(cb3_m[6].x, cb3_m[6].y, cb3_m[6].z);
    r2 = float4(_778.x, _778.y, _778.z, r2.w);
    float3 _785 = r1.xyz + r2.xyz;
    o1 = float4(_785.x, _785.y, _785.z, o1.w);
    float4 _796 = o1;
    _796.w = shader_in[1].w * cb3_m[5].x;
    o1 = _796;
    float4 _805 = r0;
    _805.w = r0.y * cb0_m[13].x;
    r0 = _805;
    float4 _812 = r1;
    _812.x = r0.w * asfloat(3216550459u);
    r1 = _812;
    float4 _817 = r1;
    _817.x = exp2(r1.x);
    r1 = _817;
    float4 _824 = r1;
    _824.x = (-r1.x) + asfloat(1065353216u);
    r1 = _824;
    float4 _831 = r0;
    _831.w = r1.x / r0.w;
    r0 = _831;
    float4 _841 = r1;
    _841.x = asfloat((asfloat(1008981770u) < abs(r0.y)) ? 4294967295u : 0u);
    r1 = _841;
    float4 _856 = r0;
    _856.x = mad(r0.xyz.z, r0.xyz.z, mad(r0.xyz.y, r0.xyz.y, r0.xyz.x * r0.xyz.x));
    r0 = _856;
    float4 _861 = r0;
    _861.x = sqrt(r0.x);
    r0 = _861;
    float4 _869 = r0;
    _869.x = r0.x * cb0_m[13].y;
    r0 = _869;
    float4 _879 = r0;
    _879.y = (asuint(r1.x) != 0u) ? r0.w : asfloat(1065353216u);
    r0 = _879;
    float4 _891 = r0;
    _891.x = (r0.y * r0.x) + (-cb0_m[13].w);
    r0 = _891;
    float4 _897 = r0;
    _897.x = exp2(-r0.x);
    r0 = _897;
    float4 _903 = r0;
    _903.x = min(r0.x, asfloat(1065353216u));
    r0 = _903;
    o2 = (-r0.x) + asfloat(1065353216u);
    float4 _916 = r0;
    _916.x = shader_in[6].x + asfloat(841731191u);
    r0 = _916;
    float4 _925 = r0;
    _925.y = cb3_m[8].y * cb3_m[8].x;
    r0 = _925;
    float4 _930 = r0;
    _930.z = trunc(r0.y);
    r0 = _930;
    float4 _936 = r0;
    _936.y = asfloat(int(r0.y));
    r0 = _936;
    float4 _943 = r0;
    _943.x = r0.x * r0.z;
    r0 = _943;
    float4 _949 = r0;
    _949.x = asfloat(int(r0.x));
    r0 = _949;
    float2 _960 = asfloat(max(asint(r0.yx), (-asint(r0.yx))));
    r0 = float4(r0.x, _960.x, _960.y, r0.w);
    float4 _969 = r0;
    _969.x = asfloat(asuint(r0.x) & 2147483648u);
    r0 = _969;
    uint _976 = asuint(r0.y);
    float4 _981 = r0;
    _981.y = asfloat((_976 != 0u) ? (asuint(r0.z) % _976) : 4294967295u);
    r0 = _981;
    float4 _988 = r0;
    _988.z = asfloat(-asint(r0.y));
    r0 = _988;
    float4 _999 = r0;
    _999.x = (asuint(r0.x) != 0u) ? r0.z : r0.y;
    r0 = _999;
    float4 _1006 = r0;
    _1006.y = asfloat(asuint(r0.x) & 2147483648u);
    r0 = _1006;
    float4 _1017 = r0;
    _1017.z = asfloat(max(asint(r0.x), (-asint(r0.x))));
    r0 = _1017;
    float4 _1023 = r0;
    _1023.x = float(asint(r0.x));
    r0 = _1023;
    float4 _1031 = r0;
    _1031.x = r0.x / cb3_m[8].x;
    r0 = _1031;
    float4 _1036 = r0;
    _1036.x = trunc(r0.x);
    r0 = _1036;
    float4 _1043 = r0;
    _1043.w = asfloat(int(cb3_m[8].x));
    r0 = _1043;
    float4 _1054 = r0;
    _1054.w = asfloat(max(asint(r0.w), (-asint(r0.w))));
    r0 = _1054;
    uint _1061 = asuint(r0.w);
    float4 _1066 = r0;
    _1066.z = asfloat((_1061 != 0u) ? (asuint(r0.z) % _1061) : 4294967295u);
    r0 = _1066;
    float4 _1073 = r0;
    _1073.w = asfloat(-asint(r0.z));
    r0 = _1073;
    float4 _1084 = r0;
    _1084.y = (asuint(r0.y) != 0u) ? r0.w : r0.z;
    r0 = _1084;
    float4 _1090 = r0;
    _1090.y = float(asint(r0.y));
    r0 = _1090;
    float2 _1100 = asfloat(uint2(1065353216u, 1065353216u)) / float2(cb3_m[8].x, cb3_m[8].y);
    r0 = float4(r0.x, r0.y, _1100.x, _1100.y);
    float2 _1108 = r0.zw * shader_in[3].xy;
    r1 = float4(_1108.x, _1108.y, r1.z, r1.w);
    float4 _1119 = o3;
    _1119.x = (r0.y * r0.z) + r1.x;
    o3 = _1119;
    float4 _1129 = o3;
    _1129.y = (r0.x * r0.w) + r1.y;
    o3 = _1129;
    float4 _1134 = o3;
    _1134.z = shader_in[2].x;
    o3 = _1134;
    float4 _1139 = o3;
    _1139.w = shader_in[5].x;
    o3 = _1139;
}

void vert_main()
{
    shader_in[0] = float4(v0.x, v0.y, v0.z, shader_in[0].w);
    shader_in[1] = v1;
    float4 _1150 = shader_in[2];
    _1150.x = v2;
    shader_in[2] = _1150;
    shader_in[3] = float4(v3.x, v3.y, shader_in[3].z, shader_in[3].w);
    float4 _1158 = shader_in[4];
    _1158.x = v4;
    shader_in[4] = _1158;
    float4 _1162 = shader_in[5];
    _1162.x = v5;
    shader_in[5] = _1162;
    float4 _1166 = shader_in[6];
    _1166.x = v6;
    shader_in[6] = _1166;
    shader_in[7] = float4(v7.x, v7.y, v7.z, shader_in[7].w);
    vs_main();
    gl_Position = o0;
    gl_PointSize = 1.0f;
    gl_Position.x = gl_Position.x - gl_HalfPixel.x * gl_Position.w;
    gl_Position.y = gl_Position.y + gl_HalfPixel.y * gl_Position.w;
}

SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
{
    v0 = stage_input.v0;
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    v5 = stage_input.v5;
    v6 = stage_input.v6;
    v7 = stage_input.v7;
    vert_main();
    SPIRV_Cross_Output stage_output;
    stage_output.gl_Position = gl_Position;
    stage_output.gl_PointSize = gl_PointSize;
    return stage_output;
}
