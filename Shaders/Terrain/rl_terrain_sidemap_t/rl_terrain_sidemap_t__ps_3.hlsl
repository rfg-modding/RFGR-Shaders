cbuffer cb0_t : register(b0)
{
    float4 cb0_m[8] : packoffset(c0);
};

cbuffer cb1_t : register(b1)
{
    float4 cb1_m[1] : packoffset(c0);
};

cbuffer cb6_t : register(b6)
{
    float4 cb6_m[1] : packoffset(c0);
};

cbuffer cb2_t : register(b2)
{
    float4 cb2_m[18] : packoffset(c0);
};

uniform sampler2D SPIRV_Cross_Combinedt2s2;
uniform sampler2D SPIRV_Cross_Combinedt1s1;
uniform sampler2D SPIRV_Cross_Combinedt0s0;
uniform sampler2D SPIRV_Cross_Combinedt4s4;
uniform sampler2D SPIRV_Cross_Combinedt3s3;
uniform sampler2D SPIRV_Cross_Combinedt9s9;
uniform sampler2D SPIRV_Cross_Combinedt15s15;

static float4 gl_FragCoord;
static float2 v1;
static float3 v2;
static float3 v3;
static float4 v4;
static float3 v5;
static float4 v6;
static float4 v7;
static float4 v8;

struct SPIRV_Cross_Input
{
    float2 v1 : TEXCOORD1;
    float3 v2 : TEXCOORD2;
    float3 v3 : TEXCOORD3;
    float4 v4 : TEXCOORD4;
    float3 v5 : TEXCOORD5;
    float4 v6 : TEXCOORD6;
    float4 v7 : TEXCOORD7;
    float4 v8 : TEXCOORD8;
    float4 gl_FragCoord : VPOS;
};

static float4 shader_in[9];
static float4 o0;
static float4 r0;
static float4 r1;
static float4 r2;
static float4 r3;
static float4 r4;
static float4 r5;

void ps_main()
{
    float4 _86 = r0;
    _86.x = mad(shader_in[5].xyz.z, shader_in[5].xyz.z, mad(shader_in[5].xyz.y, shader_in[5].xyz.y, shader_in[5].xyz.x * shader_in[5].xyz.x));
    r0 = _86;
    float4 _91 = r0;
    _91.x = sqrt(r0.x);
    r0 = _91;
    float4 _98 = r0;
    _98.x = r0.x + asfloat(3281059840u);
    r0 = _98;
    float4 _108 = r0;
    _108.x = clamp(r0.x * asfloat(1023969417u), 0.0f, 1.0f);
    r0 = _108;
    float4 _115 = r0;
    _115.y = r0.x + r0.x;
    r0 = _115;
    r1 = tex2Dbias(SPIRV_Cross_Combinedt2s2, float4(shader_in[8].zwzz.xy, 0.0, r0.y));
    float3 _140 = (r1.xwy * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r1 = float4(_140.x, _140.y, r1.z, _140.z);
    float4 _148 = r1;
    _148.x = r1.y * r1.x;
    r1 = _148;
    float4 _159 = r0;
    _159.z = ((-r1.x) * r1.x) + asfloat(1065353216u);
    r0 = _159;
    float4 _170 = r0;
    _170.z = ((-r1.w) * r1.w) + r0.z;
    r0 = _170;
    float4 _177 = r0;
    _177.z = max(r0.z, asfloat(0u));
    r0 = _177;
    float4 _182 = r1;
    _182.z = sqrt(r0.z);
    r1 = _182;
    r2 = tex2Dbias(SPIRV_Cross_Combinedt2s2, float4(shader_in[8].xyxx.xy, 0.0, r0.y));
    float3 _200 = (r2.xwy * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r2 = float4(_200.x, _200.y, r2.z, _200.z);
    float4 _208 = r2;
    _208.x = r2.y * r2.x;
    r2 = _208;
    float4 _218 = r0;
    _218.z = ((-r2.x) * r2.x) + asfloat(1065353216u);
    r0 = _218;
    float4 _229 = r0;
    _229.z = ((-r2.w) * r2.w) + r0.z;
    r0 = _229;
    float4 _235 = r0;
    _235.z = max(r0.z, asfloat(0u));
    r0 = _235;
    float4 _240 = r2;
    _240.z = sqrt(r0.z);
    r2 = _240;
    float3 _247 = r1.xwz + (-r2.xwz);
    r1 = float4(_247.x, _247.y, _247.z, r1.w);
    float4 _260 = r0;
    _260.z = abs(shader_in[4].z) + abs(shader_in[4].x);
    r0 = _260;
    float4 _269 = r0;
    _269.z = abs(shader_in[4].x) / r0.z;
    r0 = _269;
    float4 _276 = r0;
    _276.z = r0.z + asfloat(3202770534u);
    r0 = _276;
    float4 _284 = r0;
    _284.z = clamp(r0.z * asfloat(1092616192u), 0.0f, 1.0f);
    r0 = _284;
    float3 _293 = (r0.zzz * r1.xyz) + r2.xwz;
    r1 = float4(_293.x, _293.y, _293.z, r1.w);
    r2 = tex2Dbias(SPIRV_Cross_Combinedt1s1, float4(shader_in[7].zwzz.xy, 0.0, r0.y));
    float3 _312 = (r2.xwy * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r2 = float4(_312.x, _312.y, r2.z, _312.z);
    float4 _320 = r2;
    _320.x = r2.y * r2.x;
    r2 = _320;
    float4 _330 = r0;
    _330.w = ((-r2.x) * r2.x) + asfloat(1065353216u);
    r0 = _330;
    float4 _341 = r0;
    _341.w = ((-r2.w) * r2.w) + r0.w;
    r0 = _341;
    float4 _347 = r0;
    _347.w = max(r0.w, asfloat(0u));
    r0 = _347;
    float4 _352 = r2;
    _352.z = sqrt(r0.w);
    r2 = _352;
    r3 = tex2Dbias(SPIRV_Cross_Combinedt1s1, float4(shader_in[7].xyxx.xy, 0.0, r0.y));
    float3 _370 = (r3.xwy * asfloat(uint3(1073741824u, 1073741824u, 1073741824u))) + asfloat(uint3(3212836864u, 3212836864u, 3212836864u));
    r3 = float4(_370.x, _370.y, r3.z, _370.z);
    float4 _378 = r3;
    _378.x = r3.y * r3.x;
    r3 = _378;
    float4 _388 = r0;
    _388.w = ((-r3.x) * r3.x) + asfloat(1065353216u);
    r0 = _388;
    float4 _399 = r0;
    _399.w = ((-r3.w) * r3.w) + r0.w;
    r0 = _399;
    float4 _405 = r0;
    _405.w = max(r0.w, asfloat(0u));
    r0 = _405;
    float4 _410 = r3;
    _410.z = sqrt(r0.w);
    r3 = _410;
    float3 _417 = r2.xwz + (-r3.xwz);
    r2 = float4(_417.x, _417.y, _417.z, r2.w);
    float3 _427 = (r0.zzz * r2.xyz) + r3.xwz;
    r2 = float4(_427.x, _427.y, _427.z, r2.w);
    float3 _435 = r1.xyz + (-r2.xyz);
    r1 = float4(_435.x, _435.y, _435.z, r1.w);
    r3 = tex2D(SPIRV_Cross_Combinedt0s0, shader_in[1].xyxx.xy);
    float4 _454 = r0;
    _454.w = (r3.w * asfloat(1132396544u)) + asfloat(3212836864u);
    r0 = _454;
    float4 _461 = r0;
    _461.w = r0.w * asfloat(998343822u);
    r0 = _461;
    float3 _470 = (r0.www * r1.xyz) + r2.xyz;
    r1 = float4(_470.x, _470.y, _470.z, r1.w);
    float3 _478 = (-r1.xyz) + asfloat(uint3(0u, 0u, 1065353216u));
    r2 = float4(_478.x, _478.y, _478.z, r2.w);
    float3 _488 = (r0.xxx * r2.xyz) + r1.xyz;
    r1 = float4(_488.x, _488.y, _488.z, r1.w);
    float4 _507 = r1;
    _507.w = mad(shader_in[3].xyz.z, shader_in[3].xyz.z, mad(shader_in[3].xyz.y, shader_in[3].xyz.y, shader_in[3].xyz.x * shader_in[3].xyz.x));
    r1 = _507;
    float4 _512 = r1;
    _512.w = rsqrt(r1.w);
    r1 = _512;
    float3 _519 = r1.www * shader_in[3].xyz;
    r2 = float4(_519.x, _519.y, _519.z, r2.w);
    float4 _538 = r1;
    _538.w = mad(shader_in[2].xyz.z, shader_in[2].xyz.z, mad(shader_in[2].xyz.y, shader_in[2].xyz.y, shader_in[2].xyz.x * shader_in[2].xyz.x));
    r1 = _538;
    float4 _543 = r1;
    _543.w = rsqrt(r1.w);
    r1 = _543;
    float3 _553 = (shader_in[2].xyz * r1.www) + r2.xyz;
    r3 = float4(_553.x, _553.y, _553.z, r3.w);
    float3 _558 = -r2.xyz;
    float4 _570 = r2;
    _570.x = mad(_558.z, r1.xyz.z, mad(_558.y, r1.xyz.y, _558.x * r1.xyz.x));
    r2 = _570;
    float4 _576 = r2;
    _576.x = r2.x + asfloat(1065353216u);
    r2 = _576;
    float4 _581 = r2;
    _581.x = log2(r2.x);
    r2 = _581;
    float4 _588 = r2;
    _588.x = r2.x * asfloat(1083179008u);
    r2 = _588;
    float4 _593 = r2;
    _593.x = exp2(r2.x);
    r2 = _593;
    float4 _599 = r2;
    _599.x = min(r2.x, asfloat(1065353216u));
    r2 = _599;
    float3 _606 = r1.www * shader_in[2].xyz;
    r2 = float4(r2.x, _606.x, _606.y, _606.z);
    float4 _623 = r1;
    _623.w = clamp(mad(r1.xyz.z, r2.yzw.z, mad(r1.xyz.y, r2.yzw.y, r1.xyz.x * r2.yzw.x)), 0.0f, 1.0f);
    r1 = _623;
    float4 _638 = r2;
    _638.y = mad(r3.xyz.z, r3.xyz.z, mad(r3.xyz.y, r3.xyz.y, r3.xyz.x * r3.xyz.x));
    r2 = _638;
    float4 _643 = r2;
    _643.y = rsqrt(r2.y);
    r2 = _643;
    float3 _649 = r2.yyy * r3.xyz;
    r2 = float4(r2.x, _649.x, _649.y, _649.z);
    float4 _666 = r2;
    _666.y = clamp(mad(r1.xyz.z, r2.yzw.z, mad(r1.xyz.y, r2.yzw.y, r1.xyz.x * r2.yzw.x)), 0.0f, 1.0f);
    r2 = _666;
    float4 _683 = r1;
    _683.x = mad(r1.xyz.z, shader_in[6].xyz.z, mad(r1.xyz.y, shader_in[6].xyz.y, r1.xyz.x * shader_in[6].xyz.x));
    r1 = _683;
    float4 _693 = r1;
    _693.x = clamp((r1.x * asfloat(1056964608u)) + asfloat(1056964608u), 0.0f, 1.0f);
    r1 = _693;
    float4 _700 = r1;
    _700.y = r2.y + asfloat(925353388u);
    r1 = _700;
    r3 = tex2Dbias(SPIRV_Cross_Combinedt4s4, float4(shader_in[8].zwzz.xy, 0.0, r0.y));
    r4 = tex2Dbias(SPIRV_Cross_Combinedt4s4, float4(shader_in[8].xyxx.xy, 0.0, r0.y));
    r3 += (-r4);
    r3 = (r0.zzzz * r3) + r4;
    r4 = tex2Dbias(SPIRV_Cross_Combinedt3s3, float4(shader_in[7].zwzz.xy, 0.0, r0.y));
    r5 = tex2Dbias(SPIRV_Cross_Combinedt3s3, float4(shader_in[7].xyxx.xy, 0.0, r0.y));
    r4 += (-r5);
    r4 = (r0.zzzz * r4) + r5;
    float4 _770 = r0;
    _770.y = r3.w + (-r4.w);
    r0 = _770;
    float4 _780 = r0;
    _780.y = (r0.w * r0.y) + r4.w;
    r0 = _780;
    float3 _797 = r4.xyz * float3(cb2_m[16].x, cb2_m[16].y, cb2_m[16].z);
    r2 = float4(r2.x, _797.x, _797.y, _797.z);
    float4 _809 = r0;
    _809.y = (r0.x * (-r0.y)) + r0.y;
    r0 = _809;
    float4 _816 = r0;
    _816.y = (-r0.y) + asfloat(1065353216u);
    r0 = _816;
    float4 _823 = r0;
    _823.y = r0.y * r1.y;
    r0 = _823;
    float3 _840 = (r3.xyz * float3(cb2_m[17].x, cb2_m[17].y, cb2_m[17].z)) + (-r2.yzw);
    r3 = float4(_840.x, _840.y, _840.z, r3.w);
    float3 _850 = (r0.www * r3.xyz) + r2.yzw;
    r2 = float4(r2.x, _850.x, _850.y, _850.z);
    r3 = tex2D(SPIRV_Cross_Combinedt9s9, shader_in[1].xyxx.xy);
    float3 _865 = r3.xyz * r3.xyz;
    r4 = float4(_865.x, _865.y, _865.z, r4.w);
    float3 _876 = (r3.xyz * r4.xyz) + (-r2.yzw);
    r3 = float4(_876.x, _876.y, _876.z, r3.w);
    float3 _886 = (r0.xxx * r3.xyz) + r2.yzw;
    r0 = float4(_886.x, r0.y, _886.y, _886.z);
    float3 _893 = r0.xzw * r0.yyy;
    r2 = float4(r2.x, _893.x, _893.y, _893.z);
    float3 _900 = r2.xxx * r2.yzw;
    r2 = float4(_900.x, _900.y, _900.z, r2.w);
    float3 _908 = r2.xyz * asfloat(uint3(1148846080u, 1148846080u, 1148846080u));
    r2 = float4(_908.x, _908.y, _908.z, r2.w);
    float3 _918 = (r0.xzw * r1.www) + r2.xyz;
    r1 = float4(r1.x, _918.x, _918.y, _918.z);
    float3 _931 = r1.yzw * float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z);
    r1 = float4(r1.x, _931.x, _931.y, _931.z);
    float2 _944 = shader_in[0].xy * float2(cb0_m[6].z, cb0_m[6].w);
    r2 = float4(_944.x, _944.y, r2.z, r2.w);
    r2 = tex2D(SPIRV_Cross_Combinedt15s15, r2.xyxx.xy);
    float3 _958 = r1.yzw * r2.yyy;
    r1 = float4(r1.x, _958.x, _958.y, _958.z);
    float4 _967 = r0;
    _967.y = (r1.x * asfloat(1073741824u)) + asfloat(3212836864u);
    r0 = _967;
    float4 _976 = r0;
    _976.y = abs(r0.y) + abs(r0.y);
    r0 = _976;
    float4 _986 = r0;
    _986.y = ((-r0.y) * r0.y) + asfloat(1065353216u);
    r0 = _986;
    float4 _992 = r0;
    _992.y = max(r0.y, asfloat(0u));
    r0 = _992;
    float4 _1000 = r0;
    _1000.y = r0.y * cb0_m[7].y;
    r0 = _1000;
    float3 _1024 = (float3(cb1_m[0].x, cb1_m[0].y, cb1_m[0].z) * cb0_m[7].x.xxx) + (-float3(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z));
    r2 = float4(_1024.x, _1024.y, _1024.z, r2.w);
    float3 _1040 = (r1.xxx * r2.xyz) + float3(cb0_m[3].x, cb0_m[3].y, cb0_m[3].z);
    r2 = float4(_1040.x, _1040.y, _1040.z, r2.w);
    float3 _1054 = (-r2.xyz) + float3(cb0_m[2].x, cb0_m[2].y, cb0_m[2].z);
    r3 = float4(_1054.x, _1054.y, _1054.z, r3.w);
    float3 _1064 = (r0.yyy * r3.xyz) + r2.xyz;
    r2 = float4(_1064.x, _1064.y, _1064.z, r2.w);
    float3 _1074 = (r2.xyz * r0.xzw) + r1.yzw;
    r0 = float4(_1074.x, _1074.y, _1074.z, r0.w);
    float4 _1083 = r0;
    _1083.w = (-shader_in[6].w) + asfloat(1065353216u);
    r0 = _1083;
    float3 _1089 = r0.xyz * r0.www;
    r0 = float4(_1089.x, _1089.y, _1089.z, r0.w);
    float3 _1106 = (shader_in[6].www * float3(cb0_m[4].x, cb0_m[4].y, cb0_m[4].z)) + r0.xyz;
    r0 = float4(_1106.x, _1106.y, _1106.z, r0.w);
    float4 _1112 = r0;
    _1112.w = shader_in[4].w;
    r0 = _1112;
    o0 = r0 * float4(cb6_m[0].x, cb6_m[0].y, cb6_m[0].z, cb6_m[0].w);
}

void frag_main()
{
    shader_in[1] = float4(v1.x, v1.y, shader_in[1].z, shader_in[1].w);
    shader_in[2] = float4(v2.x, v2.y, v2.z, shader_in[2].w);
    shader_in[3] = float4(v3.x, v3.y, v3.z, shader_in[3].w);
    shader_in[4] = v4;
    shader_in[5] = float4(v5.x, v5.y, v5.z, shader_in[5].w);
    shader_in[6] = v6;
    shader_in[7] = v7;
    shader_in[8] = v8;
    float4 _1152 = gl_FragCoord;
    _1152.w = 1.0f / _1152.w;
    shader_in[0] = float4(_1152.xy.x, _1152.xy.y, shader_in[0].z, shader_in[0].w);
    ps_main();
}

void main(SPIRV_Cross_Input stage_input)
{
    gl_FragCoord = stage_input.gl_FragCoord + float4(0.5f, 0.5f, 0.0f, 0.0f);
    v1 = stage_input.v1;
    v2 = stage_input.v2;
    v3 = stage_input.v3;
    v4 = stage_input.v4;
    v5 = stage_input.v5;
    v6 = stage_input.v6;
    v7 = stage_input.v7;
    v8 = stage_input.v8;
    frag_main();
}
